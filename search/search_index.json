{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"My projects # Here are some project that I created. machine learning # project name explanation NRE Neural Relation Extraction (NRE) paper-and-code Read paper about AI and code it machine-learning Natural-Language-Processing-with-Python decompose-jieba math # project name explanation math redis # project name explanation decompose-redis Decompose Redis operating system # project name explanation linux_in_action Unix-like-operating-system My knowledge base of Unix-like operation system algorithm and data structure # project name explanation algorithm My knowledge base of algorithm data-structure My knowledge base of data structure programming language theory # Here are some projects related to programming language theory . project name explanation automata-and-formal-language Automata theory and formal language theory compiler-principle Note of book Compilers Principles, Techniques and Tools Second Edition compiler-principle-in-action The two main-stream compilers, GCC and LLVM python-in-action c-family-language-in-action programming-paradigms software engineering # project name explanation software-engineering software-design-pattern application # project name explanation timer-with-thread-pool concurrent-server","title":"Home"},{"location":"#my-projects","text":"Here are some project that I created.","title":"My projects"},{"location":"#machine-learning","text":"project name explanation NRE Neural Relation Extraction (NRE) paper-and-code Read paper about AI and code it machine-learning Natural-Language-Processing-with-Python decompose-jieba","title":"machine learning"},{"location":"#math","text":"project name explanation math","title":"math"},{"location":"#redis","text":"project name explanation decompose-redis Decompose Redis","title":"redis"},{"location":"#operating-system","text":"project name explanation linux_in_action Unix-like-operating-system My knowledge base of Unix-like operation system","title":"operating system"},{"location":"#algorithm-and-data-structure","text":"project name explanation algorithm My knowledge base of algorithm data-structure My knowledge base of data structure","title":"algorithm and data structure"},{"location":"#programming-language-theory","text":"Here are some projects related to programming language theory . project name explanation automata-and-formal-language Automata theory and formal language theory compiler-principle Note of book Compilers Principles, Techniques and Tools Second Edition compiler-principle-in-action The two main-stream compilers, GCC and LLVM python-in-action c-family-language-in-action programming-paradigms","title":"programming language theory"},{"location":"#software-engineering","text":"project name explanation software-engineering software-design-pattern","title":"software engineering"},{"location":"#application","text":"project name explanation timer-with-thread-pool concurrent-server","title":"application"},{"location":"about/","text":"About me # Hi, I'm a software engineer living in Hangzhou,China. If you want to get in touch,drop me an email(2238897886@qq.com). I write in Chinese and English, but it takes more time to write in English because of lacking practice. As an software engineer, I insist on studying theories in computer science and software engineering and try to have a clear and comprehensive picture of theories of specific field in computer science and software engineering , because I think the theory can guide engineer in application. I like reading, below are some book that I think useful to an software engineer Book Author Introduction to Automata and Language Theory(aka Cinderella Book ) Jeffrey D. Ullman , John E. Hopcroft Compilers: Principles, Techniques, and Tools (aka Dragon Book ) Jeffrey D. Ullman , Alfred V. Aho Foundations of Computer Science/C Edition Jeffrey D. Ullman Deep Learning Ian Goodfellow and Yoshua Bengio and Aaron Courville Advanced Programming in the UNIX\u00ae Environment Understanding the Linux Kernel, 3rd Edition Natural Language Processing with Python Interest # Unix/Linux AI application especially deep learning, such as time serial prediction\uff0cNLP web application Education # 09.2012-07.2016 B.S. Software Engineering, Department of Information & Control, Xi\u2019an University of Architecture and Technology Career # Period 07.2016-05.2018 Unix/Linux back-end developing 05.2018-2019 AI application developing","title":"About"},{"location":"about/#about-me","text":"Hi, I'm a software engineer living in Hangzhou,China. If you want to get in touch,drop me an email(2238897886@qq.com). I write in Chinese and English, but it takes more time to write in English because of lacking practice. As an software engineer, I insist on studying theories in computer science and software engineering and try to have a clear and comprehensive picture of theories of specific field in computer science and software engineering , because I think the theory can guide engineer in application. I like reading, below are some book that I think useful to an software engineer Book Author Introduction to Automata and Language Theory(aka Cinderella Book ) Jeffrey D. Ullman , John E. Hopcroft Compilers: Principles, Techniques, and Tools (aka Dragon Book ) Jeffrey D. Ullman , Alfred V. Aho Foundations of Computer Science/C Edition Jeffrey D. Ullman Deep Learning Ian Goodfellow and Yoshua Bengio and Aaron Courville Advanced Programming in the UNIX\u00ae Environment Understanding the Linux Kernel, 3rd Edition Natural Language Processing with Python","title":"About me"},{"location":"about/#interest","text":"Unix/Linux AI application especially deep learning, such as time serial prediction\uff0cNLP web application","title":"Interest"},{"location":"about/#education","text":"09.2012-07.2016 B.S. Software Engineering, Department of Information & Control, Xi\u2019an University of Architecture and Technology","title":"Education"},{"location":"about/#career","text":"Period 07.2016-05.2018 Unix/Linux back-end developing 05.2018-2019 AI application developing","title":"Career"},{"location":"Post/0-to-1-and-1-to-many/","text":"\u4ece0\u52301\uff0c\u4ece1\u5230\u591a # \u8fdb\u5316\uff1a\u4ecelist\u5230tree\uff0c\u4ecetree\u5230graph\uff1b \u9000\u5316\uff1agraph\u9000\u5316\u4e3atree\uff0ctree\u9000\u5316\u4e3alist\uff1b \u4ece\u5355\u9012\u5f52\u5230\u591a\u9012\u5f52\u3002 \u4ece\u5355\u7ebf\u7a0b\u5230\u591a\u7ebf\u7a0b\u3002","title":"0-to-1-and-1-to-many"},{"location":"Post/0-to-1-and-1-to-many/#011","text":"\u8fdb\u5316\uff1a\u4ecelist\u5230tree\uff0c\u4ecetree\u5230graph\uff1b \u9000\u5316\uff1agraph\u9000\u5316\u4e3atree\uff0ctree\u9000\u5316\u4e3alist\uff1b \u4ece\u5355\u9012\u5f52\u5230\u591a\u9012\u5f52\u3002 \u4ece\u5355\u7ebf\u7a0b\u5230\u591a\u7ebf\u7a0b\u3002","title":"\u4ece0\u52301\uff0c\u4ece1\u5230\u591a"},{"location":"Post/Abstraction/","text":"Abstraction # \u6ce8\u610f\uff1a\u672c\u6587\u6240\u8ba8\u8bba\u7684 Abstraction \u662f\u5e7f\u4e49\u7684\uff0c\u800c\u4e0d\u4ec5\u4ec5\u5c40\u9650\u4e8e Abstraction (computer science) \u3002 \u7ef4\u57fa\u767e\u79d1 Abstraction \u7ed9\u51fa\u4e86Abstraction\u7684\u5927\u91cf\u63cf\u8ff0\uff0c\u6709\u4e9b\u662f\u6bd4\u8f83\u96be\u4ee5\u7406\u89e3\uff0c\u4e0b\u9762\u662f\u6211\u8ba4\u4e3a\u5176\u4e2d\u6bd4\u8f83\u597d\u7684\u63cf\u8ff0\uff1a Abstraction in its main sense is a conceptual process where general rules and concepts are derived from the usage and classification of specific examples, literal (\"real\" or \" concrete \") signifiers, first principles , or other methods. \u8fd9\u6bb5\u8bdd\u7684\u7b80\u5355\u6765\u8bf4\u662f\uff1a\u62bd\u8c61\u662f\u521b\u5efa concepts \u7684\u8fc7\u7a0b\uff0c\u90a3\u4f55\u4e3aconcept\u5462\uff1f\u8fd9\u4e2a\u95ee\u9898\u662f\u6bd4\u8f83\u201c\u62bd\u8c61\u201d\u7684\uff0c\u96be\u4ee5\u8fdb\u884c\u51c6\u786e\u63cf\u8ff0\u7684\uff0c\u540e\u9762\u7684 \u521b\u9020\u62bd\u8c61\u6982\u5ff5 \u7ae0\u8282\u4f1a\u7ed3\u5408\u5177\u4f53\u6848\u4f8b\u6765\u8fdb\u884c\u8bf4\u660e\u3002 \"An abstraction\" is the outcome of this process\u2014a concept that acts as a common noun for all subordinate\uff08\u4ece\u5c5e\uff09 concepts, and connects any related concepts as a group , field , or category . \u8fd9\u6bb5\u8bdd\u7684\u610f\u601d\u548c\u4e0a\u9762\u7684\u76f8\u540c\uff0c\u5728 \u521b\u9020\u62bd\u8c61\u6982\u5ff5 \u7ae0\u8282\uff0c\u4f1a\u7ed3\u5408\u5177\u4f53\u5b9e\u4f8b\u5bf9\u8fd9\u6bb5\u8bdd\u6240\u8868\u8ff0\u7684\u610f\u601d\u8fdb\u884c\u8be6\u7ec6\u5206\u6790\u3002 Conceptual abstractions may be formed by filtering the information content of a concept or an observable phenomenon , selecting only the aspects which are relevant for a particular subjectively valued purpose. The essence of abstractions is preserving information that is relevant in a given context, and forgetting information that is irrelevant in that context. \u2013 John V. Guttag \u62bd\u8c61\u662f\u6982\u62ec\u7684\u8fc7\u7a0b\uff0c\u62bd\u8c61\u662f\u63d0\u53d6\u516c\u5171\u7279\u5f81\u7684\u8fc7\u7a0b\uff0c\u5b83\u6240\u6982\u62ec\u7684\u3001\u6240\u63d0\u53d6\u7684\u516c\u5171\u7279\u5f81\uff0c\u4f7f\u7528 concepts \u6765\u8fdb\u884c\u8868\u793a\u3002 \u521b\u9020\u62bd\u8c61\u6982\u5ff5 # \u901a\u8fc7\u521b\u9020\u62bd\u8c61\u7684 concept \uff08\u6982\u5ff5\uff09\u6765\u4f7f\u8868\u8ff0\u66f4\u52a0\u4fbf\u5229\u7684\u505a\u6cd5\u662f\u5728\u5404\u79cd\u5b66\u79d1\u975e\u5e38\u666e\u904d\u7684\uff0c\u5173\u4e8e\u6b64\u7684\u4f8b\u5b50\u6709\uff1a kernel control path # \u5728\u300aUnderstanding.The.Linux.kernel.3rd.Edition\u300b\u7684chapter 1.6.3. Reentrant Kernels\u4e2d\uff0c\u4f5c\u8005\u5b9a\u4e49\u4e86kernel control path\u6982\u5ff5\u6765\u6982\u62eckernel\u4e2d\u7531system call\u7531\u89e6\u53d1\u7684kernel control path\uff08\u540e\u9762\u7b80\u79f0\u4e3asystem call kernel control path\uff09\u3001\u7531interrupt handler\u89e6\u53d1\u7684kernel control path\uff08\u540e\u9762\u7b80\u79f0interrupt handler kernel control path\uff09\u4ee5\u53ca\u540e\u7eed\u968f\u7740kernel\u53d1\u5c55\u53ef\u80fd\u4f1a\u65b0\u589e\u7684\u89e6\u53d1kernel control path\u3002\u663e\u7136kernel control path\u6982\u5ff5\u6982\u62ec\u4e86system call kernel control path\u3001interrupt handler kernel control path\u7684 common feature \uff08\u516c\u5171\u7279\u5f81\uff09\uff0c\u5982\u5b83\u4eec\u90fd\u80fd\u591f\u88absuspend\u3001resume\u3002 \u663e\u7136\u5f53\u4e00\u4e2a\u8868\u8ff0\u4e2d\u4f7f\u7528kernel control path\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u5b83\u53ef\u4ee5\u662fsystem call kernel control path\u3001\u4e5f\u53ef\u4ee5\u662finterrupt handler kernel control path\uff0c\u8fd9\u5c31\u4f7f\u6211\u4eec\u7684\u8868\u8ff0\u975e\u5e38\u5730\u4fbf\u5229\u3002 \u663e\u7136\uff0csystem call kernel control path\u3001interrupt handler kernel control path\u548ckernel control path\u4e4b\u95f4\u662f Is-a \u5173\u7cfb\u3002 Computer multitasking # \u5728 Computer multitasking \u4e2d\u521b\u9020\u4e86task\u6982\u5ff5\uff0c\u5b83\u8868\u793a\u7684\u662fcomputer\u80fd\u591f\u5e76\u53d1\u6267\u884c\u7684\uff0c\u5b83\u53ef\u4ee5\u662fprocess\u4e5f\u53ef\u4ee5\u662fthread\uff0c\u5177\u4f53\u662f\u4ec0\u4e48\u5219\u7531\u5177\u4f53\u7684\u5b9e\u73b0\u800c\u5b9a\u3002 Abstraction\u5728\u5404\u4e2a\u5b66\u79d1\u4e2d\u7684\u5e94\u7528 # Abstraction\u662f\u79d1\u5b66\u7684\u57fa\u7840\uff0c\u5b83\u5728\u5404\u4e2a\u5b66\u79d1\u4e2d\u90fd\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\u3002 Abstraction in computer science # \u7ef4\u57fa\u767e\u79d1\u7684 Abstraction (software engineering) \u603b\u7ed3\u4e86\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684abstraction\u3002\u867d\u7136\u7ef4\u57fa\u767e\u79d1\u7684 Abstraction (software engineering) \u5bf9\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684Abstraction\u6709\u4e86\u4e0d\u540c\u7684\u63cf\u8ff0\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684abstraction\u672c\u8d28\u4e0a\u548c\u524d\u9762\u6240\u8ff0\u7684\u5e7f\u4e49\u7684abstraction\u662f\u76f8\u540c\u7684\uff0c\u5373\u521b\u5efaconcept\u7684\u8fc7\u7a0b\uff0c\u5728computer science\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u7684\u662f\u5982\u4f55\u6765\u5b9e\u73b0concept\u3002 concept\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u4e0d\u540c\u9886\u57df\u6709\u7740\u4e0d\u540c\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a \u5728 object-oriented programming \u4e2d\uff0c\u4f7f\u7528 class \u6765\u63cf\u8ff0concept\uff0cconcept\u4e4b\u95f4\u7684relation\u5c31\u8f6c\u6362\u4e3a class \u4e4b\u95f4\u7684\u5173\u7cfb\u4e86\u3002 \u5728 Entity\u2013relationship model \uff0c\u4f7f\u7528 entity \u6765\u63cf\u8ff0concept\u3002\u4e0e\u6b64\u76f8\u5173\u7684\u6982\u5ff5\u6709\uff1a Relational model \u3001 Relational database \u3001 Relational algebra \u8fde\u63a5\u4e0a\u8ff0\u4e24\u8005\u7684\u5c31\u662f Object-relational mapping \u3002 abstraction\u5728architecture\u9886\u57df\u7684\u76f4\u63a5\u4f53\u73b0\u5c31\u662f\u5206\u5c42\u601d\u60f3\uff0c\u4e0d\u540c\u5c42\u5c31\u662f\u4e00\u79cd\u62bd\u8c61\uff0c\u5206\u5c42\u5e26\u6765\u89e3\u8026\uff0c\u8fd9\u5728\u300aPhilosophy-level.md\u300b\u4e2d\u63cf\u8ff0 conceptual model\u5219\u662f\u5bf9concept\u548c\u5176relation\u7684\u63cf\u8ff0\uff0c\u5b83\u6ca1\u6709\u8fbe\u5230\u5b9e\u73b0\u5c42\u9762\uff0c\u8fd9\u5728\u300aModel.md\u300b\u4e2d\u63cf\u8ff0\uff0c\u8fd8\u9700\u8981\u6269\u5c55\u7684model\u6709\uff1a Database model Data model Object-oriented programming # \u601d\u8003\u8fd9\u6837\u7684\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u65b9\u5f0f\u6765\u63cf\u8ff0\u4e0a\u8ff0kernel control path\u6982\u5ff5\u548ctask\u6982\u5ff5\uff1f \u4f7f\u7528 class \u6765\u63cf\u8ff0 concept \uff0c\u8fd9\u51e0\u4e2a concept \u4e4b\u95f4\u662f Is-a \u5173\u7cfb\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528inheritance\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a c++ \u5b9e\u73b0\u7684demo\uff1a class KernelControlPath { } class SystemCallKernelControlPath public: KernelControlPath { } class InterruptKernelControlPath public: KernelControlPath { } kernel control path\u7684\u4e00\u4e2a \u7279\u5f81 \u5c31\u662f\u5b83\u80fd\u591f\u88absuspend\u3001resume\uff0c\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u63cf\u8ff0\u5c31\u662f\uff1a void suspend(KernelControlPath& kernel_control_path) { } void resume(KernelControlPath& kernel_control_path) { } \u9762\u5411\u5bf9\u8c61\u7684 Polymorphism \uff08\u591a\u6001\u6027\uff09\u8868\u660e suspend \u548c resume \u7684\u5165\u53c2\u53ef\u4ee5\u4e3a SystemCallKernelControlPath \u3001 InterruptKernelControlPath \u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u8fd9\u5176\u5b9e\u5c31\u4f53\u73b0\u4e86\uff1a \u5f53\u4e00\u4e2a\u8868\u8ff0\u4e2d\u4f7f\u7528kernel control path\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u5b83\u53ef\u4ee5\u662fsystem call kernel control path\u3001\u4e5f\u53ef\u4ee5\u662finterrupt handler kernel control path class Task: pass class ProcessTask: pass class ThreadTask: pass \u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u5b58\u5728\u4e0e\u4e0a\u8ff0\u62bd\u8c61\u6982\u5ff5\u7c7b\u4f3c\u7684\u505a\u6cd5\uff1a \u7236\u7c7b\u662f\u5b50\u7c7b\u7684\u62bd\u8c61\uff0c\u63a5\u53e3\u662f\u62bd\u8c61 Virtual function Interface (computing) \u5199\u4f5c\u601d\u8def # \u4eceabstraction-\u300bconcept\u3001relation -\u300bobject-oriented programming -\u300barchitecture -\u300bconceptual model -\u300brelation algebra \u62bd\u8c61\u662f\u521b\u5efaconcept\u7684\u8fc7\u7a0b\uff0cconcept\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u4e0d\u540c\u9886\u57df\u6709\u7740\u4e0d\u540c\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a \u5728 object-oriented programming \u4e2d\uff0c\u4f7f\u7528 class \u6765\u63cf\u8ff0concept\uff0cconcept\u4e4b\u95f4\u7684relation\u5c31\u8f6c\u6362\u4e3a class \u4e4b\u95f4\u7684\u5173\u7cfb\u4e86\u3002 \u5728 Entity\u2013relationship model \uff0c\u4f7f\u7528 entity \u6765\u63cf\u8ff0concept\u3002\u4e0e\u6b64\u76f8\u5173\u7684\u6982\u5ff5\u6709\uff1a Relational model \u3001 Relational database \u3001 Relational algebra \u8fde\u63a5\u4e0a\u8ff0\u4e24\u8005\u7684\u5c31\u662f Object-relational mapping \u3002 abstraction\u5728architecture\u9886\u57df\u7684\u76f4\u63a5\u4f53\u73b0\u5c31\u662f\u5206\u5c42\u601d\u60f3\uff0c\u4e0d\u540c\u5c42\u5c31\u662f\u4e00\u79cd\u62bd\u8c61\uff0c\u5206\u5c42\u5e26\u6765\u89e3\u8026\uff0c\u8fd9\u5728\u300aPhilosophy-level.md\u300b\u4e2d\u63cf\u8ff0 conceptual model\u5219\u662f\u5bf9concept\u548c\u5176relation\u7684\u63cf\u8ff0\uff0c\u5b83\u6ca1\u6709\u8fbe\u5230\u5b9e\u73b0\u5c42\u9762\uff0c\u8fd9\u5728\u300aModel.md\u300b\u4e2d\u63cf\u8ff0\uff0c\u8fd8\u9700\u8981\u6269\u5c55\u7684model\u6709\uff1a Database model Data model","title":"Abstraction"},{"location":"Post/Abstraction/#abstraction","text":"\u6ce8\u610f\uff1a\u672c\u6587\u6240\u8ba8\u8bba\u7684 Abstraction \u662f\u5e7f\u4e49\u7684\uff0c\u800c\u4e0d\u4ec5\u4ec5\u5c40\u9650\u4e8e Abstraction (computer science) \u3002 \u7ef4\u57fa\u767e\u79d1 Abstraction \u7ed9\u51fa\u4e86Abstraction\u7684\u5927\u91cf\u63cf\u8ff0\uff0c\u6709\u4e9b\u662f\u6bd4\u8f83\u96be\u4ee5\u7406\u89e3\uff0c\u4e0b\u9762\u662f\u6211\u8ba4\u4e3a\u5176\u4e2d\u6bd4\u8f83\u597d\u7684\u63cf\u8ff0\uff1a Abstraction in its main sense is a conceptual process where general rules and concepts are derived from the usage and classification of specific examples, literal (\"real\" or \" concrete \") signifiers, first principles , or other methods. \u8fd9\u6bb5\u8bdd\u7684\u7b80\u5355\u6765\u8bf4\u662f\uff1a\u62bd\u8c61\u662f\u521b\u5efa concepts \u7684\u8fc7\u7a0b\uff0c\u90a3\u4f55\u4e3aconcept\u5462\uff1f\u8fd9\u4e2a\u95ee\u9898\u662f\u6bd4\u8f83\u201c\u62bd\u8c61\u201d\u7684\uff0c\u96be\u4ee5\u8fdb\u884c\u51c6\u786e\u63cf\u8ff0\u7684\uff0c\u540e\u9762\u7684 \u521b\u9020\u62bd\u8c61\u6982\u5ff5 \u7ae0\u8282\u4f1a\u7ed3\u5408\u5177\u4f53\u6848\u4f8b\u6765\u8fdb\u884c\u8bf4\u660e\u3002 \"An abstraction\" is the outcome of this process\u2014a concept that acts as a common noun for all subordinate\uff08\u4ece\u5c5e\uff09 concepts, and connects any related concepts as a group , field , or category . \u8fd9\u6bb5\u8bdd\u7684\u610f\u601d\u548c\u4e0a\u9762\u7684\u76f8\u540c\uff0c\u5728 \u521b\u9020\u62bd\u8c61\u6982\u5ff5 \u7ae0\u8282\uff0c\u4f1a\u7ed3\u5408\u5177\u4f53\u5b9e\u4f8b\u5bf9\u8fd9\u6bb5\u8bdd\u6240\u8868\u8ff0\u7684\u610f\u601d\u8fdb\u884c\u8be6\u7ec6\u5206\u6790\u3002 Conceptual abstractions may be formed by filtering the information content of a concept or an observable phenomenon , selecting only the aspects which are relevant for a particular subjectively valued purpose. The essence of abstractions is preserving information that is relevant in a given context, and forgetting information that is irrelevant in that context. \u2013 John V. Guttag \u62bd\u8c61\u662f\u6982\u62ec\u7684\u8fc7\u7a0b\uff0c\u62bd\u8c61\u662f\u63d0\u53d6\u516c\u5171\u7279\u5f81\u7684\u8fc7\u7a0b\uff0c\u5b83\u6240\u6982\u62ec\u7684\u3001\u6240\u63d0\u53d6\u7684\u516c\u5171\u7279\u5f81\uff0c\u4f7f\u7528 concepts \u6765\u8fdb\u884c\u8868\u793a\u3002","title":"Abstraction"},{"location":"Post/Abstraction/#_1","text":"\u901a\u8fc7\u521b\u9020\u62bd\u8c61\u7684 concept \uff08\u6982\u5ff5\uff09\u6765\u4f7f\u8868\u8ff0\u66f4\u52a0\u4fbf\u5229\u7684\u505a\u6cd5\u662f\u5728\u5404\u79cd\u5b66\u79d1\u975e\u5e38\u666e\u904d\u7684\uff0c\u5173\u4e8e\u6b64\u7684\u4f8b\u5b50\u6709\uff1a","title":"\u521b\u9020\u62bd\u8c61\u6982\u5ff5"},{"location":"Post/Abstraction/#kernel-control-path","text":"\u5728\u300aUnderstanding.The.Linux.kernel.3rd.Edition\u300b\u7684chapter 1.6.3. Reentrant Kernels\u4e2d\uff0c\u4f5c\u8005\u5b9a\u4e49\u4e86kernel control path\u6982\u5ff5\u6765\u6982\u62eckernel\u4e2d\u7531system call\u7531\u89e6\u53d1\u7684kernel control path\uff08\u540e\u9762\u7b80\u79f0\u4e3asystem call kernel control path\uff09\u3001\u7531interrupt handler\u89e6\u53d1\u7684kernel control path\uff08\u540e\u9762\u7b80\u79f0interrupt handler kernel control path\uff09\u4ee5\u53ca\u540e\u7eed\u968f\u7740kernel\u53d1\u5c55\u53ef\u80fd\u4f1a\u65b0\u589e\u7684\u89e6\u53d1kernel control path\u3002\u663e\u7136kernel control path\u6982\u5ff5\u6982\u62ec\u4e86system call kernel control path\u3001interrupt handler kernel control path\u7684 common feature \uff08\u516c\u5171\u7279\u5f81\uff09\uff0c\u5982\u5b83\u4eec\u90fd\u80fd\u591f\u88absuspend\u3001resume\u3002 \u663e\u7136\u5f53\u4e00\u4e2a\u8868\u8ff0\u4e2d\u4f7f\u7528kernel control path\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u5b83\u53ef\u4ee5\u662fsystem call kernel control path\u3001\u4e5f\u53ef\u4ee5\u662finterrupt handler kernel control path\uff0c\u8fd9\u5c31\u4f7f\u6211\u4eec\u7684\u8868\u8ff0\u975e\u5e38\u5730\u4fbf\u5229\u3002 \u663e\u7136\uff0csystem call kernel control path\u3001interrupt handler kernel control path\u548ckernel control path\u4e4b\u95f4\u662f Is-a \u5173\u7cfb\u3002","title":"kernel control path"},{"location":"Post/Abstraction/#computer-multitasking","text":"\u5728 Computer multitasking \u4e2d\u521b\u9020\u4e86task\u6982\u5ff5\uff0c\u5b83\u8868\u793a\u7684\u662fcomputer\u80fd\u591f\u5e76\u53d1\u6267\u884c\u7684\uff0c\u5b83\u53ef\u4ee5\u662fprocess\u4e5f\u53ef\u4ee5\u662fthread\uff0c\u5177\u4f53\u662f\u4ec0\u4e48\u5219\u7531\u5177\u4f53\u7684\u5b9e\u73b0\u800c\u5b9a\u3002","title":"Computer multitasking"},{"location":"Post/Abstraction/#abstraction_1","text":"Abstraction\u662f\u79d1\u5b66\u7684\u57fa\u7840\uff0c\u5b83\u5728\u5404\u4e2a\u5b66\u79d1\u4e2d\u90fd\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\u3002","title":"Abstraction\u5728\u5404\u4e2a\u5b66\u79d1\u4e2d\u7684\u5e94\u7528"},{"location":"Post/Abstraction/#abstraction-in-computer-science","text":"\u7ef4\u57fa\u767e\u79d1\u7684 Abstraction (software engineering) \u603b\u7ed3\u4e86\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684abstraction\u3002\u867d\u7136\u7ef4\u57fa\u767e\u79d1\u7684 Abstraction (software engineering) \u5bf9\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684Abstraction\u6709\u4e86\u4e0d\u540c\u7684\u63cf\u8ff0\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684abstraction\u672c\u8d28\u4e0a\u548c\u524d\u9762\u6240\u8ff0\u7684\u5e7f\u4e49\u7684abstraction\u662f\u76f8\u540c\u7684\uff0c\u5373\u521b\u5efaconcept\u7684\u8fc7\u7a0b\uff0c\u5728computer science\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u7684\u662f\u5982\u4f55\u6765\u5b9e\u73b0concept\u3002 concept\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u4e0d\u540c\u9886\u57df\u6709\u7740\u4e0d\u540c\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a \u5728 object-oriented programming \u4e2d\uff0c\u4f7f\u7528 class \u6765\u63cf\u8ff0concept\uff0cconcept\u4e4b\u95f4\u7684relation\u5c31\u8f6c\u6362\u4e3a class \u4e4b\u95f4\u7684\u5173\u7cfb\u4e86\u3002 \u5728 Entity\u2013relationship model \uff0c\u4f7f\u7528 entity \u6765\u63cf\u8ff0concept\u3002\u4e0e\u6b64\u76f8\u5173\u7684\u6982\u5ff5\u6709\uff1a Relational model \u3001 Relational database \u3001 Relational algebra \u8fde\u63a5\u4e0a\u8ff0\u4e24\u8005\u7684\u5c31\u662f Object-relational mapping \u3002 abstraction\u5728architecture\u9886\u57df\u7684\u76f4\u63a5\u4f53\u73b0\u5c31\u662f\u5206\u5c42\u601d\u60f3\uff0c\u4e0d\u540c\u5c42\u5c31\u662f\u4e00\u79cd\u62bd\u8c61\uff0c\u5206\u5c42\u5e26\u6765\u89e3\u8026\uff0c\u8fd9\u5728\u300aPhilosophy-level.md\u300b\u4e2d\u63cf\u8ff0 conceptual model\u5219\u662f\u5bf9concept\u548c\u5176relation\u7684\u63cf\u8ff0\uff0c\u5b83\u6ca1\u6709\u8fbe\u5230\u5b9e\u73b0\u5c42\u9762\uff0c\u8fd9\u5728\u300aModel.md\u300b\u4e2d\u63cf\u8ff0\uff0c\u8fd8\u9700\u8981\u6269\u5c55\u7684model\u6709\uff1a Database model Data model","title":"Abstraction in computer science"},{"location":"Post/Abstraction/#object-oriented-programming","text":"\u601d\u8003\u8fd9\u6837\u7684\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u65b9\u5f0f\u6765\u63cf\u8ff0\u4e0a\u8ff0kernel control path\u6982\u5ff5\u548ctask\u6982\u5ff5\uff1f \u4f7f\u7528 class \u6765\u63cf\u8ff0 concept \uff0c\u8fd9\u51e0\u4e2a concept \u4e4b\u95f4\u662f Is-a \u5173\u7cfb\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528inheritance\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a c++ \u5b9e\u73b0\u7684demo\uff1a class KernelControlPath { } class SystemCallKernelControlPath public: KernelControlPath { } class InterruptKernelControlPath public: KernelControlPath { } kernel control path\u7684\u4e00\u4e2a \u7279\u5f81 \u5c31\u662f\u5b83\u80fd\u591f\u88absuspend\u3001resume\uff0c\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u63cf\u8ff0\u5c31\u662f\uff1a void suspend(KernelControlPath& kernel_control_path) { } void resume(KernelControlPath& kernel_control_path) { } \u9762\u5411\u5bf9\u8c61\u7684 Polymorphism \uff08\u591a\u6001\u6027\uff09\u8868\u660e suspend \u548c resume \u7684\u5165\u53c2\u53ef\u4ee5\u4e3a SystemCallKernelControlPath \u3001 InterruptKernelControlPath \u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u8fd9\u5176\u5b9e\u5c31\u4f53\u73b0\u4e86\uff1a \u5f53\u4e00\u4e2a\u8868\u8ff0\u4e2d\u4f7f\u7528kernel control path\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u5b83\u53ef\u4ee5\u662fsystem call kernel control path\u3001\u4e5f\u53ef\u4ee5\u662finterrupt handler kernel control path class Task: pass class ProcessTask: pass class ThreadTask: pass \u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u5b58\u5728\u4e0e\u4e0a\u8ff0\u62bd\u8c61\u6982\u5ff5\u7c7b\u4f3c\u7684\u505a\u6cd5\uff1a \u7236\u7c7b\u662f\u5b50\u7c7b\u7684\u62bd\u8c61\uff0c\u63a5\u53e3\u662f\u62bd\u8c61 Virtual function Interface (computing)","title":"Object-oriented programming"},{"location":"Post/Abstraction/#_2","text":"\u4eceabstraction-\u300bconcept\u3001relation -\u300bobject-oriented programming -\u300barchitecture -\u300bconceptual model -\u300brelation algebra \u62bd\u8c61\u662f\u521b\u5efaconcept\u7684\u8fc7\u7a0b\uff0cconcept\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u4e0d\u540c\u9886\u57df\u6709\u7740\u4e0d\u540c\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a \u5728 object-oriented programming \u4e2d\uff0c\u4f7f\u7528 class \u6765\u63cf\u8ff0concept\uff0cconcept\u4e4b\u95f4\u7684relation\u5c31\u8f6c\u6362\u4e3a class \u4e4b\u95f4\u7684\u5173\u7cfb\u4e86\u3002 \u5728 Entity\u2013relationship model \uff0c\u4f7f\u7528 entity \u6765\u63cf\u8ff0concept\u3002\u4e0e\u6b64\u76f8\u5173\u7684\u6982\u5ff5\u6709\uff1a Relational model \u3001 Relational database \u3001 Relational algebra \u8fde\u63a5\u4e0a\u8ff0\u4e24\u8005\u7684\u5c31\u662f Object-relational mapping \u3002 abstraction\u5728architecture\u9886\u57df\u7684\u76f4\u63a5\u4f53\u73b0\u5c31\u662f\u5206\u5c42\u601d\u60f3\uff0c\u4e0d\u540c\u5c42\u5c31\u662f\u4e00\u79cd\u62bd\u8c61\uff0c\u5206\u5c42\u5e26\u6765\u89e3\u8026\uff0c\u8fd9\u5728\u300aPhilosophy-level.md\u300b\u4e2d\u63cf\u8ff0 conceptual model\u5219\u662f\u5bf9concept\u548c\u5176relation\u7684\u63cf\u8ff0\uff0c\u5b83\u6ca1\u6709\u8fbe\u5230\u5b9e\u73b0\u5c42\u9762\uff0c\u8fd9\u5728\u300aModel.md\u300b\u4e2d\u63cf\u8ff0\uff0c\u8fd8\u9700\u8981\u6269\u5c55\u7684model\u6709\uff1a Database model Data model","title":"\u5199\u4f5c\u601d\u8def"},{"location":"Post/Architecture/","text":"Architecture # library-base architecture # \u5728\u9605\u8bfb Clang - Features and Goals \u65f6\uff0c\u5176Library Based Architecture\u4ee4\u6211\u5370\u8c61\u6df1\u523b\uff0c\u636e\u6211\u6240\u77e5\u7684\uff0c\u8fd8\u6709\u91c7\u7528\u8fd9\u79cd\u67b6\u6784\u7684\u6709 nginx nginx \u63d0\u4f9b\u4e86\u975e\u5e38\u591a\u7684Modules\uff0c\u8fd9\u4e9bModules\u5c31\u662f\u4e00\u4e2a\u4e00\u4e2a\u7684library\u3002 redis Redis Modules \uff0c\u8fd9\u4e9bModules\u5c31\u662f\u4e00\u4e2a\u4e00\u4e2a\u7684library\u3002 Tuxedo (software) cpython \u4e5f\u53ef\u4ee5\u770b\u505a\u662flibrary-base architecture\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8Extending and Embedding the Python Interpreter \u00b6 \u53c2\u89c1\uff1a python bindings, how does it work? dlopen operating system kernel \u5927\u591a\u6570\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u90fd\u652f\u6301 loadable kernel module \u7279\u6027 Middleware # https://en.wikipedia.org/wiki/Middleware Message-oriented middleware # https://en.wikipedia.org/wiki/Message-oriented_middleware Multitier architecture VS Monolithic application # Monolithic VS micro # Monolithic Architecture and Microservices Concepts- Cloud Computing Microservices Monolithic kernel vs Microkernel","title":"Architecture"},{"location":"Post/Architecture/#architecture","text":"","title":"Architecture"},{"location":"Post/Architecture/#library-base-architecture","text":"\u5728\u9605\u8bfb Clang - Features and Goals \u65f6\uff0c\u5176Library Based Architecture\u4ee4\u6211\u5370\u8c61\u6df1\u523b\uff0c\u636e\u6211\u6240\u77e5\u7684\uff0c\u8fd8\u6709\u91c7\u7528\u8fd9\u79cd\u67b6\u6784\u7684\u6709 nginx nginx \u63d0\u4f9b\u4e86\u975e\u5e38\u591a\u7684Modules\uff0c\u8fd9\u4e9bModules\u5c31\u662f\u4e00\u4e2a\u4e00\u4e2a\u7684library\u3002 redis Redis Modules \uff0c\u8fd9\u4e9bModules\u5c31\u662f\u4e00\u4e2a\u4e00\u4e2a\u7684library\u3002 Tuxedo (software) cpython \u4e5f\u53ef\u4ee5\u770b\u505a\u662flibrary-base architecture\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8Extending and Embedding the Python Interpreter \u00b6 \u53c2\u89c1\uff1a python bindings, how does it work? dlopen operating system kernel \u5927\u591a\u6570\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u90fd\u652f\u6301 loadable kernel module \u7279\u6027","title":"library-base architecture"},{"location":"Post/Architecture/#middleware","text":"https://en.wikipedia.org/wiki/Middleware","title":"Middleware"},{"location":"Post/Architecture/#message-oriented-middleware","text":"https://en.wikipedia.org/wiki/Message-oriented_middleware","title":"Message-oriented middleware"},{"location":"Post/Architecture/#multitier-architecture-vs-monolithic-application","text":"","title":"Multitier architecture VS Monolithic application"},{"location":"Post/Architecture/#monolithic-vs-micro","text":"Monolithic Architecture and Microservices Concepts- Cloud Computing Microservices Monolithic kernel vs Microkernel","title":"Monolithic VS micro"},{"location":"Post/Model/","text":"Model # \u603b\u7ed3\u4e00\u4e9b\u5e38\u89c1\u7684model\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u5c06model\u770b\u505a\u662farchitecture\u3002 task model # \u4e00\u4e9b\u5173\u4e8etask model\u7684\u5185\u5bb9\uff1a Computer multitasking Task parallelism Task (computing) \u4f7f\u7528task model\u7684\u65f6\u5019\uff0c\u9700\u8981\u8003\u8651task\u662f\u4ec0\u4e48\u3001task\u7684 \u6267\u884c\u8005 \u662f\u4ec0\u4e48\u3001task\u7684 \u8c03\u5ea6\u8005 \u662f\u4ec0\u4e48\uff1a \u6bd4\u5982 Computer multitasking \u4e2d\uff0ctask\u662fprocess\u6216thread\u7684\u6267\u884c\uff0c\u5b83\u7684\u6267\u884c\u8005\u662fCPU\uff0c\u5b83\u7684\u8c03\u5ea6\u8005\u662foperating system kernel\u4e2d\u7684scheduler\u3002 \u6bd4\u5982 celery \u4e2d\uff0ctask\u5c31\u662f\u4e00\u4e2a\u4e00\u4e2a\u7531\u7528\u6237\u5b9a\u4e49\u7684task function\uff0c\u6267\u884c\u8005\u5176\u5b9e\u5c31\u662fprocess\u4e86\uff0c\u8c03\u5ea6\u8005\u5176\u5b9e\u5c31\u662f\u5b83\u7684 task queue \u4e86\u3002 \u5173\u4e8e\u8c03\u5ea6\u8005\uff0c\u53c2\u89c1\uff1a Scheduling (computing) \u4e0etask model\u76f8\u5173\u7684\u53e6\u5916\u4e00\u4e2a\u6982\u5ff5\u5c31\u662f\uff1atask manager\uff0c\u6bd4\u5982 Task Manager (Windows) \u3002 event-driven model # \u4e00\u4e9b\u5173\u4e4eevent-driven model\u7684\u5185\u5bb9\uff1a Event (computing) Event-driven programming Event-driven architecture Event handler Interrupt Interrupt-driven Interrupt handler \u4f7f\u7528event-driven model\u548c\u4e0a\u8ff0\u7684task model\u53ef\u4ee5\u63cf\u8ff0\u592a\u591a\u592a\u591a\u7684software # \u6bd4\u5982\uff1aOS kernel\u5bf9hardware\u7684\u7ba1\u7406\u53ef\u4ee5\u4f7f\u7528event-driven model\u6765\u8fdb\u884c\u63cf\u8ff0\uff1bOS kernl\u5b9e\u73b0multitasking\u53ef\u4ee5\u4f7f\u7528task model\u6765\u8fdb\u884c\u63cf\u8ff0\u3002 \u603b\u7ed3 # \u4e0a\u8ff0task model\u548cevent-driven model\u90fd\u662f Conceptual model \u3002 A conceptual model is a representation of a system, made of the composition of concepts which are used to help people know , understand , or simulate a subject the model represents. Conceptual model \u662f\u6211\u4eec\u80fd\u591f\u66f4\u52a0\u8f7b\u677e\u5730 understand \u3002","title":"Model"},{"location":"Post/Model/#model","text":"\u603b\u7ed3\u4e00\u4e9b\u5e38\u89c1\u7684model\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u5c06model\u770b\u505a\u662farchitecture\u3002","title":"Model"},{"location":"Post/Model/#task-model","text":"\u4e00\u4e9b\u5173\u4e8etask model\u7684\u5185\u5bb9\uff1a Computer multitasking Task parallelism Task (computing) \u4f7f\u7528task model\u7684\u65f6\u5019\uff0c\u9700\u8981\u8003\u8651task\u662f\u4ec0\u4e48\u3001task\u7684 \u6267\u884c\u8005 \u662f\u4ec0\u4e48\u3001task\u7684 \u8c03\u5ea6\u8005 \u662f\u4ec0\u4e48\uff1a \u6bd4\u5982 Computer multitasking \u4e2d\uff0ctask\u662fprocess\u6216thread\u7684\u6267\u884c\uff0c\u5b83\u7684\u6267\u884c\u8005\u662fCPU\uff0c\u5b83\u7684\u8c03\u5ea6\u8005\u662foperating system kernel\u4e2d\u7684scheduler\u3002 \u6bd4\u5982 celery \u4e2d\uff0ctask\u5c31\u662f\u4e00\u4e2a\u4e00\u4e2a\u7531\u7528\u6237\u5b9a\u4e49\u7684task function\uff0c\u6267\u884c\u8005\u5176\u5b9e\u5c31\u662fprocess\u4e86\uff0c\u8c03\u5ea6\u8005\u5176\u5b9e\u5c31\u662f\u5b83\u7684 task queue \u4e86\u3002 \u5173\u4e8e\u8c03\u5ea6\u8005\uff0c\u53c2\u89c1\uff1a Scheduling (computing) \u4e0etask model\u76f8\u5173\u7684\u53e6\u5916\u4e00\u4e2a\u6982\u5ff5\u5c31\u662f\uff1atask manager\uff0c\u6bd4\u5982 Task Manager (Windows) \u3002","title":"task model"},{"location":"Post/Model/#event-driven-model","text":"\u4e00\u4e9b\u5173\u4e4eevent-driven model\u7684\u5185\u5bb9\uff1a Event (computing) Event-driven programming Event-driven architecture Event handler Interrupt Interrupt-driven Interrupt handler","title":"event-driven model"},{"location":"Post/Model/#event-driven-modeltask-modelsoftware","text":"\u6bd4\u5982\uff1aOS kernel\u5bf9hardware\u7684\u7ba1\u7406\u53ef\u4ee5\u4f7f\u7528event-driven model\u6765\u8fdb\u884c\u63cf\u8ff0\uff1bOS kernl\u5b9e\u73b0multitasking\u53ef\u4ee5\u4f7f\u7528task model\u6765\u8fdb\u884c\u63cf\u8ff0\u3002","title":"\u4f7f\u7528event-driven model\u548c\u4e0a\u8ff0\u7684task model\u53ef\u4ee5\u63cf\u8ff0\u592a\u591a\u592a\u591a\u7684software"},{"location":"Post/Model/#_1","text":"\u4e0a\u8ff0task model\u548cevent-driven model\u90fd\u662f Conceptual model \u3002 A conceptual model is a representation of a system, made of the composition of concepts which are used to help people know , understand , or simulate a subject the model represents. Conceptual model \u662f\u6211\u4eec\u80fd\u591f\u66f4\u52a0\u8f7b\u677e\u5730 understand \u3002","title":"\u603b\u7ed3"},{"location":"Post/Philosophy-level/","text":"\u5206\u5c42\u601d\u60f3 # \u8ba1\u7b97\u673a\u79d1\u5b66\u9886\u57df\u7684 layers of abstraction \u601d\u60f3\u7684\u53ef\u8c13\u7531\u6765\u5df2\u4e45\u4e14\u5f71\u54cd\u6df1\u8fdc\uff0c\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u65b9\u65b9\u9762\u9762\u6211\u4eec\u90fd\u80fd\u591f\u770b\u5230\u5b83\u7684\u8eab\u5f71\u548c\u5f71\u54cd\uff0c\u540e\u9762\u4e3a\u4e86\u63cf\u8ff0\u4fbf\u5229\uff0c\u5c06 layers of abstraction \u601d\u60f3\u7b80\u79f0\u4e3a \u5206\u5c42\u601d\u60f3 \u3002\u6700\u80fd\u591f\u4f53\u73b0 \u5206\u5c42\u601d\u60f3 \u7684\u4e00\u4e2a\u8bcd\u662f\uff1ahierarchy\uff08\u5c42\u7ea7\uff09\uff0c\u7ef4\u57fa\u767e\u79d1\u7684 hierarchy \u5bf9hierarchy\u7684\u603b\u7ed3\u662f\u975e\u5e38\u8be6\u7ec6\u7684\uff0c\u975e\u5e38\u503c\u5f97\u4e00\u8bfb\uff0c\u4ece\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0chierarchy\u5728\u5404\u4e2a\u5b66\u79d1\u4e2d\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\uff1a Hierarchy is an important concept in a wide variety of fields, such as philosophy , mathematics , computer science , organizational theory , systems theory , and the social sciences (especially political philosophy ). \u5176\u5b9e\u4ece\u8fd9\u4e0a\u8bc9\u8bba\u65ad\u4e2d\u6211\u4eec\u4e5f\u53ef\u4ee5\u5012\u63a8\u51fa\uff1a\u5206\u5c42\u601d\u60f3\u5728\u5404\u4e2a\u5b66\u79d1\u4e2d\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u5176\u5b9e\u5982\u679c\u5f80\u66f4\u6df1\u5c42\u6b21\u53bb\u601d\u8003\u7684\u8bdd\uff0c\u5206\u5c42\u601d\u60f3\u5176\u5b9e\u662f\u4e00\u79cd\u7ed3\u6784\u5316\u7684\u601d\u7ef4\uff0c\u5173\u4e8e\u8fd9\u4e2a\u8fd8\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u9605\u8bfb\u3002 \u4e0b\u9762\u662f\u6211\u6240\u603b\u7ed3\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5404\u4e2a\u9886\u57df\u4e2d\u5206\u5c42\u7684\u5e94\u7528\uff1a architecture # \u4f5c\u4e3a\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u6211\u4eec\u5e38\u5e38\u542c\u5230architecture\uff08\u67b6\u6784\uff09\u8fd9\u4e2a\u8bcd\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u9ad8\u7aef\u804c\u4f4d\u53eb\u505aarchitect\uff08\u67b6\u6784\u5e08\uff09\u3002\u8f6f\u4ef6\u6216\u7cfb\u7edf\u7684\u67b6\u6784\u4e3a\u6211\u4eec\u63cf\u8ff0\u7684\u7cfb\u7edf\u7684\u7ed3\u6784\u3001\u7ec4\u6210\u90e8\u5206\u3001\u5404\u90e8\u5206\u4e4b\u95f4\u7684\u63a5\u53e3\u3002\u5206\u5c42\u601d\u60f3\u5bf9architecture\u5f71\u54cd\u4f53\u73b0\u5728\u5404\u79cd\u5404\u6837\u7684 \u5c42\u6b21\u5316\u7ed3\u6784 \uff0c\u6bd4\u5982 architecture of computing system # reference architecture of compiler # reference \u4e2d\u95f4\u8868\u793a # \u7f16\u8bd1\u5668\u5206\u4e3a\u524d\u6bb5\u548c\u540e\u7aef\uff0c\u4e2d\u95f4\u8868\u793a\u7406\u89e3\u524d\u6bb5\u4e0e\u540e\u7aef\u3002\u4e5f\u53ef\u4ee5\u8bf4\u4e2d\u95f4\u8868\u793a\u662f\u4e24\u8005\u4e4b\u95f4\u7684\u63a5\u53e3\u3002 Communication protocol # \u5404\u79cd\u5404\u6837\u7684\u901a\u4fe1\u534f\u8bae\u53ef\u4ee5\u8bf4\u662f\u6700\u6700\u80fd\u591f\u4f53\u73b0\u5206\u5c42\u601d\u60f3\u7684\u4e86\uff0c\u5728 Communication protocol \u7684 Protocol design \u7ae0\u8282\u4e2d\u5c31\u603b\u7ed3\u4e86\u534f\u8bae\u6d89\u53ca\u7684\u601d\u60f3\uff1a Layering \u3002\u9664\u6b64\u4e4b\u5916\uff0c\u53c2\u52a0\uff1a Hierarchical internetworking model \u3002 \u4e0b\u9762\u5217\u4e3e\u4e86\u51e0\u4e2a\u5e38\u89c1\u534f\u8bae\uff0c\u5b83\u4eec\u90fd\u80fd\u975e\u5e38\u597d\u5730\u4f53\u73b0\u4e86\u5206\u5c42\u601d\u60f3\uff1a OSI model # OSI model \u53ef\u4ee5\u8bf4\u662f\u5206\u5c42\u601d\u60f3\u7684\u6700\u4f73\u4f53\u73b0\uff0c\u4e0b\u9762\u662f\u6458\u81ea OSI model \uff1a The Open Systems Interconnection model ( OSI model ) is a conceptual model that characterizes and standardizes the communication functions of a telecommunication or computing system without regard to its underlying internal structure and technology. Its goal is the interoperability of diverse communication systems with standard communication protocols . The model partitions a communication system into abstraction layers . The original version of the model had seven layers. A layer serves the layer above it and is served by the layer below it. \u4e0a\u9762\u8fd9\u6bb5\u8bdd\u5176\u5b9e\u63cf\u8ff0\u4e86 \u5206\u5c42 \u6240\u5e26\u6765\u7684\u597d\u5904\uff1ainteroperability \uff0c\u5404\u5c42\u4e4b\u95f4\u4e92\u76f8\u900f\u660e\uff08\u9690\u85cf\u5185\u90e8\u7ed3\u6784\u548c\u6280\u672f\uff09\uff0c\u901a\u8fc7\u7ea6\u5b9a\u597d\u7684 communication protocols \u8fdb\u884c\u4ea4\u4e92\u3002 OSI model by layer layer 7 Application layer 6 Presentation layer 5 Session layer 4 Transport layer 3 Network layer 2 Data link layer 1 Physical layer Internet protocol suite # Database abstraction layer # \u8fd9\u6bb5\u63cf\u8ff0\u975e\u5e38\u597d\uff1a A database abstraction layer ( DBAL or DAL ) is an application programming interface which unifies the communication between a computer application and databases such as SQL Server , DB2 , MySQL , PostgreSQL , Oracle or SQLite . \u4ee5\u5c42\u6b21\u601d\u60f3\u6765\u601d\u8003 # \u5c42\u6b21\u601d\u60f3 \u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u91cd\u8981\u601d\u60f3\uff0c\u5b83\u6f5c\u79fb\u9ed8\u5316\u5730\u5f71\u54cd\u8fd9\u8ba1\u7b97\u673a\u79d1\u5b66\uff0c\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u4ee5 \u5c42\u6b21\u601d\u60f3 \u6765\u601d\u8003\uff0c\u6765\u5206\u6790\u5404\u79cd\u7cfb\u7edf\uff0c\u5219\u95ee\u9898\u4f1a\u53d8\u5f97\u6e05\u6670\u3002 \u4e0d\u540c\u5c42\u6b21\u76f8\u4e92\u501f\u7528\u6982\u5ff5 # \u5f53\u6211\u4eec\u7ad9\u5728\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u4e0d\u540c\u5c42\u6b21\u6765\u601d\u8003\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u4e0d\u540c\u5c42\u6b21\u4e4b\u95f4\u4f1a\u5b58\u5728\u7740\u5927\u91cf\u7684\u76f8\u4e92\u6982\u5ff5\u501f\u7528\u3002\u6bd4\u5982\uff1a example one # \u4e0d\u540c\u5c42\u6b21\u63cf\u8ff0\u672c\u8d28\u4e0a\u975e\u5e38\u7c7b\u4f3c\u7684\u4e8b\u52a1\u6709\u7740\u4e0d\u540c\u7684\u8bf4\u6cd5\uff0c\u6bd4\u5982\u5728\u300a How-OS-run-01-OS-kernel-is-event-driven \u300b\u4e2d\u910b\u603b\u7ed3\u7684\uff1a \u6211\u4eec\u60ca\u559c\u7684\u53d1\u73b0\u7ad9\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u4e0d\u540c\u7684\u5c42\u6b21\u6765\u63cf\u8ff0\u672c\u8d28\u4e0a\u975e\u5e38\u7c7b\u4f3c\u7684\u4e8b\u52a1\u6709\u7740\u4e0d\u540c\u7684\u8bf4\u6cd5\uff0c\u4e0b\u9762\u5bf9\u6b64\u8fdb\u884c\u4e86\u5bf9\u6bd4\uff1a Hardware Software Interrupt-driven Event-driven architecture / Event-driven programming Interrupt Event (computing) Interrupt handler / Interrupt service routine Event handler / Callback function \u5404\u79cdinterrupt\u5c31\u662f\u6240\u8c13\u7684event\u3002 example two # \u6b63\u5728\u4e0d\u540c\u7684\u5c42\u6b21\u6765\u770b\u5f85\u8ba1\u7b97\u673a\u79d1\u5b66=\u300b\u4e0d\u540c\u5c42\u6b21\u76f8\u4e92\u501f\u7528\u76f8\u540c\u6982\u5ff5-\u300b\u4e0d\u540c\u5c42\u6b21\u76f8\u4e92\u900f\u660e\uff08\u9690\u85cf\u5185\u90e8\u7ec6\u8282\uff09\uff0c\u901a\u8fc7\u63a5\u53e3\u6765\u8fdb\u884c\u4ea4\u4e92 \u4e0d\u540c\u5c42\u6b21\u4f7f\u7528\u4e0d\u540c\u8bed\u8a00 # \u4e0d\u540c\u5c42\u6b21\u4f7f\u7528\u4e0d\u540c\u7684\u8bed\u8a00\uff1a\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u3001\u4e2d\u7ea7\u7f16\u7a0b\u8bed\u8a00\u3001\u4f4e\u7ea7\u7f16\u7a0b\u8bed\u8a00 \u4e0d\u540c\u5c42\u6b21\u7684\u8bed\u8a00\u4e4b\u95f4\u7684\u8f6c\u6362 \u603b\u7ed3 # \u5206\u5c42\uff0c\u62bd\u8c61\uff0c\u63a5\u53e3\uff0c\u8fd9\u4e9b\u662f\u4e09\u4e2a\u540c\u4e49\u8bcd\u3002\u5b83\u4eec\u662f\u8d2f\u7a7f\u4e86computer science\u548csoftware engineering\u7684\u601d\u60f3 \u62bd\u8c61\u5c42 # Abstraction layer \u5206\u5c42\u5e26\u6765\u7684\u4ef7\u503c # Separation of concerns # Abstraction (computer science) # Layer (object-oriented design) # Portability # \u5982 Diversity of operating systems and portability \u62bd\u8c61\u5c42\u5e26\u6765\u79fb\u690d\u6027 \u5206\u5c42\u5e26\u6765\u5b89\u5168 # \u5728 Kernel (operating system) \u4e2d\u6709\u8fd9\u6837\u7684\u63cf\u8ff0\uff1a kernel space . user space . This separation prevents user data and kernel data from interfering with each other and causing instability and slowness, as well as preventing malfunctioning application programs from crashing the entire operating system. \u5206\u5c42\u5e26\u6765\u9694\u79bb\uff0c\u8fdb\u800c\u5e26\u6765\u5b89\u5168 \u5206\u5c42\u5e26\u6765 modularity # \u5728 Kernel (operating system) \u4e2d\u6709\u8fd9\u6837\u7684\u63cf\u8ff0 \u5206\u5c42\u4e0e\u6808\u3001pipeline # \u4e00\u822c\uff0c\u4f1a\u5c06\u6309\u7167\u5206\u5c42\u8bbe\u8ba1\u7684\u7cfb\u7edf\u79f0\u4e3a\u6808\uff0c\u6bd4\u5982\u534f\u8bae\u6808\u3002\u6709\u65f6\u5019\u4e5f\u4f1a\u79f0\u4e3apipeline Solution stack # virtual # virtual\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u5e38\u5e38\u4f1a\u51fa\u73b0\u7684\u4e00\u4e2a\u8bcd\uff0c\u6bd4\u5982\uff1a Virtual memory Virtual method \u7ecf\u8fc7\u672c\u6587\u524d\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5feb\u5730\u77e5\u9053\uff1avirtual\u4e5f\u662f\u4e00\u79cd\u62bd\u8c61\uff0c\u4e00\u79cd\u5206\u5c42\uff0c\u8fd9\u79cd\u5206\u5c42\u6240\u5e26\u6765\u7684\u4ef7\u503c\u5c31\u662f\u89e3\u8026\u3002\u4e0b\u9762\u4ee5virtual address\u6765\u8fdb\u884c\u8bf4\u660e\uff1a process\u5728\u8fd0\u884c\u7684\u65f6\u5019\u4f7f\u7528virtual memory address\uff0c\u7531OS\u6839\u636epage table\u5c06virtual address\u7ffb\u8bd1\u4e3aphysical address\uff1b\u4e0eprocess\u76f4\u63a5\u4f7f\u7528physical address\u76f8\u6bd4\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u591a\u6dfb\u52a0\u4e86\u4e00\u5c42\uff1a\u8f6c\u6362\u5c42\u3002\u8fd9\u79cd\u8bbe\u8ba1\u5e26\u6765\u7684\u4ef7\u503c\u662f\uff1a\u5b83\u89e3\u8026\u4e86process\u7684page\u548cpage\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u5177\u4f53\u6765\u8bb2\u5c31\u662f\u6309\u7167\u8fd9\u79cd\u8bbe\u8ba1\uff0cpage\u65e2\u53ef\u4ee5\u4f4d\u4e8eRAM\uff0c\u4e5f\u53ef\u4ee5\u4f4d\u4e8edisk\uff0c\u800c\u5982\u679c\u76f4\u63a5\u4f7f\u7528physical address\u7684\u8bdd\uff0c\u5219process\u7684page\u53ea\u80fd\u591f\u4f4d\u4e8eRAM\u4e2d\u3002\u6240\u4ee5\u53ef\u4ee5\u770b\u51fa\uff0cvirtual address\u89e3\u8026\u4e86process\u7684page\u548cpage\u7684\u5b58\u50a8\u4f4d\u7f6e\u3002 \u5728 Paged virtual memory \u4e2d\uff0c\u7531 Page tables \u6765\u8bb0\u5f55\u6620\u5c04\u5173\u7cfb\u3002 \u5728 Virtual function \u4e2d\uff0c\u7531 Dispatch table \u6765\u8bb0\u5f55\u6620\u5c04\u5173\u7cfb\u3002 \u8fd9\u79cd\u4e00\u5bf9\u591a\u662f\u9700\u8981\u4e00\u4e2atable\u6765\u8bb0\u5f55\u6620\u5c04\u5173\u7cfb\u7684\u3002","title":"Philosophy-level"},{"location":"Post/Philosophy-level/#_1","text":"\u8ba1\u7b97\u673a\u79d1\u5b66\u9886\u57df\u7684 layers of abstraction \u601d\u60f3\u7684\u53ef\u8c13\u7531\u6765\u5df2\u4e45\u4e14\u5f71\u54cd\u6df1\u8fdc\uff0c\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u65b9\u65b9\u9762\u9762\u6211\u4eec\u90fd\u80fd\u591f\u770b\u5230\u5b83\u7684\u8eab\u5f71\u548c\u5f71\u54cd\uff0c\u540e\u9762\u4e3a\u4e86\u63cf\u8ff0\u4fbf\u5229\uff0c\u5c06 layers of abstraction \u601d\u60f3\u7b80\u79f0\u4e3a \u5206\u5c42\u601d\u60f3 \u3002\u6700\u80fd\u591f\u4f53\u73b0 \u5206\u5c42\u601d\u60f3 \u7684\u4e00\u4e2a\u8bcd\u662f\uff1ahierarchy\uff08\u5c42\u7ea7\uff09\uff0c\u7ef4\u57fa\u767e\u79d1\u7684 hierarchy \u5bf9hierarchy\u7684\u603b\u7ed3\u662f\u975e\u5e38\u8be6\u7ec6\u7684\uff0c\u975e\u5e38\u503c\u5f97\u4e00\u8bfb\uff0c\u4ece\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0chierarchy\u5728\u5404\u4e2a\u5b66\u79d1\u4e2d\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\uff1a Hierarchy is an important concept in a wide variety of fields, such as philosophy , mathematics , computer science , organizational theory , systems theory , and the social sciences (especially political philosophy ). \u5176\u5b9e\u4ece\u8fd9\u4e0a\u8bc9\u8bba\u65ad\u4e2d\u6211\u4eec\u4e5f\u53ef\u4ee5\u5012\u63a8\u51fa\uff1a\u5206\u5c42\u601d\u60f3\u5728\u5404\u4e2a\u5b66\u79d1\u4e2d\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u5176\u5b9e\u5982\u679c\u5f80\u66f4\u6df1\u5c42\u6b21\u53bb\u601d\u8003\u7684\u8bdd\uff0c\u5206\u5c42\u601d\u60f3\u5176\u5b9e\u662f\u4e00\u79cd\u7ed3\u6784\u5316\u7684\u601d\u7ef4\uff0c\u5173\u4e8e\u8fd9\u4e2a\u8fd8\u9700\u8981\u8fdb\u884c\u4e00\u4e9b\u9605\u8bfb\u3002 \u4e0b\u9762\u662f\u6211\u6240\u603b\u7ed3\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5404\u4e2a\u9886\u57df\u4e2d\u5206\u5c42\u7684\u5e94\u7528\uff1a","title":"\u5206\u5c42\u601d\u60f3"},{"location":"Post/Philosophy-level/#architecture","text":"\u4f5c\u4e3a\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u6211\u4eec\u5e38\u5e38\u542c\u5230architecture\uff08\u67b6\u6784\uff09\u8fd9\u4e2a\u8bcd\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u9ad8\u7aef\u804c\u4f4d\u53eb\u505aarchitect\uff08\u67b6\u6784\u5e08\uff09\u3002\u8f6f\u4ef6\u6216\u7cfb\u7edf\u7684\u67b6\u6784\u4e3a\u6211\u4eec\u63cf\u8ff0\u7684\u7cfb\u7edf\u7684\u7ed3\u6784\u3001\u7ec4\u6210\u90e8\u5206\u3001\u5404\u90e8\u5206\u4e4b\u95f4\u7684\u63a5\u53e3\u3002\u5206\u5c42\u601d\u60f3\u5bf9architecture\u5f71\u54cd\u4f53\u73b0\u5728\u5404\u79cd\u5404\u6837\u7684 \u5c42\u6b21\u5316\u7ed3\u6784 \uff0c\u6bd4\u5982","title":"architecture"},{"location":"Post/Philosophy-level/#architecture-of-computing-system","text":"reference","title":"architecture of computing system"},{"location":"Post/Philosophy-level/#architecture-of-compiler","text":"reference","title":"architecture of compiler"},{"location":"Post/Philosophy-level/#_2","text":"\u7f16\u8bd1\u5668\u5206\u4e3a\u524d\u6bb5\u548c\u540e\u7aef\uff0c\u4e2d\u95f4\u8868\u793a\u7406\u89e3\u524d\u6bb5\u4e0e\u540e\u7aef\u3002\u4e5f\u53ef\u4ee5\u8bf4\u4e2d\u95f4\u8868\u793a\u662f\u4e24\u8005\u4e4b\u95f4\u7684\u63a5\u53e3\u3002","title":"\u4e2d\u95f4\u8868\u793a"},{"location":"Post/Philosophy-level/#communication-protocol","text":"\u5404\u79cd\u5404\u6837\u7684\u901a\u4fe1\u534f\u8bae\u53ef\u4ee5\u8bf4\u662f\u6700\u6700\u80fd\u591f\u4f53\u73b0\u5206\u5c42\u601d\u60f3\u7684\u4e86\uff0c\u5728 Communication protocol \u7684 Protocol design \u7ae0\u8282\u4e2d\u5c31\u603b\u7ed3\u4e86\u534f\u8bae\u6d89\u53ca\u7684\u601d\u60f3\uff1a Layering \u3002\u9664\u6b64\u4e4b\u5916\uff0c\u53c2\u52a0\uff1a Hierarchical internetworking model \u3002 \u4e0b\u9762\u5217\u4e3e\u4e86\u51e0\u4e2a\u5e38\u89c1\u534f\u8bae\uff0c\u5b83\u4eec\u90fd\u80fd\u975e\u5e38\u597d\u5730\u4f53\u73b0\u4e86\u5206\u5c42\u601d\u60f3\uff1a","title":"Communication protocol"},{"location":"Post/Philosophy-level/#osi-model","text":"OSI model \u53ef\u4ee5\u8bf4\u662f\u5206\u5c42\u601d\u60f3\u7684\u6700\u4f73\u4f53\u73b0\uff0c\u4e0b\u9762\u662f\u6458\u81ea OSI model \uff1a The Open Systems Interconnection model ( OSI model ) is a conceptual model that characterizes and standardizes the communication functions of a telecommunication or computing system without regard to its underlying internal structure and technology. Its goal is the interoperability of diverse communication systems with standard communication protocols . The model partitions a communication system into abstraction layers . The original version of the model had seven layers. A layer serves the layer above it and is served by the layer below it. \u4e0a\u9762\u8fd9\u6bb5\u8bdd\u5176\u5b9e\u63cf\u8ff0\u4e86 \u5206\u5c42 \u6240\u5e26\u6765\u7684\u597d\u5904\uff1ainteroperability \uff0c\u5404\u5c42\u4e4b\u95f4\u4e92\u76f8\u900f\u660e\uff08\u9690\u85cf\u5185\u90e8\u7ed3\u6784\u548c\u6280\u672f\uff09\uff0c\u901a\u8fc7\u7ea6\u5b9a\u597d\u7684 communication protocols \u8fdb\u884c\u4ea4\u4e92\u3002 OSI model by layer layer 7 Application layer 6 Presentation layer 5 Session layer 4 Transport layer 3 Network layer 2 Data link layer 1 Physical layer","title":"OSI model"},{"location":"Post/Philosophy-level/#internet-protocol-suite","text":"","title":"Internet protocol suite"},{"location":"Post/Philosophy-level/#database-abstraction-layer","text":"\u8fd9\u6bb5\u63cf\u8ff0\u975e\u5e38\u597d\uff1a A database abstraction layer ( DBAL or DAL ) is an application programming interface which unifies the communication between a computer application and databases such as SQL Server , DB2 , MySQL , PostgreSQL , Oracle or SQLite .","title":"Database abstraction layer"},{"location":"Post/Philosophy-level/#_3","text":"\u5c42\u6b21\u601d\u60f3 \u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u91cd\u8981\u601d\u60f3\uff0c\u5b83\u6f5c\u79fb\u9ed8\u5316\u5730\u5f71\u54cd\u8fd9\u8ba1\u7b97\u673a\u79d1\u5b66\uff0c\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u4ee5 \u5c42\u6b21\u601d\u60f3 \u6765\u601d\u8003\uff0c\u6765\u5206\u6790\u5404\u79cd\u7cfb\u7edf\uff0c\u5219\u95ee\u9898\u4f1a\u53d8\u5f97\u6e05\u6670\u3002","title":"\u4ee5\u5c42\u6b21\u601d\u60f3\u6765\u601d\u8003"},{"location":"Post/Philosophy-level/#_4","text":"\u5f53\u6211\u4eec\u7ad9\u5728\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u4e0d\u540c\u5c42\u6b21\u6765\u601d\u8003\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u4e0d\u540c\u5c42\u6b21\u4e4b\u95f4\u4f1a\u5b58\u5728\u7740\u5927\u91cf\u7684\u76f8\u4e92\u6982\u5ff5\u501f\u7528\u3002\u6bd4\u5982\uff1a","title":"\u4e0d\u540c\u5c42\u6b21\u76f8\u4e92\u501f\u7528\u6982\u5ff5"},{"location":"Post/Philosophy-level/#example-one","text":"\u4e0d\u540c\u5c42\u6b21\u63cf\u8ff0\u672c\u8d28\u4e0a\u975e\u5e38\u7c7b\u4f3c\u7684\u4e8b\u52a1\u6709\u7740\u4e0d\u540c\u7684\u8bf4\u6cd5\uff0c\u6bd4\u5982\u5728\u300a How-OS-run-01-OS-kernel-is-event-driven \u300b\u4e2d\u910b\u603b\u7ed3\u7684\uff1a \u6211\u4eec\u60ca\u559c\u7684\u53d1\u73b0\u7ad9\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u4e0d\u540c\u7684\u5c42\u6b21\u6765\u63cf\u8ff0\u672c\u8d28\u4e0a\u975e\u5e38\u7c7b\u4f3c\u7684\u4e8b\u52a1\u6709\u7740\u4e0d\u540c\u7684\u8bf4\u6cd5\uff0c\u4e0b\u9762\u5bf9\u6b64\u8fdb\u884c\u4e86\u5bf9\u6bd4\uff1a Hardware Software Interrupt-driven Event-driven architecture / Event-driven programming Interrupt Event (computing) Interrupt handler / Interrupt service routine Event handler / Callback function \u5404\u79cdinterrupt\u5c31\u662f\u6240\u8c13\u7684event\u3002","title":"example one"},{"location":"Post/Philosophy-level/#example-two","text":"\u6b63\u5728\u4e0d\u540c\u7684\u5c42\u6b21\u6765\u770b\u5f85\u8ba1\u7b97\u673a\u79d1\u5b66=\u300b\u4e0d\u540c\u5c42\u6b21\u76f8\u4e92\u501f\u7528\u76f8\u540c\u6982\u5ff5-\u300b\u4e0d\u540c\u5c42\u6b21\u76f8\u4e92\u900f\u660e\uff08\u9690\u85cf\u5185\u90e8\u7ec6\u8282\uff09\uff0c\u901a\u8fc7\u63a5\u53e3\u6765\u8fdb\u884c\u4ea4\u4e92","title":"example two"},{"location":"Post/Philosophy-level/#_5","text":"\u4e0d\u540c\u5c42\u6b21\u4f7f\u7528\u4e0d\u540c\u7684\u8bed\u8a00\uff1a\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\u3001\u4e2d\u7ea7\u7f16\u7a0b\u8bed\u8a00\u3001\u4f4e\u7ea7\u7f16\u7a0b\u8bed\u8a00 \u4e0d\u540c\u5c42\u6b21\u7684\u8bed\u8a00\u4e4b\u95f4\u7684\u8f6c\u6362","title":"\u4e0d\u540c\u5c42\u6b21\u4f7f\u7528\u4e0d\u540c\u8bed\u8a00"},{"location":"Post/Philosophy-level/#_6","text":"\u5206\u5c42\uff0c\u62bd\u8c61\uff0c\u63a5\u53e3\uff0c\u8fd9\u4e9b\u662f\u4e09\u4e2a\u540c\u4e49\u8bcd\u3002\u5b83\u4eec\u662f\u8d2f\u7a7f\u4e86computer science\u548csoftware engineering\u7684\u601d\u60f3","title":"\u603b\u7ed3"},{"location":"Post/Philosophy-level/#_7","text":"Abstraction layer","title":"\u62bd\u8c61\u5c42"},{"location":"Post/Philosophy-level/#_8","text":"","title":"\u5206\u5c42\u5e26\u6765\u7684\u4ef7\u503c"},{"location":"Post/Philosophy-level/#separation-of-concerns","text":"","title":"Separation of concerns"},{"location":"Post/Philosophy-level/#abstraction-computer-science","text":"","title":"Abstraction (computer science)"},{"location":"Post/Philosophy-level/#layer-object-oriented-design","text":"","title":"Layer (object-oriented design)"},{"location":"Post/Philosophy-level/#portability","text":"\u5982 Diversity of operating systems and portability \u62bd\u8c61\u5c42\u5e26\u6765\u79fb\u690d\u6027","title":"Portability"},{"location":"Post/Philosophy-level/#_9","text":"\u5728 Kernel (operating system) \u4e2d\u6709\u8fd9\u6837\u7684\u63cf\u8ff0\uff1a kernel space . user space . This separation prevents user data and kernel data from interfering with each other and causing instability and slowness, as well as preventing malfunctioning application programs from crashing the entire operating system. \u5206\u5c42\u5e26\u6765\u9694\u79bb\uff0c\u8fdb\u800c\u5e26\u6765\u5b89\u5168","title":"\u5206\u5c42\u5e26\u6765\u5b89\u5168"},{"location":"Post/Philosophy-level/#modularity","text":"\u5728 Kernel (operating system) \u4e2d\u6709\u8fd9\u6837\u7684\u63cf\u8ff0","title":"\u5206\u5c42\u5e26\u6765modularity"},{"location":"Post/Philosophy-level/#pipeline","text":"\u4e00\u822c\uff0c\u4f1a\u5c06\u6309\u7167\u5206\u5c42\u8bbe\u8ba1\u7684\u7cfb\u7edf\u79f0\u4e3a\u6808\uff0c\u6bd4\u5982\u534f\u8bae\u6808\u3002\u6709\u65f6\u5019\u4e5f\u4f1a\u79f0\u4e3apipeline","title":"\u5206\u5c42\u4e0e\u6808\u3001pipeline"},{"location":"Post/Philosophy-level/#solution-stack","text":"","title":"Solution stack"},{"location":"Post/Philosophy-level/#virtual","text":"virtual\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u5e38\u5e38\u4f1a\u51fa\u73b0\u7684\u4e00\u4e2a\u8bcd\uff0c\u6bd4\u5982\uff1a Virtual memory Virtual method \u7ecf\u8fc7\u672c\u6587\u524d\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5feb\u5730\u77e5\u9053\uff1avirtual\u4e5f\u662f\u4e00\u79cd\u62bd\u8c61\uff0c\u4e00\u79cd\u5206\u5c42\uff0c\u8fd9\u79cd\u5206\u5c42\u6240\u5e26\u6765\u7684\u4ef7\u503c\u5c31\u662f\u89e3\u8026\u3002\u4e0b\u9762\u4ee5virtual address\u6765\u8fdb\u884c\u8bf4\u660e\uff1a process\u5728\u8fd0\u884c\u7684\u65f6\u5019\u4f7f\u7528virtual memory address\uff0c\u7531OS\u6839\u636epage table\u5c06virtual address\u7ffb\u8bd1\u4e3aphysical address\uff1b\u4e0eprocess\u76f4\u63a5\u4f7f\u7528physical address\u76f8\u6bd4\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u591a\u6dfb\u52a0\u4e86\u4e00\u5c42\uff1a\u8f6c\u6362\u5c42\u3002\u8fd9\u79cd\u8bbe\u8ba1\u5e26\u6765\u7684\u4ef7\u503c\u662f\uff1a\u5b83\u89e3\u8026\u4e86process\u7684page\u548cpage\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u5177\u4f53\u6765\u8bb2\u5c31\u662f\u6309\u7167\u8fd9\u79cd\u8bbe\u8ba1\uff0cpage\u65e2\u53ef\u4ee5\u4f4d\u4e8eRAM\uff0c\u4e5f\u53ef\u4ee5\u4f4d\u4e8edisk\uff0c\u800c\u5982\u679c\u76f4\u63a5\u4f7f\u7528physical address\u7684\u8bdd\uff0c\u5219process\u7684page\u53ea\u80fd\u591f\u4f4d\u4e8eRAM\u4e2d\u3002\u6240\u4ee5\u53ef\u4ee5\u770b\u51fa\uff0cvirtual address\u89e3\u8026\u4e86process\u7684page\u548cpage\u7684\u5b58\u50a8\u4f4d\u7f6e\u3002 \u5728 Paged virtual memory \u4e2d\uff0c\u7531 Page tables \u6765\u8bb0\u5f55\u6620\u5c04\u5173\u7cfb\u3002 \u5728 Virtual function \u4e2d\uff0c\u7531 Dispatch table \u6765\u8bb0\u5f55\u6620\u5c04\u5173\u7cfb\u3002 \u8fd9\u79cd\u4e00\u5bf9\u591a\u662f\u9700\u8981\u4e00\u4e2atable\u6765\u8bb0\u5f55\u6620\u5c04\u5173\u7cfb\u7684\u3002","title":"virtual"},{"location":"Post/Philosophy-separation/","text":"Separation # Separation of protection and security # Separation of concerns # Separation of mechanism and policy # Separation of protection and security # \u5982\u4f55\u5b9e\u73b0\u9694\u79bb\uff1f # \u53ef\u4ee5\u4f7f\u7528 namespace","title":"Philosophy-separation"},{"location":"Post/Philosophy-separation/#separation","text":"","title":"Separation"},{"location":"Post/Philosophy-separation/#separation-of-protection-and-security","text":"","title":"Separation of protection and security"},{"location":"Post/Philosophy-separation/#separation-of-concerns","text":"","title":"Separation of concerns"},{"location":"Post/Philosophy-separation/#separation-of-mechanism-and-policy","text":"","title":"Separation of mechanism and policy"},{"location":"Post/Philosophy-separation/#separation-of-protection-and-security_1","text":"","title":"Separation of protection and security"},{"location":"Post/Philosophy-separation/#_1","text":"\u53ef\u4ee5\u4f7f\u7528 namespace","title":"\u5982\u4f55\u5b9e\u73b0\u9694\u79bb\uff1f"},{"location":"Post/Thoughts/","text":"\u4e00\u4e9b\u60f3\u6cd5 # \u77e5\u8bc6\u5982\u6b64\u7e41\u6742\uff0c\u6240\u4ee5\u5bf9\u5b83\u4eec\u7684\u7ec4\u7ec7\uff0c\u68b3\u7406\u975e\u5e38\u91cd\u8981 # \u8fd9\u63cf\u8ff0\u4e86\u6211\u7684\u5199\u4f5c\u539f\u5219\u3002 \u68b3\u7406\uff0c\u800c\u4e0d\u662f\u6284\u5199 # \u5e94\u8be5\u575a\u6301\u5982\u4e0a\u539f\u5219\u6765\u8fdb\u884c\u7f16\u5199\uff0c\u7ed9\u51fa\u94fe\u63a5 \u6784\u5efabig picture # \u6784\u5efa\u7406\u8bba\u6846\u67b6 \u4ece\u66f4\u9ad8\u7684\u89d2\u5ea6\u6765\u601d\u8003\u95ee\u9898 # \u4ece\u5177\u4f53\u95ee\u9898\u4e2d\u8df3\u8131\u51fa\u6765\uff0c\u4ece\u7406\u8bba\u7684\u9ad8\u5ea6\u6765\u5206\u6790\u5b83\uff0c\u5982\u4ececompiler principle\u6269\u5c55\u5230automaton and formal language theory\uff0c\u7136\u540e\u6269\u5f20\u5230 Theory of computation \u3002 \u4e00\u4e9b\u5e38\u7528\u7684\u89d2\u5ea6\uff1a \u4ece\u65f6\u7a7a\u7684\u89d2\u5ea6 \u4ece\u54f2\u5b66\u7684\u89d2\u5ea6\uff08\u6bd4\u5982 Formalism (philosophy of mathematics) \uff09 \u4ee5\u53d1\u5c55\u7684\u773c\u5149\u6765\u770b\u5f85\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6f14\u8fdb # \u8ba1\u7b97\u673a\u79d1\u5b66\u662f\u5728\u4e0d\u65ad\u5730\u6f14\u8fdb\u3001\u4e0d\u65ad\u5f3a\u5927\u7684\uff0c\u4eca\u5929\u6211\u4eec\u6240\u7ecf\u5386\u7684\u8fd9\u4e9b\u53d8\u9769\uff08\u5982AI\u3001blockchain\u7b49\uff09\u5c06\u79f0\u4e3a\u540e\u4e16\u4eba\u4eec\u773c\u4e2d\u7684\u5386\u53f2\uff0c\u6211\u4eec\u9700\u8981\u4e0d\u65ad\u5730\u8ddf\u8fdb\u65b0\u7684\u6280\u672f\uff0c\u800c\u4e14\u5728\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u68b3\u7406\u6280\u672f\u7684\u53d1\u5c55\u8109\u7edc\uff0c\u8fd9\u6837\u6211\u4eec\u80fd\u591f\u66f4\u597d\u5730\u638c\u63e1\u65b0\u6280\u672f\u6240\u6539\u53d8\u7684\u662f\u4ec0\u4e48\u3001\u53d1\u660e\u5bb6\u3001\u7814\u7a76\u5458\u4eec\u4e3a\u4ec0\u4e48\u53d1\u660e\u521b\u9020\u5b83\u3002 \u6bd4\u5982\uff1a \u4eceApache \u5230 Nginx \u4ecegcc \u5230 llvm \u4ece Monolithic kernel \u5230 Microkernel \u610f\u56fe\u51b3\u5b9a\u6700\u7ec8\u7684\u7ed3\u679c # \u5728\u9605\u8bfb clang \u7684 Clang vs Other Open Source Compilers \u65f6\uff0c\u5176\u4e2d\u7684\u4e00\u6bb5\u8bdd\u8ba9\u6211\u5370\u8c61\u6df1\u523b\uff1a The goal of this list is to describe how differences in goals lead to different strengths and weaknesses, not to make some compiler look bad. \u5728 Clang vs Other Open Source Compilers \u4e2d\uff0c\u4f5c\u8005\u5bf9\u6bd4\u4e86Clang\u548c\u5176\u5b83\u51e0\u6b3ecompiler\u7684strength\u548cweakness\uff0c\u4ece\u4e2d\u6211\u6240\u9886\u609f\u5230\u7684\u662f\uff1a\u610f\u56fe\u51b3\u5b9a\u6700\u7ec8\u7ed3\u679c\uff0c\u5373\u8f6f\u4ef6\u7684\u8bbe\u8ba1\u8005\u5728\u5f00\u53d1\u8f6f\u4ef6\u4e4b\u524d\u7684\u7684\u76ee\u6807\u6700\u7ec8\u51b3\u5b9a\u4e86\u4ed6\u6240\u5f00\u53d1\u51fa\u8fd9\u8f6f\u4ef6\u7684strength\u548cweakness\uff0c\u6240\u4ee5\uff0c\u9ad8\u660e\u7684\u8bbe\u8ba1\u8005\u5bf9\u4e8e\u8f6f\u4ef6\u7684\u91cd\u8981\u6027\u3002 \u4e0e\u6b64\u7c7b\u4f3c\u7684\u6848\u4f8b\u8fd8\u6709\uff1a git Internal # \u5728\u9605\u8bfbgit\u7684 1.3 Getting Started - What is Git? \u8282\u65f6\u5019\uff0c\u5176\u4e2d\u7684\u8fd9\u6bb5\u8bdd\u4ee4\u6211\u5370\u8c61\u6df1\u523b\uff1a if you understand what Git is and the fundamentals of how it works, then using Git effectively will probably be much easier for you. \u663e\u7136\uff0c\u5b83\u80cc\u540e\u8574\u542b\u7684\u9053\u7406\u80af\u5b9a\u4e0d\u4ec5\u4ec5\u5c40\u9650\u4e8egit\u3002\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8fc7\u4e86 Reinventing the wheel \u7684\u5e74\u4ee3\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u6709\u5927\u91cf\u7684\u3001\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7684\u8f6f\u4ef6\uff0c\u6bd4\u5982operating system\uff0cversion control system\uff0c\u4e00\u4e2a\u4e0d\u4e89\u7684\u4e8b\u5b9e\u662f\uff1a\u5982\u679c\u4e86\u89e3\u8f6f\u4ef6\u7684\u5b9e\u73b0\u539f\u7406\u3001\u5185\u90e8\u7ec6\u8282\uff0c\u90a3\u4e48\u5c31\u80fd\u591f\u9ad8\u6548\u5730\u4f7f\u7528\u5b83\u3002","title":"Thoughts"},{"location":"Post/Thoughts/#_1","text":"","title":"\u4e00\u4e9b\u60f3\u6cd5"},{"location":"Post/Thoughts/#_2","text":"\u8fd9\u63cf\u8ff0\u4e86\u6211\u7684\u5199\u4f5c\u539f\u5219\u3002","title":"\u77e5\u8bc6\u5982\u6b64\u7e41\u6742\uff0c\u6240\u4ee5\u5bf9\u5b83\u4eec\u7684\u7ec4\u7ec7\uff0c\u68b3\u7406\u975e\u5e38\u91cd\u8981"},{"location":"Post/Thoughts/#_3","text":"\u5e94\u8be5\u575a\u6301\u5982\u4e0a\u539f\u5219\u6765\u8fdb\u884c\u7f16\u5199\uff0c\u7ed9\u51fa\u94fe\u63a5","title":"\u68b3\u7406\uff0c\u800c\u4e0d\u662f\u6284\u5199"},{"location":"Post/Thoughts/#big-picture","text":"\u6784\u5efa\u7406\u8bba\u6846\u67b6","title":"\u6784\u5efabig picture"},{"location":"Post/Thoughts/#_4","text":"\u4ece\u5177\u4f53\u95ee\u9898\u4e2d\u8df3\u8131\u51fa\u6765\uff0c\u4ece\u7406\u8bba\u7684\u9ad8\u5ea6\u6765\u5206\u6790\u5b83\uff0c\u5982\u4ececompiler principle\u6269\u5c55\u5230automaton and formal language theory\uff0c\u7136\u540e\u6269\u5f20\u5230 Theory of computation \u3002 \u4e00\u4e9b\u5e38\u7528\u7684\u89d2\u5ea6\uff1a \u4ece\u65f6\u7a7a\u7684\u89d2\u5ea6 \u4ece\u54f2\u5b66\u7684\u89d2\u5ea6\uff08\u6bd4\u5982 Formalism (philosophy of mathematics) \uff09","title":"\u4ece\u66f4\u9ad8\u7684\u89d2\u5ea6\u6765\u601d\u8003\u95ee\u9898"},{"location":"Post/Thoughts/#_5","text":"\u8ba1\u7b97\u673a\u79d1\u5b66\u662f\u5728\u4e0d\u65ad\u5730\u6f14\u8fdb\u3001\u4e0d\u65ad\u5f3a\u5927\u7684\uff0c\u4eca\u5929\u6211\u4eec\u6240\u7ecf\u5386\u7684\u8fd9\u4e9b\u53d8\u9769\uff08\u5982AI\u3001blockchain\u7b49\uff09\u5c06\u79f0\u4e3a\u540e\u4e16\u4eba\u4eec\u773c\u4e2d\u7684\u5386\u53f2\uff0c\u6211\u4eec\u9700\u8981\u4e0d\u65ad\u5730\u8ddf\u8fdb\u65b0\u7684\u6280\u672f\uff0c\u800c\u4e14\u5728\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u68b3\u7406\u6280\u672f\u7684\u53d1\u5c55\u8109\u7edc\uff0c\u8fd9\u6837\u6211\u4eec\u80fd\u591f\u66f4\u597d\u5730\u638c\u63e1\u65b0\u6280\u672f\u6240\u6539\u53d8\u7684\u662f\u4ec0\u4e48\u3001\u53d1\u660e\u5bb6\u3001\u7814\u7a76\u5458\u4eec\u4e3a\u4ec0\u4e48\u53d1\u660e\u521b\u9020\u5b83\u3002 \u6bd4\u5982\uff1a \u4eceApache \u5230 Nginx \u4ecegcc \u5230 llvm \u4ece Monolithic kernel \u5230 Microkernel","title":"\u4ee5\u53d1\u5c55\u7684\u773c\u5149\u6765\u770b\u5f85\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6f14\u8fdb"},{"location":"Post/Thoughts/#_6","text":"\u5728\u9605\u8bfb clang \u7684 Clang vs Other Open Source Compilers \u65f6\uff0c\u5176\u4e2d\u7684\u4e00\u6bb5\u8bdd\u8ba9\u6211\u5370\u8c61\u6df1\u523b\uff1a The goal of this list is to describe how differences in goals lead to different strengths and weaknesses, not to make some compiler look bad. \u5728 Clang vs Other Open Source Compilers \u4e2d\uff0c\u4f5c\u8005\u5bf9\u6bd4\u4e86Clang\u548c\u5176\u5b83\u51e0\u6b3ecompiler\u7684strength\u548cweakness\uff0c\u4ece\u4e2d\u6211\u6240\u9886\u609f\u5230\u7684\u662f\uff1a\u610f\u56fe\u51b3\u5b9a\u6700\u7ec8\u7ed3\u679c\uff0c\u5373\u8f6f\u4ef6\u7684\u8bbe\u8ba1\u8005\u5728\u5f00\u53d1\u8f6f\u4ef6\u4e4b\u524d\u7684\u7684\u76ee\u6807\u6700\u7ec8\u51b3\u5b9a\u4e86\u4ed6\u6240\u5f00\u53d1\u51fa\u8fd9\u8f6f\u4ef6\u7684strength\u548cweakness\uff0c\u6240\u4ee5\uff0c\u9ad8\u660e\u7684\u8bbe\u8ba1\u8005\u5bf9\u4e8e\u8f6f\u4ef6\u7684\u91cd\u8981\u6027\u3002 \u4e0e\u6b64\u7c7b\u4f3c\u7684\u6848\u4f8b\u8fd8\u6709\uff1a git","title":"\u610f\u56fe\u51b3\u5b9a\u6700\u7ec8\u7684\u7ed3\u679c"},{"location":"Post/Thoughts/#internal","text":"\u5728\u9605\u8bfbgit\u7684 1.3 Getting Started - What is Git? \u8282\u65f6\u5019\uff0c\u5176\u4e2d\u7684\u8fd9\u6bb5\u8bdd\u4ee4\u6211\u5370\u8c61\u6df1\u523b\uff1a if you understand what Git is and the fundamentals of how it works, then using Git effectively will probably be much easier for you. \u663e\u7136\uff0c\u5b83\u80cc\u540e\u8574\u542b\u7684\u9053\u7406\u80af\u5b9a\u4e0d\u4ec5\u4ec5\u5c40\u9650\u4e8egit\u3002\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8fc7\u4e86 Reinventing the wheel \u7684\u5e74\u4ee3\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u6709\u5927\u91cf\u7684\u3001\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7684\u8f6f\u4ef6\uff0c\u6bd4\u5982operating system\uff0cversion control system\uff0c\u4e00\u4e2a\u4e0d\u4e89\u7684\u4e8b\u5b9e\u662f\uff1a\u5982\u679c\u4e86\u89e3\u8f6f\u4ef6\u7684\u5b9e\u73b0\u539f\u7406\u3001\u5185\u90e8\u7ec6\u8282\uff0c\u90a3\u4e48\u5c31\u80fd\u591f\u9ad8\u6548\u5730\u4f7f\u7528\u5b83\u3002","title":"Internal"},{"location":"Post/Time-and-space/","text":"time and space # time and space\uff0c \u65f6\u4e0e\u7a7a\u3002 \u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u65f6\u7a7a # \u7b97\u6cd5\u7684\u65f6\u7a7a\u5206\u6790 CPU\u7684\u65f6\u949f OS\u7684\u65f6\u949f \u7cfb\u7edf\u7684\u65f6\u949f\u5c31\u76f8\u5f53\u4e8e\u7cfb\u7edf\u7684heartbeat\u3002 version control\uff1a\u8bb0\u5f55\u5386\u53f2 \u4eceCPU\u7684\u63a7\u5236\u5668\u5230OS\u7684TimerEvent\u6765\u8c03\u5ea6Task\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2dTimer\u7684\u91cd\u8981\u4ef7\u503c\u3002 \u7cfb\u7edf\u7684\u5fc3\u8df3\u3002","title":"Time-and-space"},{"location":"Post/Time-and-space/#time-and-space","text":"time and space\uff0c \u65f6\u4e0e\u7a7a\u3002","title":"time and space"},{"location":"Post/Time-and-space/#_1","text":"\u7b97\u6cd5\u7684\u65f6\u7a7a\u5206\u6790 CPU\u7684\u65f6\u949f OS\u7684\u65f6\u949f \u7cfb\u7edf\u7684\u65f6\u949f\u5c31\u76f8\u5f53\u4e8e\u7cfb\u7edf\u7684heartbeat\u3002 version control\uff1a\u8bb0\u5f55\u5386\u53f2 \u4eceCPU\u7684\u63a7\u5236\u5668\u5230OS\u7684TimerEvent\u6765\u8c03\u5ea6Task\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2dTimer\u7684\u91cd\u8981\u4ef7\u503c\u3002 \u7cfb\u7edf\u7684\u5fc3\u8df3\u3002","title":"\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u65f6\u7a7a"}]}