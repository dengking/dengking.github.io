{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"My projects \u4e0b\u9762\u662f\u6211\u6240\u521b\u5efa\u7684project\u3002 programming language\u76f8\u5173 \u5305\u62ec programming language theory \u3001programming language implementation\u3001\u5177\u4f53\u7684programming language\u3002 project name explanation Language Automata theory and formal language theory compiler-principle Note of book Compilers Principles, Techniques and Tools Second Edition programming-language hardware project name explanation Hardware hardware\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u5305\u62eccomputer architecture\u3001CPU\u3001memory\u7b49 operating system project name explanation Linux-OS My knowledge base of Linux operation system \"computer science is discrete\" \"computer science is discrete\"\u3002 project name explanation discrete \u5305\u62ec algorithm\u3001data structure\u3001computation theory\uff0c\u57f9\u517b\u8ba1\u7b97\u601d\u7ef4 parallel computing project name explanation Parallel-computing \u5e76\u884c\u8ba1\u7b97\uff0c\u5176\u4e2d\u5305\u62ec: \u5e76\u53d1\u3001\u5206\u5e03\u5f0f\u7b49\u7b49\u5185\u5bb9 software engineering \u8f6f\u4ef6\u5de5\u7a0b\u5b66\u79d1\uff0c\u6307\u5bfc\u5de5\u7a0b\u7684\u7406\u8bba\u3002 project name explanation software-engineering Database project name explanation DB \u6570\u636e\u5e93\u76f8\u5173\u7684\u5185\u5bb9 redis project name explanation decompose-redis Decompose Redis machine learning project name explanation machine-learning \u673a\u5668\u5b66\u4e60\u76f8\u5173\u5185\u5bb9 math project name explanation math application project name explanation timer-with-thread-pool mkdocs-nav-builder","title":"Home"},{"location":"#my#projects","text":"\u4e0b\u9762\u662f\u6211\u6240\u521b\u5efa\u7684project\u3002","title":"My projects"},{"location":"#programming#language","text":"\u5305\u62ec programming language theory \u3001programming language implementation\u3001\u5177\u4f53\u7684programming language\u3002 project name explanation Language Automata theory and formal language theory compiler-principle Note of book Compilers Principles, Techniques and Tools Second Edition programming-language","title":"programming language\u76f8\u5173"},{"location":"#hardware","text":"project name explanation Hardware hardware\u76f8\u5173\u7684\u5185\u5bb9\uff0c\u5305\u62eccomputer architecture\u3001CPU\u3001memory\u7b49","title":"hardware"},{"location":"#operating#system","text":"project name explanation Linux-OS My knowledge base of Linux operation system","title":"operating system"},{"location":"#computer#science#is#discrete","text":"\"computer science is discrete\"\u3002 project name explanation discrete \u5305\u62ec algorithm\u3001data structure\u3001computation theory\uff0c\u57f9\u517b\u8ba1\u7b97\u601d\u7ef4","title":"\"computer science is discrete\""},{"location":"#parallel#computing","text":"project name explanation Parallel-computing \u5e76\u884c\u8ba1\u7b97\uff0c\u5176\u4e2d\u5305\u62ec: \u5e76\u53d1\u3001\u5206\u5e03\u5f0f\u7b49\u7b49\u5185\u5bb9","title":"parallel computing"},{"location":"#software#engineering","text":"\u8f6f\u4ef6\u5de5\u7a0b\u5b66\u79d1\uff0c\u6307\u5bfc\u5de5\u7a0b\u7684\u7406\u8bba\u3002 project name explanation software-engineering","title":"software engineering"},{"location":"#database","text":"project name explanation DB \u6570\u636e\u5e93\u76f8\u5173\u7684\u5185\u5bb9","title":"Database"},{"location":"#redis","text":"project name explanation decompose-redis Decompose Redis","title":"redis"},{"location":"#machine#learning","text":"project name explanation machine-learning \u673a\u5668\u5b66\u4e60\u76f8\u5173\u5185\u5bb9","title":"machine learning"},{"location":"#math","text":"project name explanation math","title":"math"},{"location":"#application","text":"project name explanation timer-with-thread-pool mkdocs-nav-builder","title":"application"},{"location":"about/","text":"About me Hi, I'm a software engineer living in Hangzhou,China. If you want to get in touch,drop me an email( 2238897886@qq.com ). I write in Chinese and English, but it takes more time to write in English because of lacking practice. As an software engineer, I insist on studying theories in computer science and software engineering and try to get a clear and comprehensive picture of theories of specific field in computer science and software engineering , because I think the theory can guide engineer in practice. I like reading, below are some book that I think useful to an software engineer. Book Author Introduction to Automata and Language Theory(aka Cinderella Book ) Jeffrey D. Ullman , John E. Hopcroft Compilers: Principles, Techniques, and Tools (aka Dragon Book ) Jeffrey D. Ullman , Alfred V. Aho Foundations of Computer Science/C Edition Jeffrey D. Ullman Deep Learning Ian Goodfellow and Yoshua Bengio and Aaron Courville Advanced Programming in the UNIX\u00ae Environment Understanding the Linux Kernel, 3 rd Edition Natural Language Processing with Python Discrete Mathematics and Its Applications Interest 1\u3001Unix/Linux 2\u3001Programming language 3\u3001Web application Education 09.2012-07.2016 B.S. Software Engineering, Department of Information & Control, Xi\u2019an University of Architecture and Technology Career Period 07.2016-05.2018 Unix/Linux back-end developing 05.2018-04.2019 AI application developing 04.2019- Unix/Linux back-end developing\u3001distributed computing\u3001high performance","title":"About"},{"location":"about/#about#me","text":"Hi, I'm a software engineer living in Hangzhou,China. If you want to get in touch,drop me an email( 2238897886@qq.com ). I write in Chinese and English, but it takes more time to write in English because of lacking practice. As an software engineer, I insist on studying theories in computer science and software engineering and try to get a clear and comprehensive picture of theories of specific field in computer science and software engineering , because I think the theory can guide engineer in practice. I like reading, below are some book that I think useful to an software engineer. Book Author Introduction to Automata and Language Theory(aka Cinderella Book ) Jeffrey D. Ullman , John E. Hopcroft Compilers: Principles, Techniques, and Tools (aka Dragon Book ) Jeffrey D. Ullman , Alfred V. Aho Foundations of Computer Science/C Edition Jeffrey D. Ullman Deep Learning Ian Goodfellow and Yoshua Bengio and Aaron Courville Advanced Programming in the UNIX\u00ae Environment Understanding the Linux Kernel, 3 rd Edition Natural Language Processing with Python Discrete Mathematics and Its Applications","title":"About me"},{"location":"about/#interest","text":"1\u3001Unix/Linux 2\u3001Programming language 3\u3001Web application","title":"Interest"},{"location":"about/#education","text":"09.2012-07.2016 B.S. Software Engineering, Department of Information & Control, Xi\u2019an University of Architecture and Technology","title":"Education"},{"location":"about/#career","text":"Period 07.2016-05.2018 Unix/Linux back-end developing 05.2018-04.2019 AI application developing 04.2019- Unix/Linux back-end developing\u3001distributed computing\u3001high performance","title":"Career"},{"location":"Post/","text":"\u5173\u4e8e\u8fd9\u4e9b\u6587\u7ae0 \u8fd9\u4e9b\u6587\u7ae0\u662f\u6211\u57fa\u4e8e\u6211\u7684\u9605\u8bfb\u6240\u603b\u7ed3\u7684\uff0c\u4e3b\u8981\u5305\u542b\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u601d\u60f3\u3001convention\u3001\u4e00\u4e9b\u60f3\u6cd5\u3001\u601d\u8003\u95ee\u9898\u7684\u89d2\u5ea6\u7b49\uff0c\u8fd9\u5176\u4e2d\u7684\u4e00\u4e9b\u5185\u5bb9\u6e90\u4e8e\u6211\u521b\u5efa\u7684\u5de5\u7a0b\uff0c\u8fd9\u5176\u4e2d\u6240\u63cf\u8ff0\u7684\u5185\u5bb9\u4e5f\u4f1a\u5728\u8fd9\u4e9b\u5de5\u7a0b\u4e2d\u51fa\u73b0\u3002","title":"Introduction"},{"location":"Post/#_1","text":"\u8fd9\u4e9b\u6587\u7ae0\u662f\u6211\u57fa\u4e8e\u6211\u7684\u9605\u8bfb\u6240\u603b\u7ed3\u7684\uff0c\u4e3b\u8981\u5305\u542b\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u601d\u60f3\u3001convention\u3001\u4e00\u4e9b\u60f3\u6cd5\u3001\u601d\u8003\u95ee\u9898\u7684\u89d2\u5ea6\u7b49\uff0c\u8fd9\u5176\u4e2d\u7684\u4e00\u4e9b\u5185\u5bb9\u6e90\u4e8e\u6211\u521b\u5efa\u7684\u5de5\u7a0b\uff0c\u8fd9\u5176\u4e2d\u6240\u63cf\u8ff0\u7684\u5185\u5bb9\u4e5f\u4f1a\u5728\u8fd9\u4e9b\u5de5\u7a0b\u4e2d\u51fa\u73b0\u3002","title":"\u5173\u4e8e\u8fd9\u4e9b\u6587\u7ae0"},{"location":"Post/Glossary/","text":"Glossary \u672c\u6587\u5bf9\u5728\u5404\u4e2a\u5de5\u7a0b\u4e2d\u51fa\u73b0\u7684\u4e00\u4e9b\u672f\u8bed\u8fdb\u884c\u8bf4\u660e\u3002 \u9f99\u4e66 \u6307\u7684\u662f Compilers Principles, Techniques and Tools Second Edition(aka dragon book ) \uff0c\u53c2\u89c1\u5de5\u7a0b compiler principle \u3002 \u5206\u5c42\u601d\u60f3 \u53c2\u89c1\u6587\u7ae0 \u5206\u5c42 \u3002 UNP \u6307\u7684\u662f UNIX Network Programming(aka unpbook ) \u3002 APUE \u6307\u7684\u662f Advanced Programming in the UNIX\u00ae Environment(aka APUE ) \u3002","title":"Glossary"},{"location":"Post/Glossary/#glossary","text":"\u672c\u6587\u5bf9\u5728\u5404\u4e2a\u5de5\u7a0b\u4e2d\u51fa\u73b0\u7684\u4e00\u4e9b\u672f\u8bed\u8fdb\u884c\u8bf4\u660e\u3002","title":"Glossary"},{"location":"Post/Glossary/#_1","text":"\u6307\u7684\u662f Compilers Principles, Techniques and Tools Second Edition(aka dragon book ) \uff0c\u53c2\u89c1\u5de5\u7a0b compiler principle \u3002","title":"\u9f99\u4e66"},{"location":"Post/Glossary/#_2","text":"\u53c2\u89c1\u6587\u7ae0 \u5206\u5c42 \u3002","title":"\u5206\u5c42\u601d\u60f3"},{"location":"Post/Glossary/#unp","text":"\u6307\u7684\u662f UNIX Network Programming(aka unpbook ) \u3002","title":"UNP"},{"location":"Post/Glossary/#apue","text":"\u6307\u7684\u662f Advanced Programming in the UNIX\u00ae Environment(aka APUE ) \u3002","title":"APUE"},{"location":"Post/Knowledge-base/","text":"\u4e00\u4e9b\u597d\u7528\u7684\u77e5\u8bc6\u5e93 infogalactic Infogalactic:Introduction Infogalactic is an Internet-based, free-content encyclopedia project that is a dynamic fork of Wikipedia and improves upon that online encyclopedia's model of openly editable content. WikiMili Wikipedia \u82f1\u6587\u5b98\u7f51 https://en.wikipedia.org/ \u5728\u7f51\u7edc\u4e0d\u597d\u7684\u65f6\u5019\uff0c\u65e0\u6cd5\u8bbf\u95ee\u3002 \u4e2d\u6587\u5b98\u7f51 https://zh.wikipedia.org/ \u7ef4\u57fa\u767e\u79d1Wikipedia\u955c\u50cf\u7f51\u7ad9\u5217\u8868 \u5728 \u7ef4\u57fa\u767e\u79d1Wikipedia\u955c\u50cf\u7f51\u7ad9\u5217\u8868 \u4e2d\u7ed9\u51fa\u4e86\u5f88\u591a\u955c\u50cf\u7f51\u7ad9\uff0c\u5c1d\u8bd5\u4e86\u4e00\u4e9b\uff0c\u662f\u53ef\u4ee5\u4f7f\u7528\u7684: \u5e8f\u53f7 \u7f51\u5740 \u5907\u6ce8 \u66f4\u65b0\u65f6\u95f4 1 https://www.wanweibaike.com/ \u90e8\u5206\u5185\u5bb9\u8fdb\u884c\u6539\u7f16\u4ee5\u7b26\u5408\u4e2d\u56fd\u5927\u9646\u653f\u7b56 \u7f51\u7ad9\u540d\u79f0\u53eb\u505a: \u4e07\u7ef4\u767e\u79d1\uff0c\u5b83\u652f\u6301\u591a\u79cd\u8bed\u8a00\uff0c\u7f51\u901f\u53f6\u6bd4\u8f83\u5feb\uff0c\u6bd4\u8f83\u597d\u7528 2 https://zh-wikipedia.mirror.wit.im/ https://so.wit.im/ 3 https://wiwiki.kfd.me 4 https://chi.jinzhao.wiki/wiki/ \u652f\u6301\u591a\u79cd\u8bed\u8a00 5 https://wiki.comptechs.cn/ 6 https://bk.tw.lvfukeji.com/wiki/ 7 https://zh.wikiredia.com/ \u82f1\u65871 https://en.wanweibaike.com/ \u82f1\u65872 https://en.jinzhao.wiki/wiki/Main_Page \u82f1\u65873 http://en.wiki.sxisa.org/wiki/Main_Page \u8f83\u597d\uff0c\u53ef\u4ee5\u4f7f\u7528 \u65e5\u65871 https://ja.jinzhao.wiki/wiki/ \u65e5\u65872 http://ja.wiki.sxisa.org/wiki/ thefreedictionary \u5f88\u591a\u641c\u7d22\u7ed3\u679c\u597d\u50cf\u662f\u76f4\u63a5\u8db4\u7684\u7ef4\u57fa\u767e\u79d1\u7684\u5185\u5bb9\u3002","title":"Knowledge-base"},{"location":"Post/Knowledge-base/#_1","text":"","title":"\u4e00\u4e9b\u597d\u7528\u7684\u77e5\u8bc6\u5e93"},{"location":"Post/Knowledge-base/#infogalactic","text":"Infogalactic:Introduction Infogalactic is an Internet-based, free-content encyclopedia project that is a dynamic fork of Wikipedia and improves upon that online encyclopedia's model of openly editable content.","title":"infogalactic"},{"location":"Post/Knowledge-base/#wikimili","text":"","title":"WikiMili"},{"location":"Post/Knowledge-base/#wikipedia","text":"","title":"Wikipedia"},{"location":"Post/Knowledge-base/#_2","text":"https://en.wikipedia.org/ \u5728\u7f51\u7edc\u4e0d\u597d\u7684\u65f6\u5019\uff0c\u65e0\u6cd5\u8bbf\u95ee\u3002","title":"\u82f1\u6587\u5b98\u7f51"},{"location":"Post/Knowledge-base/#_3","text":"https://zh.wikipedia.org/","title":"\u4e2d\u6587\u5b98\u7f51"},{"location":"Post/Knowledge-base/#wikipedia_1","text":"\u5728 \u7ef4\u57fa\u767e\u79d1Wikipedia\u955c\u50cf\u7f51\u7ad9\u5217\u8868 \u4e2d\u7ed9\u51fa\u4e86\u5f88\u591a\u955c\u50cf\u7f51\u7ad9\uff0c\u5c1d\u8bd5\u4e86\u4e00\u4e9b\uff0c\u662f\u53ef\u4ee5\u4f7f\u7528\u7684: \u5e8f\u53f7 \u7f51\u5740 \u5907\u6ce8 \u66f4\u65b0\u65f6\u95f4 1 https://www.wanweibaike.com/ \u90e8\u5206\u5185\u5bb9\u8fdb\u884c\u6539\u7f16\u4ee5\u7b26\u5408\u4e2d\u56fd\u5927\u9646\u653f\u7b56 \u7f51\u7ad9\u540d\u79f0\u53eb\u505a: \u4e07\u7ef4\u767e\u79d1\uff0c\u5b83\u652f\u6301\u591a\u79cd\u8bed\u8a00\uff0c\u7f51\u901f\u53f6\u6bd4\u8f83\u5feb\uff0c\u6bd4\u8f83\u597d\u7528 2 https://zh-wikipedia.mirror.wit.im/ https://so.wit.im/ 3 https://wiwiki.kfd.me 4 https://chi.jinzhao.wiki/wiki/ \u652f\u6301\u591a\u79cd\u8bed\u8a00 5 https://wiki.comptechs.cn/ 6 https://bk.tw.lvfukeji.com/wiki/ 7 https://zh.wikiredia.com/ \u82f1\u65871 https://en.wanweibaike.com/ \u82f1\u65872 https://en.jinzhao.wiki/wiki/Main_Page \u82f1\u65873 http://en.wiki.sxisa.org/wiki/Main_Page \u8f83\u597d\uff0c\u53ef\u4ee5\u4f7f\u7528 \u65e5\u65871 https://ja.jinzhao.wiki/wiki/ \u65e5\u65872 http://ja.wiki.sxisa.org/wiki/","title":"\u7ef4\u57fa\u767e\u79d1Wikipedia\u955c\u50cf\u7f51\u7ad9\u5217\u8868"},{"location":"Post/Knowledge-base/#thefreedictionary","text":"\u5f88\u591a\u641c\u7d22\u7ed3\u679c\u597d\u50cf\u662f\u76f4\u63a5\u8db4\u7684\u7ef4\u57fa\u767e\u79d1\u7684\u5185\u5bb9\u3002","title":"thefreedictionary"},{"location":"Post/Abstraction/Abstract-and-concrete/","text":"Abstract(\u62bd\u8c61) and concrete(\u5177\u4f53) \u53cc\u5411 \u4e0eabstract\u76f8\u5bf9\u7684\u662fconcrete\uff0c\u4e24\u8005\u662f**\u4e92\u76f8\u4f9d\u5b58**\u7684\u5173\u7cfb\uff0c\u5b58\u5728\u7740**\u8f6c\u6362**\u8fc7\u7a0b\uff0c\u5728\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898\u65f6\uff0c\u5f80\u5f80\u662f**\u53cc\u5411**\u7684: 1) \u7531\u5177\u4f53\u5230\u62bd\u8c61 2) \u7531\u62bd\u8c61\u5230\u5177\u4f53 \u7531\u5177\u4f53\u5230\u62bd\u8c61 \u8bbe\u8ba1\u3001\u7406\u8bba\u7814\u7a76\u8fc7\u7a0b\u4e2d: \u4ece\u5177\u4f53\u7684\u6848\u4f8b\u6848\u4f8b\u3001\u95ee\u9898\u4e2d\u8fdb\u884c\u62bd\u8c61\uff0c\u521b\u9020\u6982\u5ff5\uff0c\u5f62\u6210\u7406\u8bba\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\u524d\u9762\u7ae0\u8282\u63cf\u8ff0\u7684\"\u62bd\u8c61\"\uff0c\u5728\"\u521b\u9020\u62bd\u8c61\u6982\u5ff5\"\u7ae0\u8282\u4e2d\u7ed9\u51fa\u4e86\u5177\u4f53\u7684\u6848\u4f8b\uff1b\u672c\u6587\u4e0d\u5bf9\u6b64\u8fdb\u884c\u5c55\u5f00\u3002 \u7531\u62bd\u8c61\u5230\u5177\u4f53 \u4e0b\u9762\u8fc7\u7a0b\u6d89\u53ca\u7531\u62bd\u8c61\u5230\u5177\u4f53: 1) \u5b9e\u73b0\u62bd\u8c61\u6a21\u578b 2) \u5e94\u7528\u8fc7\u7a0b: \u5176\u5b9e\u5c31\u662f\u5c06**\u62bd\u8c61\u6a21\u578b**\u5e94\u7528\u4e8e\u5b9e\u9645\u7684\u8fc7\u7a0b\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u4e0d\u65ad\u5730\u5c06\u5177\u4f53\u7684\u6848\u4f8b\u8f93\u5165\u5230**\u62bd\u8c61\u6a21\u578b**\u4e2d\uff1b NOTE: \u5173\u4e8e**\u62bd\u8c61\u6a21\u578b**\uff0c\u53c2\u89c1 Abstraction-and-model \u3002 \u5b9e\u73b0\u62bd\u8c61\u6a21\u578b/conceptual model \u4f5c\u4e3asoftware engineer\uff0c\u6211\u4eec\u9700\u8981\u601d\u8003: \u5982\u4f55\u6765**\u5b9e\u73b0**\u901a\u8fc7\u8bbe\u8ba1/\u601d\u8003\u800c\u521b\u9020\u7684**\u62bd\u8c61\u6a21\u578b/conceptual model**\u3002\u8fd9\u662fcomputer science\u4e2d\u7684\u6838\u5fc3\u95ee\u9898\uff1b \u4e00\u4e2a\u62bd\u8c61\u5bf9\u5e94\u591a\u4e2a\u5177\u4f53(concrete)/\u4e00\u4e2a\u62bd\u8c61(abstract)\u53ef\u4ee5\u6709\u591a\u4e2a\u5b9e\u73b0(implementation) \u62bd\u8c61\u7f18\u4e8e\u5177\u4f53\uff0c\u56e0\u6b64\u4e00\u4e2a\u62bd\u8c61\u53ef\u4ee5\u6709\u591a\u4e2aconcrete/implementation\uff1b\u8fd9\u5c31\u662f\u5178\u578b\u7684one-to-many(\u4e00\u5bf9\u591a)\u5173\u7cfb: One/single : abstraction Many : concrete/implementation Dispatch \u6211\u4eec\u5c06\u4eceabstract\u5230concrete/implementation\u7684\u8fc7\u7a0b\u79f0\u4e3a**dispatch**\uff0c\u4e0b\u9762\u662f\u5bf9\u5b83\u7684\u542b\u4e49\u4e00\u4e9b\u89e3\u8bfb: 1) \u5339\u914d(match): \u4e3aabstract**\u5339\u914d**\u6700\u5408\u9002\u7684concrete/implementation 2) \u8def\u7531(route): **\u8def\u7531**\u5230\u6700\u5408\u9002\u7684concrete/implementation \u5728wikipedia Multiple dispatch \u4e2d\u6709\u5982\u4e0b\u63cf\u8ff0: Multiple dispatch routes the dynamic dispatch to the implementing function or method using the combined characteristics of one or more arguments. \u5728eli.thegreenplace A polyglot's guide to multiple dispatch \u4e2d\u6709\u5982\u4e0b\u63cf\u8ff0: What happens eventually is that the call pr1->Intersect(pe.get()) gets routed to Ellipse::IntersectWith(const Rectangle*) , thanks to two virtual dispatches and one use of method overloading. The end result is double dispatch! [ 4] 3) \u9009\u62e9(select): \u9009\u62e9\u6700\u5408\u9002\u7684concrete/implementation \u5728wikipedia Static dispatch \u4e2d\u6709\u5982\u4e0b\u63cf\u8ff0: It is a form of method dispatch, which describes how a language or environment will select which implementation of a method or function to use. \u5728wikipedia Polymorphism (computer science) # Static and dynamic polymorphism Polymorphism can be distinguished by when the implementation is selected : statically (at compile time) or dynamically (at run time, typically via a virtual function ). Classification \u4e0b\u9762\u7684\u5bf9\u5b83\u7684\u4e00\u79cd\u7b80\u5355\u7684\u5206\u7c7b: 1) dispatch to concrete/implementation automatically \u81ea\u52a8\u8fdb\u884cdispatch 2) dispatch to concrete/implementation manually \u624b\u52a8\u8fdb\u884cdispatch Polymorphism: dispatch to concrete/implementation automatically NOTE: dispatch\u7684\u9700\u6c42\u4fc3\u8fdb\u4e86polymorphism\u7684\u8bde\u751f\uff1b \"polymorphism\"\u662f\u5c5e\u4e8e\"dispatch to concrete/implementation automatically\"\uff0c\u5b83\u7684\u8fd9\u4e2a\u7279\u6027\uff0c\u80fd\u591f\u5927\u5927\u63d0\u5347\u5f00\u53d1\u6548\u7387\uff0c\u662f\u73b0\u4ee3programming language\u7684\u6838\u5fc3\uff0c\u5173\u4e8e\u6b64\u53c2\u89c1\u5de5\u7a0bprogramming-language\u7684 Theory\\Programming-paradigm\\Abstraction-and-polymorphism \u7ae0\u8282\uff1b Examples \u4e00\u79cdprogramming language(abstraction)\u53ef\u4ee5\u6709\u591a\u79cd\u5b9e\u73b0 \u5bf9\u4e8e\u80fd\u591fcross-plateform\u7684programming language\uff0cdesigner\u5f80\u5f80\u662fdesign to abstraction: abstract machine\uff1b\u4e0d\u540cplateform\uff0c\u6309\u7167programming language\u7684\u6807\u51c6\uff0c\u4f7f\u7528compiler/interpreter\u6765\u5b9e\u73b0programming language\u4e2d\u7684\u5404\u79cd\u62bd\u8c61\uff0c\u5173\u4e8e\u6b64\u53c2\u89c1 1) \u9f99\u4e66 Chapter 7 Run-Time Environments 2) \u5de5\u7a0bprogramming language\u7684 Theory\\Programming-language\\Design-of-programming-language \u7ae0\u8282 \u4e00\u4e2aInterface(abstraction)\u6709\u7740\u591a\u79cd\u4e0d\u540c\u7684implementation(concrete)\uff1b TODO: \u8fd9\u80fd\u591f\u63cf\u8ff0computer science\u4e2d\u7684\u975e\u5e38\u591a\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u5f88\u591a\u90fd\u53ef\u4ee5\u770b\u505a\u662finterface\u3002 \u9700\u8981\u6dfb\u52a0interface\u7684\u4e00\u4e9b\u6848\u4f8b \u53c2\u89c1 wikipedia Abstract and concrete Instruction set architecture \u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u6b64\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002 Abstract data type \u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u6b64\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u53c2\u89c1 Data abstraction \u3002","title":"Abstract-and-concrete"},{"location":"Post/Abstraction/Abstract-and-concrete/#abstract#and#concrete","text":"","title":"Abstract(\u62bd\u8c61) and concrete(\u5177\u4f53)"},{"location":"Post/Abstraction/Abstract-and-concrete/#_1","text":"\u4e0eabstract\u76f8\u5bf9\u7684\u662fconcrete\uff0c\u4e24\u8005\u662f**\u4e92\u76f8\u4f9d\u5b58**\u7684\u5173\u7cfb\uff0c\u5b58\u5728\u7740**\u8f6c\u6362**\u8fc7\u7a0b\uff0c\u5728\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898\u65f6\uff0c\u5f80\u5f80\u662f**\u53cc\u5411**\u7684: 1) \u7531\u5177\u4f53\u5230\u62bd\u8c61 2) \u7531\u62bd\u8c61\u5230\u5177\u4f53","title":"\u53cc\u5411"},{"location":"Post/Abstraction/Abstract-and-concrete/#_2","text":"\u8bbe\u8ba1\u3001\u7406\u8bba\u7814\u7a76\u8fc7\u7a0b\u4e2d: \u4ece\u5177\u4f53\u7684\u6848\u4f8b\u6848\u4f8b\u3001\u95ee\u9898\u4e2d\u8fdb\u884c\u62bd\u8c61\uff0c\u521b\u9020\u6982\u5ff5\uff0c\u5f62\u6210\u7406\u8bba\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\u524d\u9762\u7ae0\u8282\u63cf\u8ff0\u7684\"\u62bd\u8c61\"\uff0c\u5728\"\u521b\u9020\u62bd\u8c61\u6982\u5ff5\"\u7ae0\u8282\u4e2d\u7ed9\u51fa\u4e86\u5177\u4f53\u7684\u6848\u4f8b\uff1b\u672c\u6587\u4e0d\u5bf9\u6b64\u8fdb\u884c\u5c55\u5f00\u3002","title":"\u7531\u5177\u4f53\u5230\u62bd\u8c61"},{"location":"Post/Abstraction/Abstract-and-concrete/#_3","text":"\u4e0b\u9762\u8fc7\u7a0b\u6d89\u53ca\u7531\u62bd\u8c61\u5230\u5177\u4f53: 1) \u5b9e\u73b0\u62bd\u8c61\u6a21\u578b 2) \u5e94\u7528\u8fc7\u7a0b: \u5176\u5b9e\u5c31\u662f\u5c06**\u62bd\u8c61\u6a21\u578b**\u5e94\u7528\u4e8e\u5b9e\u9645\u7684\u8fc7\u7a0b\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u4e0d\u65ad\u5730\u5c06\u5177\u4f53\u7684\u6848\u4f8b\u8f93\u5165\u5230**\u62bd\u8c61\u6a21\u578b**\u4e2d\uff1b NOTE: \u5173\u4e8e**\u62bd\u8c61\u6a21\u578b**\uff0c\u53c2\u89c1 Abstraction-and-model \u3002","title":"\u7531\u62bd\u8c61\u5230\u5177\u4f53"},{"location":"Post/Abstraction/Abstract-and-concrete/#conceptual#model","text":"\u4f5c\u4e3asoftware engineer\uff0c\u6211\u4eec\u9700\u8981\u601d\u8003: \u5982\u4f55\u6765**\u5b9e\u73b0**\u901a\u8fc7\u8bbe\u8ba1/\u601d\u8003\u800c\u521b\u9020\u7684**\u62bd\u8c61\u6a21\u578b/conceptual model**\u3002\u8fd9\u662fcomputer science\u4e2d\u7684\u6838\u5fc3\u95ee\u9898\uff1b","title":"\u5b9e\u73b0\u62bd\u8c61\u6a21\u578b/conceptual model"},{"location":"Post/Abstraction/Abstract-and-concrete/#concreteabstractimplementation","text":"\u62bd\u8c61\u7f18\u4e8e\u5177\u4f53\uff0c\u56e0\u6b64\u4e00\u4e2a\u62bd\u8c61\u53ef\u4ee5\u6709\u591a\u4e2aconcrete/implementation\uff1b\u8fd9\u5c31\u662f\u5178\u578b\u7684one-to-many(\u4e00\u5bf9\u591a)\u5173\u7cfb: One/single : abstraction Many : concrete/implementation","title":"\u4e00\u4e2a\u62bd\u8c61\u5bf9\u5e94\u591a\u4e2a\u5177\u4f53(concrete)/\u4e00\u4e2a\u62bd\u8c61(abstract)\u53ef\u4ee5\u6709\u591a\u4e2a\u5b9e\u73b0(implementation)"},{"location":"Post/Abstraction/Abstract-and-concrete/#dispatch","text":"\u6211\u4eec\u5c06\u4eceabstract\u5230concrete/implementation\u7684\u8fc7\u7a0b\u79f0\u4e3a**dispatch**\uff0c\u4e0b\u9762\u662f\u5bf9\u5b83\u7684\u542b\u4e49\u4e00\u4e9b\u89e3\u8bfb: 1) \u5339\u914d(match): \u4e3aabstract**\u5339\u914d**\u6700\u5408\u9002\u7684concrete/implementation 2) \u8def\u7531(route): **\u8def\u7531**\u5230\u6700\u5408\u9002\u7684concrete/implementation \u5728wikipedia Multiple dispatch \u4e2d\u6709\u5982\u4e0b\u63cf\u8ff0: Multiple dispatch routes the dynamic dispatch to the implementing function or method using the combined characteristics of one or more arguments. \u5728eli.thegreenplace A polyglot's guide to multiple dispatch \u4e2d\u6709\u5982\u4e0b\u63cf\u8ff0: What happens eventually is that the call pr1->Intersect(pe.get()) gets routed to Ellipse::IntersectWith(const Rectangle*) , thanks to two virtual dispatches and one use of method overloading. The end result is double dispatch! [ 4] 3) \u9009\u62e9(select): \u9009\u62e9\u6700\u5408\u9002\u7684concrete/implementation \u5728wikipedia Static dispatch \u4e2d\u6709\u5982\u4e0b\u63cf\u8ff0: It is a form of method dispatch, which describes how a language or environment will select which implementation of a method or function to use. \u5728wikipedia Polymorphism (computer science) # Static and dynamic polymorphism Polymorphism can be distinguished by when the implementation is selected : statically (at compile time) or dynamically (at run time, typically via a virtual function ).","title":"Dispatch"},{"location":"Post/Abstraction/Abstract-and-concrete/#classification","text":"\u4e0b\u9762\u7684\u5bf9\u5b83\u7684\u4e00\u79cd\u7b80\u5355\u7684\u5206\u7c7b: 1) dispatch to concrete/implementation automatically \u81ea\u52a8\u8fdb\u884cdispatch 2) dispatch to concrete/implementation manually \u624b\u52a8\u8fdb\u884cdispatch","title":"Classification"},{"location":"Post/Abstraction/Abstract-and-concrete/#polymorphism#dispatch#to#concreteimplementation#automatically","text":"NOTE: dispatch\u7684\u9700\u6c42\u4fc3\u8fdb\u4e86polymorphism\u7684\u8bde\u751f\uff1b \"polymorphism\"\u662f\u5c5e\u4e8e\"dispatch to concrete/implementation automatically\"\uff0c\u5b83\u7684\u8fd9\u4e2a\u7279\u6027\uff0c\u80fd\u591f\u5927\u5927\u63d0\u5347\u5f00\u53d1\u6548\u7387\uff0c\u662f\u73b0\u4ee3programming language\u7684\u6838\u5fc3\uff0c\u5173\u4e8e\u6b64\u53c2\u89c1\u5de5\u7a0bprogramming-language\u7684 Theory\\Programming-paradigm\\Abstraction-and-polymorphism \u7ae0\u8282\uff1b","title":"Polymorphism: dispatch to concrete/implementation automatically"},{"location":"Post/Abstraction/Abstract-and-concrete/#examples","text":"","title":"Examples"},{"location":"Post/Abstraction/Abstract-and-concrete/#programming#languageabstraction","text":"\u5bf9\u4e8e\u80fd\u591fcross-plateform\u7684programming language\uff0cdesigner\u5f80\u5f80\u662fdesign to abstraction: abstract machine\uff1b\u4e0d\u540cplateform\uff0c\u6309\u7167programming language\u7684\u6807\u51c6\uff0c\u4f7f\u7528compiler/interpreter\u6765\u5b9e\u73b0programming language\u4e2d\u7684\u5404\u79cd\u62bd\u8c61\uff0c\u5173\u4e8e\u6b64\u53c2\u89c1 1) \u9f99\u4e66 Chapter 7 Run-Time Environments 2) \u5de5\u7a0bprogramming language\u7684 Theory\\Programming-language\\Design-of-programming-language \u7ae0\u8282","title":"\u4e00\u79cdprogramming language(abstraction)\u53ef\u4ee5\u6709\u591a\u79cd\u5b9e\u73b0"},{"location":"Post/Abstraction/Abstract-and-concrete/#interfaceabstractionimplementationconcrete","text":"TODO: \u8fd9\u80fd\u591f\u63cf\u8ff0computer science\u4e2d\u7684\u975e\u5e38\u591a\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u5f88\u591a\u90fd\u53ef\u4ee5\u770b\u505a\u662finterface\u3002 \u9700\u8981\u6dfb\u52a0interface\u7684\u4e00\u4e9b\u6848\u4f8b","title":"\u4e00\u4e2aInterface(abstraction)\u6709\u7740\u591a\u79cd\u4e0d\u540c\u7684implementation(concrete)\uff1b"},{"location":"Post/Abstraction/Abstract-and-concrete/#_4","text":"wikipedia Abstract and concrete Instruction set architecture \u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u6b64\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002 Abstract data type \u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u6b64\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u53c2\u89c1 Data abstraction \u3002","title":"\u53c2\u89c1"},{"location":"Post/Abstraction/Abstraction-and-model/","text":"Abstraction and model \u672c\u6587\u8ba8\u8bbaabstraction(\u62bd\u8c61) \u548c model(\u5efa\u6a21)\uff0c\u4f5c\u4e3asoftware engineer\uff0c\u6211\u4eec\u9700\u8981\u89e3\u51b3\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u5404\u79cd\u95ee\u9898\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5176\u5b9e\u662f: abstraction(\u62bd\u8c61) \u5e76 model(\u5efa\u6a21)\uff0c\u7136\u540e\u4f7f\u7528programming language\u6765\u5b9e\u73b0/\u63cf\u8ff0model\uff0c\u6700\u540e\u5c06\u6b64model\u5e94\u7528\u4e8e\u5b9e\u9645\uff0c\u4ece\u800c\u4f7f\u5b9e\u9645\u95ee\u9898\u5f97\u89e3\uff1b NOTE: \u5173\u4e8emodel\u7684\u5b9e\u73b0\uff0c\u5728 Abstract-and-concrete \u4e2d\u8fdb\u884c\u4e86\u8ba8\u8bba\u3002 \u6309\u7167Wikipedia\u4e2d\u7684\u8bf4\u6cd5\uff0c\u8fd9\u91cc\u672c\u6bb5\u6240\u8ff0\u7684model\u662f Conceptual model \uff0c\u4e0b\u9762\u662f\u6211\u7684\u603b\u7ed3: Conceptual model \u662f\u5bf9concept\uff08\u901a\u8fc7abstraction\u521b\u5efa\u7684\uff09\u548c\u5176relation\u7684\u63cf\u8ff0\uff08\u5176\u5b9e\u5b83\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u8fc7\u7a0b\uff09\uff0c\u5b83\u662f\u5bf9\u539f\u7406\u7684\u63cf\u8ff0\uff0c\u5b83\u6ca1\u6709\u8fbe\u5230\u5b9e\u73b0\u5c42\u9762\uff0c\u5b83\u6307\u5bfc\u7740\u5b9e\u73b0\u3002\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5404\u4e2a\u9886\u57df\uff0c\u6709\u7740\u975e\u5e38\u591a\u8457\u540d\u7684 conceptual model \u3002\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u56de\u987e\u5b66\u4e60\u751f\u6daf\uff0c\u6559\u6750\u5f80\u5f80\u662f\u5148\u4ece\u7406\u8bba\u6a21\u578b\uff08\u5176\u5b9e\u5c31\u662f\u6982\u5ff5\u6a21\u578b\uff09\u5f00\u59cb\u8bb2\u8d77\uff0c\u540e\u9762\u518d\u6765\u8bb2\u8ff0\u5b9e\u73b0\uff0c\u56e0\u4e3a\u7406\u8bba\u6a21\u578b\u5254\u9664\u4e86\u5f88\u591a\u7ec6\u8282\uff0c\u800c\u62bd\u8c61\u51fa\u6765\u6700\u6700\u672c\u8d28\u7684\u5185\u5bb9\uff0c\u6613\u4e8e\u7406\u89e3\uff0c\u4e5f\u5c31\u662f Conceptual model \u4f7f\u6211\u4eec\u80fd\u591f\u66f4\u52a0\u8f7b\u677e\u5730 understand \u3002 wikipedia Conceptual model A conceptual model is a representation of a system, made of the composition of concepts which are used to help people know , understand , or simulate (\u6a21\u62df) a subject(\u4e3b\u9898) the model represents. In contrast, physical models are physical objects ; NOTE: \u4e0a\u9762\u8fd9\u6bb5\u8bdd\u4e2d\uff0c\"the model represents\"\u662f\u4e00\u4e2a\u5b9a\u8bed\u4ece\u53e5\uff0c\u4fee\u9970 \"subject\" \u3002 science \u548c technology\u7684\u53d1\u5c55\u603b\u662f\u9075\u5faa: \u4ecetheory\u5230implementation\uff0c\u5373\u5148\u521b\u5efatheory\u7136\u540e\u6839\u636etheory\u6765\u8fdb\u884cimplement\uff1b Conceptual model may refer to models which are formed after a conceptualization or generalization process.[ 1] [ 2] Conceptual models are often abstractions of things in the real world, whether physical or social. NOTE: \u4e0a\u8ff0 \" conceptualization or generalization \", \u5176\u5b9e\u90fd\u662f\u62bd\u8c61\u7684\u8fc7\u7a0b\uff1b Modelling techniques NOTE: \u5efa\u6a21\u6280\u672f\uff0c\u539f\u6587\u8fd9\u4e00\u6bb5\u8fd9\u6837\u63cf\u8ff0\u7684\u662fcomputer science\u4e2d\u7684model technique\u3002\u56e0\u6b64\u6709\u5fc5\u8981\u4e86\u89e3\u4e00\u4e0b\uff1b \u53ef\u4ee5\u770b\u5230\uff0c\u672c\u8282\u63cf\u8ff0\u7684\u5404\u79cdtechnique\u90fd\u6709\u5bf9\u5e94\u7684diagram\uff0c\u8fd9\u4e9bdiagram\u662fprogrammer\u539f\u6765\u63cf\u8ff0\u8fd9\u4e9bconceptual model\u7684\uff1b Main article: Conceptual model (computer science) Data flow modeling Data flow modeling (DFM) is a basic conceptual modeling technique that graphically represents elements of a system. DFM is a fairly simple technique, however, like many conceptual modeling techniques, it is possible to construct higher and lower level representative diagrams. The data flow diagram usually does not convey complex system details such as parallel development considerations or timing information, but rather works to bring the major system functions into context. Data flow modeling is a central technique used in systems development that utilizes the structured systems analysis and design method (SSADM). NOTE: \u56fe: data flow diagram \u3002 Entity relationship modeling Entity\u2013relationship modeling (ERM) is a conceptual modeling technique used primarily for software system representation. Entity-relationship diagrams, which are a product of executing the ERM technique, are normally used to represent database models and information systems. The main components of the diagram are the entities and relationships. The entities can represent independent functions, objects, or events. The relationships are responsible for relating the entities to one another. NOTE: \u56fe: entity-relationship diagram\u3002 Event-driven process chain The event-driven process chain (EPC) is a conceptual modeling technique which is mainly used to systematically improve business process flows. State transition modeling State transition modeling makes use of state transition diagrams to describe system behavior. These state transition diagrams use distinct states to define system behavior and changes. Most current modeling tools contain some kind of ability to represent state transition modeling. The use of state transition models can be most easily recognized as logic state diagrams and directed graphs for finite-state machines . NOTE: \u56fe state transition diagrams Statistical models Further information: Statistical model , Parametric model , Nonparametric statistics , and Model selection NOTE: \u8fd9\u662fAI\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u6982\u5ff5 Models \u672c\u8282\u4ecb\u7ecd\u6211\u603b\u7ed3\u7684\u4e00\u4e9bmodel\u3002 Task model \u53c2\u89c1\u5de5\u7a0bsoftware-engineering\u7684 Software-design\\Design-pattern\\Architecture-pattern\\Task-model \u7ae0\u8282\u3002 Event-driven model \u53c2\u89c1\u5de5\u7a0bparallel-computing\u7684 Application\\Message-processing-system\\Event-driven-model \u7ae0\u8282\u3002 \u4f7f\u7528event-driven model\u548ctask model\u53ef\u4ee5\u63cf\u8ff0\u592a\u591a\u592a\u591a\u7684software \u6bd4\u5982\uff1aOS kernel\u5bf9hardware\u7684\u7ba1\u7406\u53ef\u4ee5\u4f7f\u7528event-driven model\u6765\u8fdb\u884c\u63cf\u8ff0\uff1bOS kernel\u5b9e\u73b0multitasking\u53ef\u4ee5\u4f7f\u7528task model\u6765\u8fdb\u884c\u63cf\u8ff0\u3002 Model of computation \u53c2\u89c1: 1) \u5de5\u7a0bdiscrete\u7684 Relation-structure-computation\\Computation\\Theory-of-computation\\Model-of-computation \u7ae0\u8282\u3002 2) wikipedia Model of computation Model\u662f\u4e00\u79cd\u7b80\u5316 model\u662f\u4e00\u79cd\u7b80\u5316\uff0c\u73b0\u5b9e\u7684\u95ee\u9898\u5f80\u5f80\u66f4\u52a0\u590d\u6742\uff0c\u5f80\u5f80\u9700\u8981\u7efc\u5408\u591a\u4e2amodel\u3002 Run-time environment \u9f99\u4e66 \u7684 \u7b2c\u4e03\u7ae0 \u4e2d\u6240\u5b9a\u4e49\u7684run-time environment\u662f\u4e00\u4e2a\u7b80\u5316\u6a21\u578b\uff0c\u5b83\u5ffd\u7565\u4e86\u4e00\u4e9b\u7ec6\u8282\uff0c\u6bd4\u5982multi-thread\uff0c\u800c\u4ec5\u4ec5\u5173\u6ce8\u4e8e\u90e8\u5206\u5185\u5bb9\u3002\u5728\u5bf9\u5176\u8fdb\u884c\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u9700\u8981\u8003\u8651\u5176\u4ed6\u7684\u8bf8\u591a\u56e0\u7d20\uff0c\u53c2\u89c1\u5de5\u7a0b Linux-OS \u7684 Process mode: run time environment \uff0c\u5176\u4e2d\u63cf\u8ff0\u4e86\u5b9e\u73b0\u7684\u7ec6\u8282\u3002 wikipedia Statistical model As Burnham & Anderson state, \"A model is a simplification or approximation of reality and hence will not reflect all of reality\"\u2014whence the saying \" all models are wrong \". Mathematical model\uff0c\u4e00\u79cd\u66f4\u52a0\u9ad8\u6548\u7684\u63cf\u8ff0\u65b9\u5f0f \u5728\u5404\u4e2a\u5b66\u79d1\uff0c\u5efa\u7acb mathematical model \u8ba9\u63cf\u8ff0\u66f4\u52a0\u4fbf\u6377\u3001\u66f4\u52a0\u5bb9\u6613\u88ab\u4eba\u7406\u89e3\u3002 \u4e0b\u9762\u662f mathematical model \u7684\u4e00\u4e9b\u4f8b\u5b50\uff1a Stochastic process\uff1a https://en.wikipedia.org/wiki/Stochastic_process Statistical model\uff1a https://en.wikipedia.org/wiki/Statistical_model Markov model\uff1a https://en.wikipedia.org/wiki/Markov_model https://en.wikipedia.org/wiki/Hidden_Markov_model \u6a21\u578b\u4e0e\u5b9e\u73b0 \u4e00\u4e2amodel\uff0c\u53ef\u4ee5\u6709\u591a\u79cd\u5b9e\u73b0\u3002 Example \u5728\u9f99\u4e66\u7684 \u7b2c\u4e03\u7ae0 \u4e2d\u6240\u8bb2\u8ff0\u7684logical address space\u662f\u4e00\u4e2a\u6982\u5ff5\u6a21\u578b\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u6982\u5ff5\u6a21\u578b\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e0d\u540c\u7684\u65f6\u5019\uff0c\u76ee\u524d\u4e3b\u6d41\u7684\u5b9e\u73b0\u65b9\u5f0f\u662fpaged virtual address space\u3002 See also Database model Data model","title":"Abstraction-and-model"},{"location":"Post/Abstraction/Abstraction-and-model/#abstraction#and#model","text":"\u672c\u6587\u8ba8\u8bbaabstraction(\u62bd\u8c61) \u548c model(\u5efa\u6a21)\uff0c\u4f5c\u4e3asoftware engineer\uff0c\u6211\u4eec\u9700\u8981\u89e3\u51b3\u73b0\u5b9e\u4e16\u754c\u4e2d\u7684\u5404\u79cd\u95ee\u9898\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5176\u5b9e\u662f: abstraction(\u62bd\u8c61) \u5e76 model(\u5efa\u6a21)\uff0c\u7136\u540e\u4f7f\u7528programming language\u6765\u5b9e\u73b0/\u63cf\u8ff0model\uff0c\u6700\u540e\u5c06\u6b64model\u5e94\u7528\u4e8e\u5b9e\u9645\uff0c\u4ece\u800c\u4f7f\u5b9e\u9645\u95ee\u9898\u5f97\u89e3\uff1b NOTE: \u5173\u4e8emodel\u7684\u5b9e\u73b0\uff0c\u5728 Abstract-and-concrete \u4e2d\u8fdb\u884c\u4e86\u8ba8\u8bba\u3002 \u6309\u7167Wikipedia\u4e2d\u7684\u8bf4\u6cd5\uff0c\u8fd9\u91cc\u672c\u6bb5\u6240\u8ff0\u7684model\u662f Conceptual model \uff0c\u4e0b\u9762\u662f\u6211\u7684\u603b\u7ed3: Conceptual model \u662f\u5bf9concept\uff08\u901a\u8fc7abstraction\u521b\u5efa\u7684\uff09\u548c\u5176relation\u7684\u63cf\u8ff0\uff08\u5176\u5b9e\u5b83\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u8fc7\u7a0b\uff09\uff0c\u5b83\u662f\u5bf9\u539f\u7406\u7684\u63cf\u8ff0\uff0c\u5b83\u6ca1\u6709\u8fbe\u5230\u5b9e\u73b0\u5c42\u9762\uff0c\u5b83\u6307\u5bfc\u7740\u5b9e\u73b0\u3002\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u5404\u4e2a\u9886\u57df\uff0c\u6709\u7740\u975e\u5e38\u591a\u8457\u540d\u7684 conceptual model \u3002\u5176\u5b9e\u6211\u4eec\u53ef\u4ee5\u56de\u987e\u5b66\u4e60\u751f\u6daf\uff0c\u6559\u6750\u5f80\u5f80\u662f\u5148\u4ece\u7406\u8bba\u6a21\u578b\uff08\u5176\u5b9e\u5c31\u662f\u6982\u5ff5\u6a21\u578b\uff09\u5f00\u59cb\u8bb2\u8d77\uff0c\u540e\u9762\u518d\u6765\u8bb2\u8ff0\u5b9e\u73b0\uff0c\u56e0\u4e3a\u7406\u8bba\u6a21\u578b\u5254\u9664\u4e86\u5f88\u591a\u7ec6\u8282\uff0c\u800c\u62bd\u8c61\u51fa\u6765\u6700\u6700\u672c\u8d28\u7684\u5185\u5bb9\uff0c\u6613\u4e8e\u7406\u89e3\uff0c\u4e5f\u5c31\u662f Conceptual model \u4f7f\u6211\u4eec\u80fd\u591f\u66f4\u52a0\u8f7b\u677e\u5730 understand \u3002","title":"Abstraction and model"},{"location":"Post/Abstraction/Abstraction-and-model/#wikipedia#conceptual#model","text":"A conceptual model is a representation of a system, made of the composition of concepts which are used to help people know , understand , or simulate (\u6a21\u62df) a subject(\u4e3b\u9898) the model represents. In contrast, physical models are physical objects ; NOTE: \u4e0a\u9762\u8fd9\u6bb5\u8bdd\u4e2d\uff0c\"the model represents\"\u662f\u4e00\u4e2a\u5b9a\u8bed\u4ece\u53e5\uff0c\u4fee\u9970 \"subject\" \u3002 science \u548c technology\u7684\u53d1\u5c55\u603b\u662f\u9075\u5faa: \u4ecetheory\u5230implementation\uff0c\u5373\u5148\u521b\u5efatheory\u7136\u540e\u6839\u636etheory\u6765\u8fdb\u884cimplement\uff1b Conceptual model may refer to models which are formed after a conceptualization or generalization process.[ 1] [ 2] Conceptual models are often abstractions of things in the real world, whether physical or social. NOTE: \u4e0a\u8ff0 \" conceptualization or generalization \", \u5176\u5b9e\u90fd\u662f\u62bd\u8c61\u7684\u8fc7\u7a0b\uff1b","title":"wikipedia Conceptual model"},{"location":"Post/Abstraction/Abstraction-and-model/#modelling#techniques","text":"NOTE: \u5efa\u6a21\u6280\u672f\uff0c\u539f\u6587\u8fd9\u4e00\u6bb5\u8fd9\u6837\u63cf\u8ff0\u7684\u662fcomputer science\u4e2d\u7684model technique\u3002\u56e0\u6b64\u6709\u5fc5\u8981\u4e86\u89e3\u4e00\u4e0b\uff1b \u53ef\u4ee5\u770b\u5230\uff0c\u672c\u8282\u63cf\u8ff0\u7684\u5404\u79cdtechnique\u90fd\u6709\u5bf9\u5e94\u7684diagram\uff0c\u8fd9\u4e9bdiagram\u662fprogrammer\u539f\u6765\u63cf\u8ff0\u8fd9\u4e9bconceptual model\u7684\uff1b Main article: Conceptual model (computer science)","title":"Modelling techniques"},{"location":"Post/Abstraction/Abstraction-and-model/#data#flow#modeling","text":"Data flow modeling (DFM) is a basic conceptual modeling technique that graphically represents elements of a system. DFM is a fairly simple technique, however, like many conceptual modeling techniques, it is possible to construct higher and lower level representative diagrams. The data flow diagram usually does not convey complex system details such as parallel development considerations or timing information, but rather works to bring the major system functions into context. Data flow modeling is a central technique used in systems development that utilizes the structured systems analysis and design method (SSADM). NOTE: \u56fe: data flow diagram \u3002","title":"Data flow modeling"},{"location":"Post/Abstraction/Abstraction-and-model/#entity#relationship#modeling","text":"Entity\u2013relationship modeling (ERM) is a conceptual modeling technique used primarily for software system representation. Entity-relationship diagrams, which are a product of executing the ERM technique, are normally used to represent database models and information systems. The main components of the diagram are the entities and relationships. The entities can represent independent functions, objects, or events. The relationships are responsible for relating the entities to one another. NOTE: \u56fe: entity-relationship diagram\u3002","title":"Entity relationship modeling"},{"location":"Post/Abstraction/Abstraction-and-model/#event-driven#process#chain","text":"The event-driven process chain (EPC) is a conceptual modeling technique which is mainly used to systematically improve business process flows.","title":"Event-driven process chain"},{"location":"Post/Abstraction/Abstraction-and-model/#state#transition#modeling","text":"State transition modeling makes use of state transition diagrams to describe system behavior. These state transition diagrams use distinct states to define system behavior and changes. Most current modeling tools contain some kind of ability to represent state transition modeling. The use of state transition models can be most easily recognized as logic state diagrams and directed graphs for finite-state machines . NOTE: \u56fe state transition diagrams","title":"State transition modeling"},{"location":"Post/Abstraction/Abstraction-and-model/#statistical#models","text":"Further information: Statistical model , Parametric model , Nonparametric statistics , and Model selection NOTE: \u8fd9\u662fAI\u4e2d\u975e\u5e38\u91cd\u8981\u7684\u6982\u5ff5","title":"Statistical models"},{"location":"Post/Abstraction/Abstraction-and-model/#models","text":"\u672c\u8282\u4ecb\u7ecd\u6211\u603b\u7ed3\u7684\u4e00\u4e9bmodel\u3002","title":"Models"},{"location":"Post/Abstraction/Abstraction-and-model/#task#model","text":"\u53c2\u89c1\u5de5\u7a0bsoftware-engineering\u7684 Software-design\\Design-pattern\\Architecture-pattern\\Task-model \u7ae0\u8282\u3002","title":"Task model"},{"location":"Post/Abstraction/Abstraction-and-model/#event-driven#model","text":"\u53c2\u89c1\u5de5\u7a0bparallel-computing\u7684 Application\\Message-processing-system\\Event-driven-model \u7ae0\u8282\u3002","title":"Event-driven model"},{"location":"Post/Abstraction/Abstraction-and-model/#event-driven#modeltask#modelsoftware","text":"\u6bd4\u5982\uff1aOS kernel\u5bf9hardware\u7684\u7ba1\u7406\u53ef\u4ee5\u4f7f\u7528event-driven model\u6765\u8fdb\u884c\u63cf\u8ff0\uff1bOS kernel\u5b9e\u73b0multitasking\u53ef\u4ee5\u4f7f\u7528task model\u6765\u8fdb\u884c\u63cf\u8ff0\u3002","title":"\u4f7f\u7528event-driven model\u548ctask model\u53ef\u4ee5\u63cf\u8ff0\u592a\u591a\u592a\u591a\u7684software"},{"location":"Post/Abstraction/Abstraction-and-model/#model#of#computation","text":"\u53c2\u89c1: 1) \u5de5\u7a0bdiscrete\u7684 Relation-structure-computation\\Computation\\Theory-of-computation\\Model-of-computation \u7ae0\u8282\u3002 2) wikipedia Model of computation","title":"Model of computation"},{"location":"Post/Abstraction/Abstraction-and-model/#model","text":"model\u662f\u4e00\u79cd\u7b80\u5316\uff0c\u73b0\u5b9e\u7684\u95ee\u9898\u5f80\u5f80\u66f4\u52a0\u590d\u6742\uff0c\u5f80\u5f80\u9700\u8981\u7efc\u5408\u591a\u4e2amodel\u3002","title":"Model\u662f\u4e00\u79cd\u7b80\u5316"},{"location":"Post/Abstraction/Abstraction-and-model/#run-time#environment","text":"\u9f99\u4e66 \u7684 \u7b2c\u4e03\u7ae0 \u4e2d\u6240\u5b9a\u4e49\u7684run-time environment\u662f\u4e00\u4e2a\u7b80\u5316\u6a21\u578b\uff0c\u5b83\u5ffd\u7565\u4e86\u4e00\u4e9b\u7ec6\u8282\uff0c\u6bd4\u5982multi-thread\uff0c\u800c\u4ec5\u4ec5\u5173\u6ce8\u4e8e\u90e8\u5206\u5185\u5bb9\u3002\u5728\u5bf9\u5176\u8fdb\u884c\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u9700\u8981\u8003\u8651\u5176\u4ed6\u7684\u8bf8\u591a\u56e0\u7d20\uff0c\u53c2\u89c1\u5de5\u7a0b Linux-OS \u7684 Process mode: run time environment \uff0c\u5176\u4e2d\u63cf\u8ff0\u4e86\u5b9e\u73b0\u7684\u7ec6\u8282\u3002","title":"Run-time environment"},{"location":"Post/Abstraction/Abstraction-and-model/#wikipedia#statistical#model","text":"As Burnham & Anderson state, \"A model is a simplification or approximation of reality and hence will not reflect all of reality\"\u2014whence the saying \" all models are wrong \".","title":"wikipedia Statistical model"},{"location":"Post/Abstraction/Abstraction-and-model/#mathematical#model","text":"\u5728\u5404\u4e2a\u5b66\u79d1\uff0c\u5efa\u7acb mathematical model \u8ba9\u63cf\u8ff0\u66f4\u52a0\u4fbf\u6377\u3001\u66f4\u52a0\u5bb9\u6613\u88ab\u4eba\u7406\u89e3\u3002 \u4e0b\u9762\u662f mathematical model \u7684\u4e00\u4e9b\u4f8b\u5b50\uff1a Stochastic process\uff1a https://en.wikipedia.org/wiki/Stochastic_process Statistical model\uff1a https://en.wikipedia.org/wiki/Statistical_model Markov model\uff1a https://en.wikipedia.org/wiki/Markov_model https://en.wikipedia.org/wiki/Hidden_Markov_model","title":"Mathematical model\uff0c\u4e00\u79cd\u66f4\u52a0\u9ad8\u6548\u7684\u63cf\u8ff0\u65b9\u5f0f"},{"location":"Post/Abstraction/Abstraction-and-model/#_1","text":"\u4e00\u4e2amodel\uff0c\u53ef\u4ee5\u6709\u591a\u79cd\u5b9e\u73b0\u3002","title":"\u6a21\u578b\u4e0e\u5b9e\u73b0"},{"location":"Post/Abstraction/Abstraction-and-model/#example","text":"\u5728\u9f99\u4e66\u7684 \u7b2c\u4e03\u7ae0 \u4e2d\u6240\u8bb2\u8ff0\u7684logical address space\u662f\u4e00\u4e2a\u6982\u5ff5\u6a21\u578b\uff0c\u5bf9\u4e8e\u8fd9\u4e2a\u6982\u5ff5\u6a21\u578b\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e0d\u540c\u7684\u65f6\u5019\uff0c\u76ee\u524d\u4e3b\u6d41\u7684\u5b9e\u73b0\u65b9\u5f0f\u662fpaged virtual address space\u3002","title":"Example"},{"location":"Post/Abstraction/Abstraction-and-model/#see#also","text":"Database model Data model","title":"See also"},{"location":"Post/Abstraction/Abstraction/","text":"Abstraction \u6ce8\u610f\uff1a\u672c\u6587\u6240\u8ba8\u8bba\u7684 Abstraction \u662f\u5e7f\u4e49\u7684\uff0c\u800c\u4e0d\u4ec5\u4ec5\u5c40\u9650\u4e8e Abstraction (computer science) \u3002 What is abstraction? NOTE: \u5176\u5b9e\u6211\u4eec\u6bcf\u5929\u90fd\u5728\u8fdb\u884c\u7740\u62bd\u8c61\uff0c\u4f46\u662f\u5982\u679c\u95ee: \u4ec0\u4e48\u662f\u62bd\u8c61\uff1f\u5f88\u591a\u4eba\u90fd\u4f1a\u9677\u5165\"\u53ef\u610f\u4f1a\u800c\u96be\u8a00\u4f20\"\u7684\u5883\u5730\uff0c\u672c\u8282\u5c31\u662f\u5bf9\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u7684\u5c1d\u8bd5\u3002 \u7ef4\u57fa\u767e\u79d1 Abstraction \u7ed9\u51fa\u4e86Abstraction\u7684\u5927\u91cf\u63cf\u8ff0\uff0c\u6709\u4e9b\u662f\u6bd4\u8f83\u96be\u4ee5\u7406\u89e3\uff0c\u4e0b\u9762\u662f\u6211\u8ba4\u4e3a\u5176\u4e2d\u6bd4\u8f83\u597d\u7684\u63cf\u8ff0\uff1a Abstraction in its main sense is a conceptual process where general rules and concepts are derived from the usage and classification of specific examples, literal (\"real\" or \" concrete \") signifiers, first principles , or other methods. \u8fd9\u6bb5\u8bdd\u7684\u7b80\u5355\u6765\u8bf4\u662f\uff1a\u62bd\u8c61\u662f \u4ece\"specific example\"\u4e2d\uff0c\u521b\u5efa concepts \u548c general rules \u7684\u8fc7\u7a0b\u3002\u90a3\u4f55\u4e3aconcept\u5462\uff1f\u8fd9\u4e2a\u95ee\u9898\u662f\u6bd4\u8f83\u201c\u62bd\u8c61\u201d\u7684\uff0c\u96be\u4ee5\u8fdb\u884c\u51c6\u786e\u63cf\u8ff0\u7684\uff0c\u540e\u9762\u7684 \u521b\u9020\u62bd\u8c61\u6982\u5ff5 \u7ae0\u8282\u4f1a\u7ed3\u5408\u5177\u4f53\u6848\u4f8b\u6765\u8fdb\u884c\u8bf4\u660e\u3002 \"An abstraction\" is the outcome of this process\u2014a concept that acts as a common noun for all subordinate\uff08\u4ece\u5c5e\uff09 concepts, and connects any related concepts as a group , field , or category . \u8fd9\u6bb5\u8bdd\u7684\u610f\u601d\u548c\u4e0a\u9762\u7684\u610f\u601d\u7c7b\u4f3c\uff0c\u5728 \u521b\u9020\u62bd\u8c61\u6982\u5ff5 \u7ae0\u8282\uff0c\u4f1a\u7ed3\u5408\u5177\u4f53\u5b9e\u4f8b\u5bf9\u8fd9\u6bb5\u8bdd\u6240\u8868\u8ff0\u7684\u610f\u601d\u8fdb\u884c\u8be6\u7ec6\u5206\u6790\u3002 Conceptual abstractions may be formed by filtering the information content of a concept or an observable phenomenon , selecting only the aspects which are relevant for a particular subjectively valued purpose. The essence of abstractions is preserving information that is relevant in a given context, and forgetting information that is irrelevant in that context. \u2013 John V. Guttag \u62bd\u8c61\u662f\u6982\u62ec\u7684\u8fc7\u7a0b\uff0c\u62bd\u8c61\u662f\u63d0\u53d6\u516c\u5171\u7279\u5f81\u7684\u8fc7\u7a0b\uff0c\u5b83\u6240\u6982\u62ec\u7684\u3001\u6240\u63d0\u53d6\u7684\u516c\u5171\u7279\u5f81\uff0c\u53ef\u4ee5\u4f7f\u7528 concepts \u6765\u8fdb\u884c\u8868\u793a(representation)\uff0c\u5f53\u7136\u4e5f\u6709\u5176\u5b83\u7684\u8868\u793a\u65b9\u5f0f\u3002 \u521b\u9020\u62bd\u8c61\u6982\u5ff5 \u901a\u8fc7\u521b\u9020\u62bd\u8c61\u7684 concept \uff08\u6982\u5ff5\uff09\u6765\u4f7f\u8868\u8ff0\u66f4\u52a0\u4fbf\u5229\u7684\u505a\u6cd5\u662f\u5728\u5404\u79cd\u5b66\u79d1\u975e\u5e38\u666e\u904d\u7684\uff0c\u5173\u4e8e\u6b64\u7684\u4f8b\u5b50\u6709\uff1a Kernel control path \u5728\u300a Understanding the Linux Kernel, 3 rd Edition \u300b\u7684 chapter 1.6.3. Reentrant Kernels \u4e2d\uff0c\u4f5c\u8005\u521b\u9020\u4e86kernel control path\u6982\u5ff5\u6765\u6982\u62eckernel\u4e2d\u7531system call\u7531\u89e6\u53d1\u7684kernel control path\uff08\u540e\u9762\u7b80\u79f0\u4e3asystem call kernel control path\uff09\u3001\u7531interrupt handler\u89e6\u53d1\u7684kernel control path\uff08\u540e\u9762\u7b80\u79f0interrupt handler kernel control path\uff09\u4ee5\u53ca\u540e\u7eed\u968f\u7740kernel\u53d1\u5c55\u53ef\u80fd\u4f1a\u65b0\u589e\u7684\u89e6\u53d1kernel control path\u3002\u663e\u7136kernel control path\u6982\u5ff5\u6982\u62ec\u4e86system call kernel control path\u3001interrupt handler kernel control path\u7684**common feature**\uff08\u516c\u5171\u7279\u5f81\uff09\uff0c\u5982\u5b83\u4eec\u90fd\u80fd\u591f\u88absuspend\u3001resume\u3002 \u663e\u7136\u5f53\u4e00\u4e2a\u8868\u8ff0\u4e2d\u4f7f\u7528kernel control path\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u5b83\u53ef\u4ee5\u662fsystem call kernel control path\u3001\u4e5f\u53ef\u4ee5\u662finterrupt handler kernel control path\uff0c\u8fd9\u5c31\u4f7f\u6211\u4eec\u7684\u8868\u8ff0\u975e\u5e38\u5730\u4fbf\u5229\u3002\u663e\u7136\uff0csystem call kernel control path\u3001interrupt handler kernel control path\u548ckernel control path\u4e4b\u95f4\u662f Is-a \u5173\u7cfb\u3002 Computer multitasking \u5728 Computer multitasking \u4e2d\u521b\u9020\u4e86task\u6982\u5ff5\uff0c\u5b83\u8868\u793a\u7684\u662fcomputer\u80fd\u591f\u5e76\u53d1\u6267\u884c\u7684\uff0c\u5b83\u53ef\u4ee5\u662fprocess\u4e5f\u53ef\u4ee5\u662fthread\uff0c\u5177\u4f53\u662f\u4ec0\u4e48\u5219\u7531\u5177\u4f53\u7684\u5b9e\u73b0\u800c\u5b9a\u3002 Book-Designing-Data-Intensive-Applications \u5728\u8fd9\u672c\u4e66\u4e2d\uff0c\u4f5c\u8005\u53cd\u590d\u5f3a\u8c03\u4e86abstraction\uff0c\u53ef\u4ee5\u8bf4\uff0c\u5176\u4e2d\u5bf9abstraction\u4f7f\u7528\u6db5\u76d6\u4e86\u6240\u6709\u6211\u4eec\u9700\u8981\u638c\u63e1\u7684abstraction\u601d\u60f3\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5728\u5de5\u7a0b Parallel-computing \u7684 Distributed-computing\\Theory\\Abstraction\\Abstraction-in-distributed-computing.md \u8fdb\u884c\u4e86\u8be6\u7ec6\u7684\u603b\u7ed3\u3002 Data system \u5728Book-Designing-Data-Intensive-Applications\u7684\"CHAPTER 1Reliable, Scalable, and Maintainable Applications\"\u4e2d\uff0c\u521b\u9020\u4e86data system\u7684\u6982\u5ff5\u3002 If that sounds painfully obvious, that\u2019s just because these data systems are such a successful abstraction : we use them all the time without thinking too much. \"data system\"\u7684\u5b9e\u4f8b\u6709: databases caches search indexes ...... Everything is an object and everything is a file \u5728python\u4e2d\uff0c\u6709\u7740everything in python is an object\uff0c\u663e\u7136\uff0cobject\u662f\u6700\u5927\u7684\u62bd\u8c61\uff0c\u662f\u6700\u6700\u9876\u7ea7\u7684\u62bd\u8c61\u3002 \u5728linux\u4e2d\uff0c\u6709\u7740everything is a file\uff0c\u663e\u7136file\u662f\u6700\u5927\u7684\u62bd\u8c61\uff0c\u662f\u6700\u6700\u9876\u7ea7\u7684\u62bd\u8c61\u3002 \u521b\u9020\u66f4\u5927\u7684\u62bd\u8c61 \u53c2\u89c1: Create-concept \u3002 \u603b\u7ed3 \u5173\u4e8e\u521b\u9020\u62bd\u8c61\u6982\u5ff5\u7684\u4f8b\u5b50\u6570\u4e0d\u80dc\u6570\uff0c\u6211\u4eec\u5b66\u4e60\u7684\u6240\u6709concept\u5176\u5b9e\u90fd\u662f\u62bd\u8c61\u7684\u7ed3\u679c\u3002 Conceptual/abstraction/theory model NOTE: \u672c\u8282\u6807\u9898\u7684\u542b\u4e49\u662f: \u6982\u5ff5\u6a21\u578b\u3001\u62bd\u8c61\u6a21\u578b\u3001\u7406\u8bba\u6a21\u578b \u53c2\u89c1\u6587\u7ae0 Abstraction-and-model \u3002 Abstract and concrete \u4e0eabstract\u76f8\u5bf9\u7684\u662fconcrete\uff0c\u4e24\u8005\u662f**\u4e92\u76f8\u4f9d\u5b58**\u7684\u5173\u7cfb\uff0c\u5b58\u5728\u7740**\u8f6c\u6362**\u8fc7\u7a0b\uff0c\u5728\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898\u65f6\uff0c\u5f80\u5f80\u662f**\u53cc\u5411**\u7684\uff0c\u8fd9\u4e2a\u8bdd\u9898\u5728\u6587\u7ae0 Abstract-and-concrete \u4e2d\u8fdb\u884c\u8ba8\u8bba\u3002 Abstraction\u5728\u5404\u4e2a\u5b66\u79d1\u4e2d\u7684\u5e94\u7528 Abstraction\u662f\u79d1\u5b66\u7684\u57fa\u7840\uff0c\u5b83\u5728\u5404\u4e2a\u5b66\u79d1\u4e2d\u90fd\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u4f5c\u4e3asoftware engineer\uff0c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8\u7684\u662f\"Abstraction in computer science\"\u3002 Abstraction in computer science Abstraction\u5728computer science\u4e2d\u6709\u7740\u6df1\u8fdc\u7684\u5f71\u54cd\uff0c\u672c\u8282\u5c06\u5f00\u59cb\u5bf9\u6b64\u4ece\u591a\u4e2a\u65b9\u9762\u8fdb\u884c\u5256\u6790\u3002 \u7ef4\u57fa\u767e\u79d1\u7684 Abstraction (computer science) \u603b\u7ed3\u4e86\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684abstraction\u3002\u867d\u7136\u7ef4\u57fa\u767e\u79d1\u7684 Abstraction (computer science) \u5bf9\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684Abstraction\u6709\u4e86\u4e0d\u540c\u7684\u63cf\u8ff0\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684abstraction\u672c\u8d28\u4e0a\u548c\u524d\u9762\u6240\u8ff0\u7684\u5e7f\u4e49\u7684abstraction\u662f\u76f8\u540c\u7684\uff0c\u5373**\u521b\u5efaconcept\u7684\u8fc7\u7a0b**\u3002 \u63cf\u8ff0\u62bd\u8c61\u6982\u5ff5\u7684\u8bed\u8a00 \u5728computer science\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u7684\u662f\u5982\u4f55\u6765\u63cf\u8ff0concept\u3002 Concept\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u4e0d\u540c\u9886\u57df\u6709\u7740\u4e0d\u540c\u7684\u63cf\u8ff0\u65b9\u5f0f\uff0c\u6bd4\u5982\uff1a 1) \u5728 object-oriented programming \u4e2d\uff0c\u4f7f\u7528 class \u6765\u63cf\u8ff0concept\uff0cconcept\u4e4b\u95f4\u7684relation\u5c31\u8f6c\u6362\u4e3a class \u4e4b\u95f4\u7684\u5173\u7cfb\u4e86\u3002 2) \u5728 Entity\u2013relationship model \u4e2d\uff0c\u4f7f\u7528 entity \u6765\u63cf\u8ff0concept\u3002\u4e0e\u6b64\u76f8\u5173\u7684\u6982\u5ff5\u6709\uff1a Relational model \u3001 Relational database \u3001 Relational algebra \u3002 \u8fde\u63a5\u4e0a\u8ff0\u4e24\u8005\u7684\u5c31\u662f Object-relational mapping \u3002 3) Instruction set architecture \u662f\u5bf9 computer \u7684\u62bd\u8c61\uff0c\u5b83\u63cf\u8ff0\u4e86\u4e00\u4e2acomputer\u7684\u529f\u80fd\uff0c\u7279\u6027\u7b49\uff0c\u5b83\u4f7f\u7528instruction\u6765\u63cf\u8ff0\u3002 4) Interface Interface\u5373\u63a5\u53e3\uff0c\u5e38\u88ab\u7528\u6765\u63cf\u8ff0\u62bd\u8c61\u6982\u5ff5\uff0c\u53c2\u89c1: wikipedia interface (computing) \u5de5\u7a0bprogramming-language\u7684 Theory\\Programming-paradigm\\Abstraction-and-polymorphism\\Program-to-abstraction \u7ae0\u8282\uff1b \u672c\u8d28\u4e0a\u6765\u8bf4\uff0c\u4e0a\u8ff0**\u63cf\u8ff0\u65b9\u5f0f**\u90fd\u662f \u8bed\u8a00 \u3002 NOTE: \u4e0b\u9762\u4ee5abstraction\u6765\u4f5c\u4e3a\u5207\u5165\u70b9\u63cf\u8ff0abstraction\u5728\u5404\u4e2a\u5de5\u7a0b\u4e2d\u7684\u5e94\u7528\u3002 Abstraction in software design \u53c2\u89c1\u5de5\u7a0bsoftware-engineering\u7684 Software-design\\Principle\\Abstraction \u7ae0\u8282\u3002 Abstraction in programming language \u53c2\u89c1: 1) \u5de5\u7a0bprogramming-language\u7684 Theory\\Programming-paradigm\\Abstraction-and-polymorphism \u7ae0\u8282 2) \u5de5\u7a0bprogramming-language\u7684 Theory\\Programming-language\\Design-of-programming-language Abstraction in distributed computing \u53c2\u89c1\u5de5\u7a0b Parallel-computing \u7684 Distributed-computing\\Theory\\Abstraction \u7ae0\u8282\u3002 H","title":"Abstraction"},{"location":"Post/Abstraction/Abstraction/#abstraction","text":"\u6ce8\u610f\uff1a\u672c\u6587\u6240\u8ba8\u8bba\u7684 Abstraction \u662f\u5e7f\u4e49\u7684\uff0c\u800c\u4e0d\u4ec5\u4ec5\u5c40\u9650\u4e8e Abstraction (computer science) \u3002","title":"Abstraction"},{"location":"Post/Abstraction/Abstraction/#what#is#abstraction","text":"NOTE: \u5176\u5b9e\u6211\u4eec\u6bcf\u5929\u90fd\u5728\u8fdb\u884c\u7740\u62bd\u8c61\uff0c\u4f46\u662f\u5982\u679c\u95ee: \u4ec0\u4e48\u662f\u62bd\u8c61\uff1f\u5f88\u591a\u4eba\u90fd\u4f1a\u9677\u5165\"\u53ef\u610f\u4f1a\u800c\u96be\u8a00\u4f20\"\u7684\u5883\u5730\uff0c\u672c\u8282\u5c31\u662f\u5bf9\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u7684\u5c1d\u8bd5\u3002 \u7ef4\u57fa\u767e\u79d1 Abstraction \u7ed9\u51fa\u4e86Abstraction\u7684\u5927\u91cf\u63cf\u8ff0\uff0c\u6709\u4e9b\u662f\u6bd4\u8f83\u96be\u4ee5\u7406\u89e3\uff0c\u4e0b\u9762\u662f\u6211\u8ba4\u4e3a\u5176\u4e2d\u6bd4\u8f83\u597d\u7684\u63cf\u8ff0\uff1a Abstraction in its main sense is a conceptual process where general rules and concepts are derived from the usage and classification of specific examples, literal (\"real\" or \" concrete \") signifiers, first principles , or other methods. \u8fd9\u6bb5\u8bdd\u7684\u7b80\u5355\u6765\u8bf4\u662f\uff1a\u62bd\u8c61\u662f \u4ece\"specific example\"\u4e2d\uff0c\u521b\u5efa concepts \u548c general rules \u7684\u8fc7\u7a0b\u3002\u90a3\u4f55\u4e3aconcept\u5462\uff1f\u8fd9\u4e2a\u95ee\u9898\u662f\u6bd4\u8f83\u201c\u62bd\u8c61\u201d\u7684\uff0c\u96be\u4ee5\u8fdb\u884c\u51c6\u786e\u63cf\u8ff0\u7684\uff0c\u540e\u9762\u7684 \u521b\u9020\u62bd\u8c61\u6982\u5ff5 \u7ae0\u8282\u4f1a\u7ed3\u5408\u5177\u4f53\u6848\u4f8b\u6765\u8fdb\u884c\u8bf4\u660e\u3002 \"An abstraction\" is the outcome of this process\u2014a concept that acts as a common noun for all subordinate\uff08\u4ece\u5c5e\uff09 concepts, and connects any related concepts as a group , field , or category . \u8fd9\u6bb5\u8bdd\u7684\u610f\u601d\u548c\u4e0a\u9762\u7684\u610f\u601d\u7c7b\u4f3c\uff0c\u5728 \u521b\u9020\u62bd\u8c61\u6982\u5ff5 \u7ae0\u8282\uff0c\u4f1a\u7ed3\u5408\u5177\u4f53\u5b9e\u4f8b\u5bf9\u8fd9\u6bb5\u8bdd\u6240\u8868\u8ff0\u7684\u610f\u601d\u8fdb\u884c\u8be6\u7ec6\u5206\u6790\u3002 Conceptual abstractions may be formed by filtering the information content of a concept or an observable phenomenon , selecting only the aspects which are relevant for a particular subjectively valued purpose. The essence of abstractions is preserving information that is relevant in a given context, and forgetting information that is irrelevant in that context. \u2013 John V. Guttag \u62bd\u8c61\u662f\u6982\u62ec\u7684\u8fc7\u7a0b\uff0c\u62bd\u8c61\u662f\u63d0\u53d6\u516c\u5171\u7279\u5f81\u7684\u8fc7\u7a0b\uff0c\u5b83\u6240\u6982\u62ec\u7684\u3001\u6240\u63d0\u53d6\u7684\u516c\u5171\u7279\u5f81\uff0c\u53ef\u4ee5\u4f7f\u7528 concepts \u6765\u8fdb\u884c\u8868\u793a(representation)\uff0c\u5f53\u7136\u4e5f\u6709\u5176\u5b83\u7684\u8868\u793a\u65b9\u5f0f\u3002","title":"What is abstraction?"},{"location":"Post/Abstraction/Abstraction/#_1","text":"\u901a\u8fc7\u521b\u9020\u62bd\u8c61\u7684 concept \uff08\u6982\u5ff5\uff09\u6765\u4f7f\u8868\u8ff0\u66f4\u52a0\u4fbf\u5229\u7684\u505a\u6cd5\u662f\u5728\u5404\u79cd\u5b66\u79d1\u975e\u5e38\u666e\u904d\u7684\uff0c\u5173\u4e8e\u6b64\u7684\u4f8b\u5b50\u6709\uff1a","title":"\u521b\u9020\u62bd\u8c61\u6982\u5ff5"},{"location":"Post/Abstraction/Abstraction/#kernel#control#path","text":"\u5728\u300a Understanding the Linux Kernel, 3 rd Edition \u300b\u7684 chapter 1.6.3. Reentrant Kernels \u4e2d\uff0c\u4f5c\u8005\u521b\u9020\u4e86kernel control path\u6982\u5ff5\u6765\u6982\u62eckernel\u4e2d\u7531system call\u7531\u89e6\u53d1\u7684kernel control path\uff08\u540e\u9762\u7b80\u79f0\u4e3asystem call kernel control path\uff09\u3001\u7531interrupt handler\u89e6\u53d1\u7684kernel control path\uff08\u540e\u9762\u7b80\u79f0interrupt handler kernel control path\uff09\u4ee5\u53ca\u540e\u7eed\u968f\u7740kernel\u53d1\u5c55\u53ef\u80fd\u4f1a\u65b0\u589e\u7684\u89e6\u53d1kernel control path\u3002\u663e\u7136kernel control path\u6982\u5ff5\u6982\u62ec\u4e86system call kernel control path\u3001interrupt handler kernel control path\u7684**common feature**\uff08\u516c\u5171\u7279\u5f81\uff09\uff0c\u5982\u5b83\u4eec\u90fd\u80fd\u591f\u88absuspend\u3001resume\u3002 \u663e\u7136\u5f53\u4e00\u4e2a\u8868\u8ff0\u4e2d\u4f7f\u7528kernel control path\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u77e5\u9053\u5b83\u53ef\u4ee5\u662fsystem call kernel control path\u3001\u4e5f\u53ef\u4ee5\u662finterrupt handler kernel control path\uff0c\u8fd9\u5c31\u4f7f\u6211\u4eec\u7684\u8868\u8ff0\u975e\u5e38\u5730\u4fbf\u5229\u3002\u663e\u7136\uff0csystem call kernel control path\u3001interrupt handler kernel control path\u548ckernel control path\u4e4b\u95f4\u662f Is-a \u5173\u7cfb\u3002","title":"Kernel control path"},{"location":"Post/Abstraction/Abstraction/#computer#multitasking","text":"\u5728 Computer multitasking \u4e2d\u521b\u9020\u4e86task\u6982\u5ff5\uff0c\u5b83\u8868\u793a\u7684\u662fcomputer\u80fd\u591f\u5e76\u53d1\u6267\u884c\u7684\uff0c\u5b83\u53ef\u4ee5\u662fprocess\u4e5f\u53ef\u4ee5\u662fthread\uff0c\u5177\u4f53\u662f\u4ec0\u4e48\u5219\u7531\u5177\u4f53\u7684\u5b9e\u73b0\u800c\u5b9a\u3002","title":"Computer multitasking"},{"location":"Post/Abstraction/Abstraction/#book-designing-data-intensive-applications","text":"\u5728\u8fd9\u672c\u4e66\u4e2d\uff0c\u4f5c\u8005\u53cd\u590d\u5f3a\u8c03\u4e86abstraction\uff0c\u53ef\u4ee5\u8bf4\uff0c\u5176\u4e2d\u5bf9abstraction\u4f7f\u7528\u6db5\u76d6\u4e86\u6240\u6709\u6211\u4eec\u9700\u8981\u638c\u63e1\u7684abstraction\u601d\u60f3\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u5728\u5de5\u7a0b Parallel-computing \u7684 Distributed-computing\\Theory\\Abstraction\\Abstraction-in-distributed-computing.md \u8fdb\u884c\u4e86\u8be6\u7ec6\u7684\u603b\u7ed3\u3002","title":"Book-Designing-Data-Intensive-Applications"},{"location":"Post/Abstraction/Abstraction/#data#system","text":"\u5728Book-Designing-Data-Intensive-Applications\u7684\"CHAPTER 1Reliable, Scalable, and Maintainable Applications\"\u4e2d\uff0c\u521b\u9020\u4e86data system\u7684\u6982\u5ff5\u3002 If that sounds painfully obvious, that\u2019s just because these data systems are such a successful abstraction : we use them all the time without thinking too much. \"data system\"\u7684\u5b9e\u4f8b\u6709: databases caches search indexes ......","title":"Data system"},{"location":"Post/Abstraction/Abstraction/#everything#is#an#object#and#everything#is#a#file","text":"\u5728python\u4e2d\uff0c\u6709\u7740everything in python is an object\uff0c\u663e\u7136\uff0cobject\u662f\u6700\u5927\u7684\u62bd\u8c61\uff0c\u662f\u6700\u6700\u9876\u7ea7\u7684\u62bd\u8c61\u3002 \u5728linux\u4e2d\uff0c\u6709\u7740everything is a file\uff0c\u663e\u7136file\u662f\u6700\u5927\u7684\u62bd\u8c61\uff0c\u662f\u6700\u6700\u9876\u7ea7\u7684\u62bd\u8c61\u3002","title":"Everything is an object and everything is a file"},{"location":"Post/Abstraction/Abstraction/#_2","text":"\u53c2\u89c1: Create-concept \u3002","title":"\u521b\u9020\u66f4\u5927\u7684\u62bd\u8c61"},{"location":"Post/Abstraction/Abstraction/#_3","text":"\u5173\u4e8e\u521b\u9020\u62bd\u8c61\u6982\u5ff5\u7684\u4f8b\u5b50\u6570\u4e0d\u80dc\u6570\uff0c\u6211\u4eec\u5b66\u4e60\u7684\u6240\u6709concept\u5176\u5b9e\u90fd\u662f\u62bd\u8c61\u7684\u7ed3\u679c\u3002","title":"\u603b\u7ed3"},{"location":"Post/Abstraction/Abstraction/#conceptualabstractiontheory#model","text":"NOTE: \u672c\u8282\u6807\u9898\u7684\u542b\u4e49\u662f: \u6982\u5ff5\u6a21\u578b\u3001\u62bd\u8c61\u6a21\u578b\u3001\u7406\u8bba\u6a21\u578b \u53c2\u89c1\u6587\u7ae0 Abstraction-and-model \u3002","title":"Conceptual/abstraction/theory model"},{"location":"Post/Abstraction/Abstraction/#abstract#and#concrete","text":"\u4e0eabstract\u76f8\u5bf9\u7684\u662fconcrete\uff0c\u4e24\u8005\u662f**\u4e92\u76f8\u4f9d\u5b58**\u7684\u5173\u7cfb\uff0c\u5b58\u5728\u7740**\u8f6c\u6362**\u8fc7\u7a0b\uff0c\u5728\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898\u65f6\uff0c\u5f80\u5f80\u662f**\u53cc\u5411**\u7684\uff0c\u8fd9\u4e2a\u8bdd\u9898\u5728\u6587\u7ae0 Abstract-and-concrete \u4e2d\u8fdb\u884c\u8ba8\u8bba\u3002","title":"Abstract and concrete"},{"location":"Post/Abstraction/Abstraction/#abstraction_1","text":"Abstraction\u662f\u79d1\u5b66\u7684\u57fa\u7840\uff0c\u5b83\u5728\u5404\u4e2a\u5b66\u79d1\u4e2d\u90fd\u6709\u7740\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u4f5c\u4e3asoftware engineer\uff0c\u6211\u4eec\u91cd\u70b9\u5173\u6ce8\u7684\u662f\"Abstraction in computer science\"\u3002","title":"Abstraction\u5728\u5404\u4e2a\u5b66\u79d1\u4e2d\u7684\u5e94\u7528"},{"location":"Post/Abstraction/Abstraction/#abstraction#in#computer#science","text":"Abstraction\u5728computer science\u4e2d\u6709\u7740\u6df1\u8fdc\u7684\u5f71\u54cd\uff0c\u672c\u8282\u5c06\u5f00\u59cb\u5bf9\u6b64\u4ece\u591a\u4e2a\u65b9\u9762\u8fdb\u884c\u5256\u6790\u3002 \u7ef4\u57fa\u767e\u79d1\u7684 Abstraction (computer science) \u603b\u7ed3\u4e86\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684abstraction\u3002\u867d\u7136\u7ef4\u57fa\u767e\u79d1\u7684 Abstraction (computer science) \u5bf9\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684Abstraction\u6709\u4e86\u4e0d\u540c\u7684\u63cf\u8ff0\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684abstraction\u672c\u8d28\u4e0a\u548c\u524d\u9762\u6240\u8ff0\u7684\u5e7f\u4e49\u7684abstraction\u662f\u76f8\u540c\u7684\uff0c\u5373**\u521b\u5efaconcept\u7684\u8fc7\u7a0b**\u3002","title":"Abstraction in computer science"},{"location":"Post/Abstraction/Abstraction/#_4","text":"\u5728computer science\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u7684\u662f\u5982\u4f55\u6765\u63cf\u8ff0concept\u3002 Concept\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u4e0d\u540c\u9886\u57df\u6709\u7740\u4e0d\u540c\u7684\u63cf\u8ff0\u65b9\u5f0f\uff0c\u6bd4\u5982\uff1a 1) \u5728 object-oriented programming \u4e2d\uff0c\u4f7f\u7528 class \u6765\u63cf\u8ff0concept\uff0cconcept\u4e4b\u95f4\u7684relation\u5c31\u8f6c\u6362\u4e3a class \u4e4b\u95f4\u7684\u5173\u7cfb\u4e86\u3002 2) \u5728 Entity\u2013relationship model \u4e2d\uff0c\u4f7f\u7528 entity \u6765\u63cf\u8ff0concept\u3002\u4e0e\u6b64\u76f8\u5173\u7684\u6982\u5ff5\u6709\uff1a Relational model \u3001 Relational database \u3001 Relational algebra \u3002 \u8fde\u63a5\u4e0a\u8ff0\u4e24\u8005\u7684\u5c31\u662f Object-relational mapping \u3002 3) Instruction set architecture \u662f\u5bf9 computer \u7684\u62bd\u8c61\uff0c\u5b83\u63cf\u8ff0\u4e86\u4e00\u4e2acomputer\u7684\u529f\u80fd\uff0c\u7279\u6027\u7b49\uff0c\u5b83\u4f7f\u7528instruction\u6765\u63cf\u8ff0\u3002 4) Interface Interface\u5373\u63a5\u53e3\uff0c\u5e38\u88ab\u7528\u6765\u63cf\u8ff0\u62bd\u8c61\u6982\u5ff5\uff0c\u53c2\u89c1: wikipedia interface (computing) \u5de5\u7a0bprogramming-language\u7684 Theory\\Programming-paradigm\\Abstraction-and-polymorphism\\Program-to-abstraction \u7ae0\u8282\uff1b \u672c\u8d28\u4e0a\u6765\u8bf4\uff0c\u4e0a\u8ff0**\u63cf\u8ff0\u65b9\u5f0f**\u90fd\u662f \u8bed\u8a00 \u3002 NOTE: \u4e0b\u9762\u4ee5abstraction\u6765\u4f5c\u4e3a\u5207\u5165\u70b9\u63cf\u8ff0abstraction\u5728\u5404\u4e2a\u5de5\u7a0b\u4e2d\u7684\u5e94\u7528\u3002","title":"\u63cf\u8ff0\u62bd\u8c61\u6982\u5ff5\u7684\u8bed\u8a00"},{"location":"Post/Abstraction/Abstraction/#abstraction#in#software#design","text":"\u53c2\u89c1\u5de5\u7a0bsoftware-engineering\u7684 Software-design\\Principle\\Abstraction \u7ae0\u8282\u3002","title":"Abstraction in software design"},{"location":"Post/Abstraction/Abstraction/#abstraction#in#programming#language","text":"\u53c2\u89c1: 1) \u5de5\u7a0bprogramming-language\u7684 Theory\\Programming-paradigm\\Abstraction-and-polymorphism \u7ae0\u8282 2) \u5de5\u7a0bprogramming-language\u7684 Theory\\Programming-language\\Design-of-programming-language","title":"Abstraction in programming language"},{"location":"Post/Abstraction/Abstraction/#abstraction#in#distributed#computing","text":"\u53c2\u89c1\u5de5\u7a0b Parallel-computing \u7684 Distributed-computing\\Theory\\Abstraction \u7ae0\u8282\u3002 H","title":"Abstraction in distributed computing"},{"location":"Post/Abstraction/Abstraction-and-virtual/","text":"Abstraction and virtual virtual\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u5e38\u5e38\u4f1a\u51fa\u73b0\u7684\u4e00\u4e2a\u8bcd\uff0c\u6bd4\u5982\uff1a 1\u3001 Virtual memory 2\u3001 Virtual method 3\u3001 virtual machine\uff08abstraction machine\uff0c\u6bd4\u5982cppreference\u4e2d\u63cf\u8ff0\u7684virtual machine\uff09 4\u3001 ..... Why use virtual? \u7ecf\u8fc7\u672c\u6587\u524d\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5feb\u5730\u77e5\u9053\uff1a 1\u3001virtual\u4e5f\u662f\u4e00\u79cd\u62bd\u8c61\uff0c\u4e00\u79cd\u5206\u5c42\uff0c\u8fd9\u79cd\u5206\u5c42\u6240\u5e26\u6765\u7684\u4ef7\u503c\u5c31\u662f\u89e3\u8026 2\u3001\u5b83\u4eec\u90fd\u80fd\u591f\u8fdb\u884c \u900f\u660e\uff0c\u4ece\u800c\u5141\u8bb8**\u5b9e\u73b0**\u8fdb\u884c\u5927\u91cf\u7684optimization 3\u3001\u8fdb\u884c\u4e86\u7b80\u5316 \u5728\u4e0b\u9762\u7ae0\u8282\u4e2d\u4e5f\u8ba8\u8bba\u4e86\u8fd9\u4e2a\u95ee\u9898: 1\u3001virtual memory\uff0c\u53c2\u89c1 \u5de5\u7a0bLinux-OS\u7684 Kernel\\Guide\\Memory-management\\Virtual-memory \u7ae0\u8282 2\u3001tombstone\uff0c\u53c2\u89c1\u5de5\u7a0bprogramming language\u7684 Theory\\Resource-management\\Handle \u7ae0\u8282 Virtual is a kind of dynamic polymorphism \u4ece\u76ee\u524d\u63a5\u89e6\u7684\u51e0\u79cdvirtual\u6765\u770b\uff0c\u5b83\u4eec\u90fd\u662fdynamic polymorphism\uff0c\u5728\u5de5\u7a0bprogramming-language\u7684 Theory\\Programming-paradigm\\Abstraction-and-polymorphism\\Polymorphism\\Implementation\\Static-and-dynamic-polymorphism \u7ae0\u8282\u4e2d\u8ba8\u8bba\u4e86\u5b9e\u73b0dynamic polymorphism\u7684\u7b56\u7565: Dynamic polymorphism\u7684dispatch\u53d1\u751f\u4e8eruntime\uff0c\u663e\u7136\u662flate binding\uff1b\u56e0\u6b64\uff0c\u5982\u679c\u91c7\u7528\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5219\u5b83\u9700\u8981\u5b58\u50a8**abstraction**\u548c\u6240\u6709\u7684**candidate**\u3001 concrete \u3001 implementation**\u4e4b\u95f4\u7684**\u6620\u5c04\u5173\u7cfb \u3002 \u7531\u4e8edispatch\u53d1\u751f\u4e8eruntime\uff0c\u5219\u5fc5\u7136\u5b58\u5728overhead\u3002 \u4e0b\u9762\u662f\u7ed3\u5408\u5177\u4f53\u7684\u6848\u4f8b\u6765\u8fdb\u884c\u8bf4\u660e: 1) \u5728 Paged virtual memory \u4e2d\uff0c\u7531 Page tables \u6765\u8bb0\u5f55\u6620\u5c04\u5173\u7cfb\uff1athe data structures maps linear to physical addresses. 2) \u5728 Virtual function \u4e2d\uff0c\u7531 Dispatch table \u6765\u8bb0\u5f55\u6620\u5c04\u5173\u7cfb\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u4eec\u90fd\u662f\u4f7f\u7528\u4e00\u4e2atable\u6765\u8bb0\u5f55\u6620\u5c04\u5173\u7cfb\u7684\u3002 See also: Layer (object-oriented design) Thoughts \u7531virtual\u5230physical\u3002 \u7531abstract\u5230concrete\u3002 \u6bd4\u5982\uff1a virtual address\u5230physical address abstract machine\u5230physical machine","title":"Introduction"},{"location":"Post/Abstraction/Abstraction-and-virtual/#abstraction#and#virtual","text":"virtual\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u5e38\u5e38\u4f1a\u51fa\u73b0\u7684\u4e00\u4e2a\u8bcd\uff0c\u6bd4\u5982\uff1a 1\u3001 Virtual memory 2\u3001 Virtual method 3\u3001 virtual machine\uff08abstraction machine\uff0c\u6bd4\u5982cppreference\u4e2d\u63cf\u8ff0\u7684virtual machine\uff09 4\u3001 .....","title":"Abstraction and virtual"},{"location":"Post/Abstraction/Abstraction-and-virtual/#why#use#virtual","text":"\u7ecf\u8fc7\u672c\u6587\u524d\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5feb\u5730\u77e5\u9053\uff1a 1\u3001virtual\u4e5f\u662f\u4e00\u79cd\u62bd\u8c61\uff0c\u4e00\u79cd\u5206\u5c42\uff0c\u8fd9\u79cd\u5206\u5c42\u6240\u5e26\u6765\u7684\u4ef7\u503c\u5c31\u662f\u89e3\u8026 2\u3001\u5b83\u4eec\u90fd\u80fd\u591f\u8fdb\u884c \u900f\u660e\uff0c\u4ece\u800c\u5141\u8bb8**\u5b9e\u73b0**\u8fdb\u884c\u5927\u91cf\u7684optimization 3\u3001\u8fdb\u884c\u4e86\u7b80\u5316 \u5728\u4e0b\u9762\u7ae0\u8282\u4e2d\u4e5f\u8ba8\u8bba\u4e86\u8fd9\u4e2a\u95ee\u9898: 1\u3001virtual memory\uff0c\u53c2\u89c1 \u5de5\u7a0bLinux-OS\u7684 Kernel\\Guide\\Memory-management\\Virtual-memory \u7ae0\u8282 2\u3001tombstone\uff0c\u53c2\u89c1\u5de5\u7a0bprogramming language\u7684 Theory\\Resource-management\\Handle \u7ae0\u8282","title":"Why use virtual?"},{"location":"Post/Abstraction/Abstraction-and-virtual/#virtual#is#a#kind#of#dynamic#polymorphism","text":"\u4ece\u76ee\u524d\u63a5\u89e6\u7684\u51e0\u79cdvirtual\u6765\u770b\uff0c\u5b83\u4eec\u90fd\u662fdynamic polymorphism\uff0c\u5728\u5de5\u7a0bprogramming-language\u7684 Theory\\Programming-paradigm\\Abstraction-and-polymorphism\\Polymorphism\\Implementation\\Static-and-dynamic-polymorphism \u7ae0\u8282\u4e2d\u8ba8\u8bba\u4e86\u5b9e\u73b0dynamic polymorphism\u7684\u7b56\u7565: Dynamic polymorphism\u7684dispatch\u53d1\u751f\u4e8eruntime\uff0c\u663e\u7136\u662flate binding\uff1b\u56e0\u6b64\uff0c\u5982\u679c\u91c7\u7528\u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5219\u5b83\u9700\u8981\u5b58\u50a8**abstraction**\u548c\u6240\u6709\u7684**candidate**\u3001 concrete \u3001 implementation**\u4e4b\u95f4\u7684**\u6620\u5c04\u5173\u7cfb \u3002 \u7531\u4e8edispatch\u53d1\u751f\u4e8eruntime\uff0c\u5219\u5fc5\u7136\u5b58\u5728overhead\u3002 \u4e0b\u9762\u662f\u7ed3\u5408\u5177\u4f53\u7684\u6848\u4f8b\u6765\u8fdb\u884c\u8bf4\u660e: 1) \u5728 Paged virtual memory \u4e2d\uff0c\u7531 Page tables \u6765\u8bb0\u5f55\u6620\u5c04\u5173\u7cfb\uff1athe data structures maps linear to physical addresses. 2) \u5728 Virtual function \u4e2d\uff0c\u7531 Dispatch table \u6765\u8bb0\u5f55\u6620\u5c04\u5173\u7cfb\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u4eec\u90fd\u662f\u4f7f\u7528\u4e00\u4e2atable\u6765\u8bb0\u5f55\u6620\u5c04\u5173\u7cfb\u7684\u3002 See also: Layer (object-oriented design)","title":"Virtual is a kind of dynamic polymorphism"},{"location":"Post/Abstraction/Abstraction-and-virtual/#thoughts","text":"\u7531virtual\u5230physical\u3002 \u7531abstract\u5230concrete\u3002 \u6bd4\u5982\uff1a virtual address\u5230physical address abstract machine\u5230physical machine","title":"Thoughts"},{"location":"Post/Abstraction/Abstraction-principle/","text":"Abstraction principle \u6211\u4eec\u9700\u8981\u9075\u5faaabstraction principle\uff0c\u5177\u4f53\u6765\u8bf4\u5b83\u5305\u62ec: Design to abstraction \u53c2\u89c1: 1) \u5de5\u7a0b software-engineering \u7684 Software-design\\Principle\\Abstraction \u7ae0\u8282 Program to abstraction \u53c2\u89c1: 1) \u5de5\u7a0b programming-language \u7684 Theory\\Programming-paradigm\\Abstraction-and-polymorphism\\Program-to-abstraction \u7ae0\u8282 2) \u5de5\u7a0b programming-language \u7684 Theory\\Programming-paradigm\\Object-oriented-programming\\Design-pattern\\Principle \u7ae0\u8282 \u4f18\u52bf/\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\uff1f \u9700\u8981\u8bba\u8ff0\u8fd9\u6837\u505a\u7684\u539f\u56e0\uff0c\u53c2\u8003\u5185\u5bb9: 1) \u300aBook-Designing-Data-Intensive-Applications\u300b \u9690\u85cf\u7ec6\u8282\uff0c\u4ee5 generic \u7684\u65b9\u5f0f\u6765\u5efa\u7acb\u6a21\u578b(model) \u8fd9\u662f\u6211\u60f3\u5230\u5728Book \u300aDesigning-Data-Intensive-Applications\u300b\u4e2d\u63d0\u51fa\u7684\u89c2\u70b9\u800c\u8054\u60f3\u5230\u7684OOP\u4e2d\u5176\u5b9e\u6709\u7c7b\u4f3c\u7684\u63cf\u8ff0\uff0c\u663e\u7136\uff0c\u8fd9\u662fabstraction\u7684\u4e00\u4e2a\u4f18\u52bf\u3002 \u5728OOP\u4e2d\uff0c\u5c06\u6b64\u6210\u4e3aencapsulation\u3002 \u4e0b\u9762\u662f\u4e00\u4e9b\u7d20\u6750: std::declval \u9690\u85cf\u4e86\u5404\u79cdType\u7684construction\u7ec6\u8282\uff1b trait \u63d0\u4f9b\u4e86\u67e5\u8be2type\u7684attribute\u7684consistent interface\uff1b \u89e3\u8026(Decouple) \u5404\u90e8\u5206\u4f9d\u8d56\u7684\u662f\u62bd\u8c61\u7684\u63a5\u53e3\uff0c\u800c\u4e0d\u662f\u5177\u4f53\uff1b Information hiding and transparency NOTE: \u5173\u4e8e\"transparency\"\uff0c\u53c2\u89c1\u5de5\u7a0bsoftware-engineering\u7684 Software-design\\Principle\\Information-hiding \u7ae0\u8282 \u5185\u90e8\u5b9e\u73b0\u53ef\u4ee5\u7075\u6d3b\u8c03\u6574\uff0c\u4e0a\u5c42\u65e0\u9700\u53d8\u52a8\uff0c\u8fd9\u5176\u5b9e\u662ftransparency\uff1b \u5176\u5b9e\u8fd9\u662f \u9690\u85cf\u7ec6\u8282 \u6240\u5e26\u6765\u7684\u3002 Clean client code NOTE: \u8fd9\u5176\u5b9e\u4e5f\u662f\u9690\u85cf\u7ec6\u8282\u6240\u5e26\u6765\u7684 \u9075\u5faa abstraction principle\uff0c\u80fd\u591f\u5b9e\u73b0clean client code: clean client code \u662fabstract\u7684\uff0c\u9690\u85cf\u4e86concrete/\u7ec6\u8282\uff0c\u5b83\u662fconceptual model\uff1b \u8fd9\u662f\u6211\u5728\u9605\u8bfb eli.thegreenplace A polyglot's guide to multiple dispatch \u65f6\uff0c\u5176\u4e2d\u7ed9\u51fa\u7684\uff0c\u6211\u89c9\u5f97\u5b83\u80fd\u591f\u662f\u4f53\u73b0 abstraction principle \u7684\u4f18\u52bf\u7684\u3002 \u5728 refactoring.guru Visitor \u4e2d\uff0c\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5177\u4f53\u7684\u5bf9\u6bd4\u6848\u4f8b: cumbersome(\u7b28\u62d9\u7684): foreach ( Node node in graph ) if ( node instanceof City ) exportVisitor . doForCity (( City ) node ) if ( node instanceof Industry ) exportVisitor . doForIndustry (( Industry ) node ) // ... } clean: // Client code foreach ( Node node in graph ) node . accept ( exportVisitor ) \u5bb9\u6613\u7406\u89e3 \u9075\u5faa abstraction principle\uff0c\u80fd\u591f\u5b9e\u73b0clean client code\uff0c\u8fd9\u6837\u7684code\u662f\u5bb9\u6613\u7406\u89e3\u7684\uff1b Conceptual advantage \u8fd9\u662f\u5728\u9605\u8bfb wikipedia Software transactional memory # Conceptual advantages and disadvantages \u65f6\uff0c\u5176\u4e2d\u63d0\u53ca\u7684\u4e00\u4e2a\u70b9: In addition to their performance benefits[ citation needed ], STM greatly simplifies conceptual understanding of multithreaded programs and helps make programs more maintainable by working in harmony with existing high-level abstractions such as objects and modules. Code reuse \u9075\u5faaabstraction principle\u80fd\u591f\u5b9e\u73b0code reuse\uff0c N*M \uff0c\u901a\u8fc7\u62bd\u8c61\u7684\u63a5\u53e3\u53ef\u4ee5\u5c06\u5404\u4e2a\u6a21\u5757\u8fdb\u884c\u7ec4\u5408\u3002\uff0c","title":"Introduction"},{"location":"Post/Abstraction/Abstraction-principle/#abstraction#principle","text":"\u6211\u4eec\u9700\u8981\u9075\u5faaabstraction principle\uff0c\u5177\u4f53\u6765\u8bf4\u5b83\u5305\u62ec:","title":"Abstraction principle"},{"location":"Post/Abstraction/Abstraction-principle/#design#to#abstraction","text":"\u53c2\u89c1: 1) \u5de5\u7a0b software-engineering \u7684 Software-design\\Principle\\Abstraction \u7ae0\u8282","title":"Design to abstraction"},{"location":"Post/Abstraction/Abstraction-principle/#program#to#abstraction","text":"\u53c2\u89c1: 1) \u5de5\u7a0b programming-language \u7684 Theory\\Programming-paradigm\\Abstraction-and-polymorphism\\Program-to-abstraction \u7ae0\u8282 2) \u5de5\u7a0b programming-language \u7684 Theory\\Programming-paradigm\\Object-oriented-programming\\Design-pattern\\Principle \u7ae0\u8282","title":"Program to abstraction"},{"location":"Post/Abstraction/Abstraction-principle/#_1","text":"\u9700\u8981\u8bba\u8ff0\u8fd9\u6837\u505a\u7684\u539f\u56e0\uff0c\u53c2\u8003\u5185\u5bb9: 1) \u300aBook-Designing-Data-Intensive-Applications\u300b","title":"\u4f18\u52bf/\u4e3a\u4ec0\u4e48\u8fd9\u6837\u505a\uff1f"},{"location":"Post/Abstraction/Abstraction-principle/#generic#model","text":"\u8fd9\u662f\u6211\u60f3\u5230\u5728Book \u300aDesigning-Data-Intensive-Applications\u300b\u4e2d\u63d0\u51fa\u7684\u89c2\u70b9\u800c\u8054\u60f3\u5230\u7684OOP\u4e2d\u5176\u5b9e\u6709\u7c7b\u4f3c\u7684\u63cf\u8ff0\uff0c\u663e\u7136\uff0c\u8fd9\u662fabstraction\u7684\u4e00\u4e2a\u4f18\u52bf\u3002 \u5728OOP\u4e2d\uff0c\u5c06\u6b64\u6210\u4e3aencapsulation\u3002 \u4e0b\u9762\u662f\u4e00\u4e9b\u7d20\u6750: std::declval \u9690\u85cf\u4e86\u5404\u79cdType\u7684construction\u7ec6\u8282\uff1b trait \u63d0\u4f9b\u4e86\u67e5\u8be2type\u7684attribute\u7684consistent interface\uff1b","title":"\u9690\u85cf\u7ec6\u8282\uff0c\u4ee5 generic \u7684\u65b9\u5f0f\u6765\u5efa\u7acb\u6a21\u578b(model)"},{"location":"Post/Abstraction/Abstraction-principle/#decouple","text":"\u5404\u90e8\u5206\u4f9d\u8d56\u7684\u662f\u62bd\u8c61\u7684\u63a5\u53e3\uff0c\u800c\u4e0d\u662f\u5177\u4f53\uff1b","title":"\u89e3\u8026(Decouple)"},{"location":"Post/Abstraction/Abstraction-principle/#information#hiding#and#transparency","text":"NOTE: \u5173\u4e8e\"transparency\"\uff0c\u53c2\u89c1\u5de5\u7a0bsoftware-engineering\u7684 Software-design\\Principle\\Information-hiding \u7ae0\u8282 \u5185\u90e8\u5b9e\u73b0\u53ef\u4ee5\u7075\u6d3b\u8c03\u6574\uff0c\u4e0a\u5c42\u65e0\u9700\u53d8\u52a8\uff0c\u8fd9\u5176\u5b9e\u662ftransparency\uff1b \u5176\u5b9e\u8fd9\u662f \u9690\u85cf\u7ec6\u8282 \u6240\u5e26\u6765\u7684\u3002","title":"Information hiding and transparency"},{"location":"Post/Abstraction/Abstraction-principle/#clean#client#code","text":"NOTE: \u8fd9\u5176\u5b9e\u4e5f\u662f\u9690\u85cf\u7ec6\u8282\u6240\u5e26\u6765\u7684 \u9075\u5faa abstraction principle\uff0c\u80fd\u591f\u5b9e\u73b0clean client code: clean client code \u662fabstract\u7684\uff0c\u9690\u85cf\u4e86concrete/\u7ec6\u8282\uff0c\u5b83\u662fconceptual model\uff1b \u8fd9\u662f\u6211\u5728\u9605\u8bfb eli.thegreenplace A polyglot's guide to multiple dispatch \u65f6\uff0c\u5176\u4e2d\u7ed9\u51fa\u7684\uff0c\u6211\u89c9\u5f97\u5b83\u80fd\u591f\u662f\u4f53\u73b0 abstraction principle \u7684\u4f18\u52bf\u7684\u3002 \u5728 refactoring.guru Visitor \u4e2d\uff0c\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5177\u4f53\u7684\u5bf9\u6bd4\u6848\u4f8b: cumbersome(\u7b28\u62d9\u7684): foreach ( Node node in graph ) if ( node instanceof City ) exportVisitor . doForCity (( City ) node ) if ( node instanceof Industry ) exportVisitor . doForIndustry (( Industry ) node ) // ... } clean: // Client code foreach ( Node node in graph ) node . accept ( exportVisitor )","title":"Clean client code"},{"location":"Post/Abstraction/Abstraction-principle/#_2","text":"\u9075\u5faa abstraction principle\uff0c\u80fd\u591f\u5b9e\u73b0clean client code\uff0c\u8fd9\u6837\u7684code\u662f\u5bb9\u6613\u7406\u89e3\u7684\uff1b","title":"\u5bb9\u6613\u7406\u89e3"},{"location":"Post/Abstraction/Abstraction-principle/#conceptual#advantage","text":"\u8fd9\u662f\u5728\u9605\u8bfb wikipedia Software transactional memory # Conceptual advantages and disadvantages \u65f6\uff0c\u5176\u4e2d\u63d0\u53ca\u7684\u4e00\u4e2a\u70b9: In addition to their performance benefits[ citation needed ], STM greatly simplifies conceptual understanding of multithreaded programs and helps make programs more maintainable by working in harmony with existing high-level abstractions such as objects and modules.","title":"Conceptual advantage"},{"location":"Post/Abstraction/Abstraction-principle/#code#reuse","text":"\u9075\u5faaabstraction principle\u80fd\u591f\u5b9e\u73b0code reuse\uff0c N*M \uff0c\u901a\u8fc7\u62bd\u8c61\u7684\u63a5\u53e3\u53ef\u4ee5\u5c06\u5404\u4e2a\u6a21\u5757\u8fdb\u884c\u7ec4\u5408\u3002\uff0c","title":"Code reuse"},{"location":"Post/Abstraction/Create-abstraction/","text":"Create concept \u6211\u4eec\u9700\u8981\u4e0d\u65ad\u5730create concept\u3002 Create larger concept \u5f53\u95ee\u9898\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\u8d8a\u6765\u8d8a\u591a\uff0c\u5c31\u9700\u8981\u8fdb\u884c\u66f4\u591a\u7684\u62bd\u8c61\uff0c\u521b\u9020\u66f4\u5927\u7684\u6982\u5ff5\uff0c\u521b\u9020\u66f4\u52a0\u5927\u7684\u6846\u67b6\uff0c\u6765\u5bb9\u7eb3\u4e0d\u65ad\u6269\u5c55\u7684\u3001\u4e0d\u65ad\u590d\u6742\u7684\u95ee\u9898\u3002\u5f15\u5165\u66f4\u5927\u7684\u6982\u5ff5\u52bf\u5fc5\u5bfc\u81f4\u5f15\u5165\u66f4\u591a\u7684 indirection \u3002 \u5fc5\u987b\u8981\u6709\u8db3\u591f\u5f3a\u5927\u7684\u6846\u67b6\u6765\u6ee1\u8db3\u4e0d\u65ad\u5730\u6269\u5c55 \u4e0d\u65ad\u521b\u9020\u66f4\u52a0\u5927\u7684\u6982\u5ff5\u6765\u89e3\u51b3\uff0c\u5305\u5bb9\u95ee\u9898\u3002 Example 1\u3001design pattern \u5173\u4e8e\u6b64\u7684\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\u5c31\u662f Software design pattern \uff0c\u5728\u7ef4\u57fa\u767e\u79d1 Software design pattern#Practice \u4e2d\u6709\u8fd9\u6837\u7684\u63cf\u8ff0: In order to achieve flexibility, design patterns usually introduce additional levels of indirection , which in some cases may complicate the resulting designs and hurt application performance. design pattern\u4e2d\u4e00\u79cd\u5178\u578b\u7684\u601d\u60f3\u5c31\u662f\u521b\u9020\u66f4\u5927\u7684\u62bd\u8c61\uff0c\u5f15\u5165\u66f4\u591a\u7684levels of indirection\u3002 2\u3001\u5199\u4e66 \u5728\u7f16\u5199\u5404\u4e2a\u5de5\u7a0b\u7684\u5185\u5bb9\u8fc7\u7a0b\u4e2d\uff0c\u6709\u5982\u4e0b\u611f\u609f: \u8981\u5c06computer science\u4e2d\u7684\u5185\u5bb9\u7ec4\u7ec7\u8d77\u6765\uff0c\u9700\u8981\u4e0d\u65ad\u5730\u521b\u9020\u66f4\u52a0\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u6765\u5bb9\u7eb3\u66f4\u591a\u7684\u77e5\u8bc6\uff1b Create good abstraction \"Create good abstraction\"\u6709\u7740\u975e\u5e38\u91cd\u8981\u7684\u4ef7\u503c\uff0c\u5173\u4e8e\u6b64\u7684\u63cf\u8ff0\uff0c\u6211\u89c9\u5f97\u6700\u597d\u7684Book-Designing-Data-Intensive-Applications\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u6536\u5f55\u5728\u4e86\u5de5\u7a0bParallel-computing\u7684\"Distributed-computing\\Theory\\Abstraction\"\u7ae0\u8282\u3002 Some good abstraction in software engineering \u5728Book-Designing-Data-Intensive-Applications\u4e2d\uff0c\u4f5c\u8005\u5df2\u7ecf\u5f3a\u8c03\u4e86\u521b\u9020\u62bd\u8c61\u7684\u601d\u60f3\uff0c\u4e0b\u9762\u662f\u6211\u6240\u603b\u7ed3\u7684\u5728software engineering\u4e2d\u4e00\u4e9b\u6bd4\u8f83\u6210\u529f\u7684abstraction: abstraction \u8bf4\u660e \u7ae0\u8282 stream stream-based IO\u3001... - \u5de5\u7a0bLinux-OS\u7684 Programming\\IO\\IO-\u6d41\u6d3e\\Stream \u7ae0\u8282 - \u5de5\u7a0bprogramming language\u7684 C-family-language\\C++\\Library\\Standard-library\\IO-library \u7ae0\u8282 iterator STL\u4e2d\u7684iterator \u5de5\u7a0bprogramming language\u7684 C-family-language\\C++\\Library\\Standard-library\\STL\\Iterator-library object OOP \u5de5\u7a0bprogramming language\u7684 Theory\\Programming-paradigm\\Object-oriented-programming \u7ae0\u8282 transaction \u975e\u5e38\u6210\u529f\u7684\u4e00\u4e2aabstraction\uff0c\u5728\u5f88\u591a\u9886\u57df\u4e2d\u90fd\u6709\u7740\u4f7f\u7528 Golang channel ... NOTE: tag good abstraction Generalization of concept \u5c06\u6982\u5ff5\u8fdb\u884c\u63a8\u5e7f\uff0c\u653e\u677e\u67d0\u4e9b\u9650\u5236\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u4f8b\u5b50\uff1a constexpr \u2013 Generalized constant expressions","title":"Introduction"},{"location":"Post/Abstraction/Create-abstraction/#create#concept","text":"\u6211\u4eec\u9700\u8981\u4e0d\u65ad\u5730create concept\u3002","title":"Create concept"},{"location":"Post/Abstraction/Create-abstraction/#create#larger#concept","text":"\u5f53\u95ee\u9898\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\u8d8a\u6765\u8d8a\u591a\uff0c\u5c31\u9700\u8981\u8fdb\u884c\u66f4\u591a\u7684\u62bd\u8c61\uff0c\u521b\u9020\u66f4\u5927\u7684\u6982\u5ff5\uff0c\u521b\u9020\u66f4\u52a0\u5927\u7684\u6846\u67b6\uff0c\u6765\u5bb9\u7eb3\u4e0d\u65ad\u6269\u5c55\u7684\u3001\u4e0d\u65ad\u590d\u6742\u7684\u95ee\u9898\u3002\u5f15\u5165\u66f4\u5927\u7684\u6982\u5ff5\u52bf\u5fc5\u5bfc\u81f4\u5f15\u5165\u66f4\u591a\u7684 indirection \u3002 \u5fc5\u987b\u8981\u6709\u8db3\u591f\u5f3a\u5927\u7684\u6846\u67b6\u6765\u6ee1\u8db3\u4e0d\u65ad\u5730\u6269\u5c55 \u4e0d\u65ad\u521b\u9020\u66f4\u52a0\u5927\u7684\u6982\u5ff5\u6765\u89e3\u51b3\uff0c\u5305\u5bb9\u95ee\u9898\u3002","title":"Create larger concept"},{"location":"Post/Abstraction/Create-abstraction/#example","text":"1\u3001design pattern \u5173\u4e8e\u6b64\u7684\u4e00\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\u5c31\u662f Software design pattern \uff0c\u5728\u7ef4\u57fa\u767e\u79d1 Software design pattern#Practice \u4e2d\u6709\u8fd9\u6837\u7684\u63cf\u8ff0: In order to achieve flexibility, design patterns usually introduce additional levels of indirection , which in some cases may complicate the resulting designs and hurt application performance. design pattern\u4e2d\u4e00\u79cd\u5178\u578b\u7684\u601d\u60f3\u5c31\u662f\u521b\u9020\u66f4\u5927\u7684\u62bd\u8c61\uff0c\u5f15\u5165\u66f4\u591a\u7684levels of indirection\u3002 2\u3001\u5199\u4e66 \u5728\u7f16\u5199\u5404\u4e2a\u5de5\u7a0b\u7684\u5185\u5bb9\u8fc7\u7a0b\u4e2d\uff0c\u6709\u5982\u4e0b\u611f\u609f: \u8981\u5c06computer science\u4e2d\u7684\u5185\u5bb9\u7ec4\u7ec7\u8d77\u6765\uff0c\u9700\u8981\u4e0d\u65ad\u5730\u521b\u9020\u66f4\u52a0\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u6765\u5bb9\u7eb3\u66f4\u591a\u7684\u77e5\u8bc6\uff1b","title":"Example"},{"location":"Post/Abstraction/Create-abstraction/#create#good#abstraction","text":"\"Create good abstraction\"\u6709\u7740\u975e\u5e38\u91cd\u8981\u7684\u4ef7\u503c\uff0c\u5173\u4e8e\u6b64\u7684\u63cf\u8ff0\uff0c\u6211\u89c9\u5f97\u6700\u597d\u7684Book-Designing-Data-Intensive-Applications\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u6536\u5f55\u5728\u4e86\u5de5\u7a0bParallel-computing\u7684\"Distributed-computing\\Theory\\Abstraction\"\u7ae0\u8282\u3002","title":"Create good abstraction"},{"location":"Post/Abstraction/Create-abstraction/#some#good#abstraction#in#software#engineering","text":"\u5728Book-Designing-Data-Intensive-Applications\u4e2d\uff0c\u4f5c\u8005\u5df2\u7ecf\u5f3a\u8c03\u4e86\u521b\u9020\u62bd\u8c61\u7684\u601d\u60f3\uff0c\u4e0b\u9762\u662f\u6211\u6240\u603b\u7ed3\u7684\u5728software engineering\u4e2d\u4e00\u4e9b\u6bd4\u8f83\u6210\u529f\u7684abstraction: abstraction \u8bf4\u660e \u7ae0\u8282 stream stream-based IO\u3001... - \u5de5\u7a0bLinux-OS\u7684 Programming\\IO\\IO-\u6d41\u6d3e\\Stream \u7ae0\u8282 - \u5de5\u7a0bprogramming language\u7684 C-family-language\\C++\\Library\\Standard-library\\IO-library \u7ae0\u8282 iterator STL\u4e2d\u7684iterator \u5de5\u7a0bprogramming language\u7684 C-family-language\\C++\\Library\\Standard-library\\STL\\Iterator-library object OOP \u5de5\u7a0bprogramming language\u7684 Theory\\Programming-paradigm\\Object-oriented-programming \u7ae0\u8282 transaction \u975e\u5e38\u6210\u529f\u7684\u4e00\u4e2aabstraction\uff0c\u5728\u5f88\u591a\u9886\u57df\u4e2d\u90fd\u6709\u7740\u4f7f\u7528 Golang channel ... NOTE: tag good abstraction","title":"Some good abstraction in software engineering"},{"location":"Post/Abstraction/Create-abstraction/#generalization#of#concept","text":"\u5c06\u6982\u5ff5\u8fdb\u884c\u63a8\u5e7f\uff0c\u653e\u677e\u67d0\u4e9b\u9650\u5236\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u4f8b\u5b50\uff1a constexpr \u2013 Generalized constant expressions","title":"Generalization of concept"},{"location":"Post/Language/Language/","text":"Language and program Language \u662f\u6211\u4eec\u4e0e\u751f\u4ff1\u6765\u7684\u5929\u8d4b\uff0c\u6211\u4eec\u4f7f\u7528language\u8fdb\u884c**\u63cf\u8ff0**\uff08 describes \uff09\u4e16\u95f4\u4e07\u7269\uff0c\u6216\u8005\u8bf4\uff0c\u8bed\u8a00\u7684\u529f\u80fd\u5c31\u662f\u6765\u8fdb\u884c**\u63cf\u8ff0**\u7684\uff1a \u4f7f\u7528\u8bed\u8a00\u63cf\u8ff0 definition \u4f7f\u7528\u8bed\u8a00\u6765\u63cf\u8ff0 \u7b97\u6cd5 ......\uff08\u6b64\u5904\u53ef\u4ee5\u679a\u4e3e\u6570\u4e0d\u6e05\u7684\u4f8b\u5b50\uff09 \u5728 language \u7684\u5927\u5bb6\u5ead\u4e2d\uff0c\u6709\u7740\u591a\u4e2a\u6210\u5458\uff0c\u6bd4\u5982\uff1a \u6211\u4eec\u65e5\u5e38\u4ea4\u6d41\u4f7f\u7528 natural language \uff0c\u6bd4\u5982Chinese\u3001English Formal language \uff0c\u6bd4\u5982 programming language Language of mathematics ....... \u4f5c\u4e3asoftware engineer\uff0c\u6211\u4eec\u5e78\u8fd0\u5730\u5df2\u7ecf\u4f7f\u7528\u4e86\u4e0a\u9762\u679a\u4e3e\u7684\u4e09\u79cd\u8bed\u8a00\u3002 \u4f5c\u4e3asoftware engineer\uff0c\u6211\u4eec\u662f\u5728\u4f7f\u7528 programming language \u6765\u63cf\u8ff0\u4e16\u95f4\u4e07\u7269\uff0c\u6211\u4eec\u6240\u505a\u7684\u5f88\u591a\u5de5\u4f5c\uff0c\u5c31\u662f\u5c06\u4eba\u4eec\u4f7f\u7528 natural language \u3001 language of mathematics \u7b49\u8bed\u8a00\u7684\u63cf\u8ff0\uff0c\u8f6c\u6362\u4e3a programming language \u7684\u63cf\u8ff0\u3002 \u4e00\u5207\u201c\u63cf\u8ff0\u201d\u90fd\u662f\u8bed\u8a00\uff1f \u5f53\u8c08\u5230**\u8bed\u8a00**\u540e\uff0c\u90a3\u4e48\u5f97\u8bf4\u8bf4\u201c\u63cf\u8ff0\u201d\u8fd9\u4e2a\u8bcd\u4e86\uff0c\u611f\u89c9\u8fd9\u4e2a\u8bcd\u662f\u4e00\u4e2a\u975e\u5e38\u5bbd\u6cdb\u3001\u975e\u5e38\u56ca\u62ec\u7684\u8bcd\uff0c\u6bd4\u5982\uff1a \u5728 Language of mathematics \u7684 The meanings of mathematics \u4e2d\u5c31\u4f7f\u7528\u4e86\u201cdescribes \u201d\u8fd9\u4e2a\u8bcd\uff08\u8fd9\u6bb5\u8bdd\u603b\u7ed3\u7684\u592a\u597d\u4ee5\u81f3\u4e8e\u6211\u5fcd\u4e0d\u4f4f\u5730\u628a\u5b83\u6458\u5f55\u8fc7\u6765\u4e86\uff09\uff1a Mathematics describes the real world : many areas of mathematics originated with attempts to describe and solve real world phenomena - from measuring farms ( geometry ) to falling apples ( calculus ) to gambling ( probability ). Mathematics is widely used in modern physics and engineering , and has been hugely successful in helping us to understand more about the universe around us from its largest scales ( physical cosmology ) to its smallest ( quantum mechanics ). Indeed, the very success of mathematics in this respect has been a source of puzzlement for some philosophers (see The Unreasonable Effectiveness of Mathematics in the Natural Sciences by Eugene Wigner ). Mathematics describes abstract structures : on the other hand, there are areas of pure mathematics which deal with abstract structures , which have no known physical counterparts at all. However, it is difficult to give any categorical examples here, as even the most abstract structures can be co-opted as models in some branch of physics (see Calabi-Yau spaces and string theory ). Mathematics describes mathematics : mathematics can be used reflexively to describe itself\u2014this is an area of mathematics called metamathematics . \u90a3\u4e0d\u7981\u60f3\u95ee\uff1a\u6570\u5b66\u662f\u4e00\u95e8\u8bed\u8a00\u5417\uff1f\u5982\u679c\u4ece\u201c\u63cf\u8ff0\u201d\u7684\u89d2\u5ea6\u6765\u770b\u8bdd\uff0c\u6211\u89c9\u5f97\u53ef\u4ee5\u56de\u7b54\u201c\u662f\u201d\uff0c\u4e0b\u9762\u662f\u539f\u6587\u4e2d\u7d27\u8ddf\u7740\u7684\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u8bba\u8ff0\uff1a Mathematics can communicate a range of meanings that is as wide as (although different from) that of a natural language . As English mathematician R.L.E. Schwarzenberger says: My own attitude, which I share with many of my colleagues, is simply that **mathematics is a language* . Like English, or Latin, or Chinese, there are certain concepts for which mathematics is particularly well suited: it would be as foolish to attempt to write a love poem in the language of mathematics as to prove the Fundamental Theorem of Algebra using the English language.* \u6839\u636e\u4e0a\u9762\u7684\u8bba\u8ff0\u6765\u770b\uff0c English mathematician R.L.E. Schwarzenberger \u8ba4\u4e3a \u6570\u5b66\u662f\u4e00\u95e8\u8bed\u8a00\u3002 \u8ba9\u6211\u4eec\u6cbf\u7740\u8fd9\u4e2a\u601d\u8def\u8fdb\u4e00\u6b65\u8fdb\u884c\u63a8\u5e7f\u5c31\u5f97\u5230\u672c\u5c0f\u8282\u7684\u6807\u9898\u6240\u63cf\u8ff0\u7684\u95ee\u9898\uff1a\u201c\u4e00\u5207\u201c\u63cf\u8ff0\u201d\u90fd\u662f\u8bed\u8a00\uff1f\u201d\uff0c\u8fd9\u4e2a\u95ee\u9898\u6211\u65e0\u6cd5\u7ed9\u51fa\u7b54\u6848\uff0c\u4ee5\u6211\u76ee\u524d\u7684\u8ba4\u77e5\u6c34\u5e73\uff0c\u6211\u89c9\u5f97\u662f\u7684\u3002 \u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u6211\u7684\u5de5\u7a0b Language \u7684\u4e2d\u5bf9\u6b64\u4e5f\u8fdb\u884c\u4e86\u8ba8\u8bba\u3002 \u6211\u5bf9\u201c\u8bed\u8a00\u201d\u7684\u63a2\u7d22 NLP compiler-principle automata-and-formal-language programming language","title":"Language"},{"location":"Post/Language/Language/#language#and#program","text":"Language \u662f\u6211\u4eec\u4e0e\u751f\u4ff1\u6765\u7684\u5929\u8d4b\uff0c\u6211\u4eec\u4f7f\u7528language\u8fdb\u884c**\u63cf\u8ff0**\uff08 describes \uff09\u4e16\u95f4\u4e07\u7269\uff0c\u6216\u8005\u8bf4\uff0c\u8bed\u8a00\u7684\u529f\u80fd\u5c31\u662f\u6765\u8fdb\u884c**\u63cf\u8ff0**\u7684\uff1a \u4f7f\u7528\u8bed\u8a00\u63cf\u8ff0 definition \u4f7f\u7528\u8bed\u8a00\u6765\u63cf\u8ff0 \u7b97\u6cd5 ......\uff08\u6b64\u5904\u53ef\u4ee5\u679a\u4e3e\u6570\u4e0d\u6e05\u7684\u4f8b\u5b50\uff09 \u5728 language \u7684\u5927\u5bb6\u5ead\u4e2d\uff0c\u6709\u7740\u591a\u4e2a\u6210\u5458\uff0c\u6bd4\u5982\uff1a \u6211\u4eec\u65e5\u5e38\u4ea4\u6d41\u4f7f\u7528 natural language \uff0c\u6bd4\u5982Chinese\u3001English Formal language \uff0c\u6bd4\u5982 programming language Language of mathematics ....... \u4f5c\u4e3asoftware engineer\uff0c\u6211\u4eec\u5e78\u8fd0\u5730\u5df2\u7ecf\u4f7f\u7528\u4e86\u4e0a\u9762\u679a\u4e3e\u7684\u4e09\u79cd\u8bed\u8a00\u3002 \u4f5c\u4e3asoftware engineer\uff0c\u6211\u4eec\u662f\u5728\u4f7f\u7528 programming language \u6765\u63cf\u8ff0\u4e16\u95f4\u4e07\u7269\uff0c\u6211\u4eec\u6240\u505a\u7684\u5f88\u591a\u5de5\u4f5c\uff0c\u5c31\u662f\u5c06\u4eba\u4eec\u4f7f\u7528 natural language \u3001 language of mathematics \u7b49\u8bed\u8a00\u7684\u63cf\u8ff0\uff0c\u8f6c\u6362\u4e3a programming language \u7684\u63cf\u8ff0\u3002","title":"Language and program"},{"location":"Post/Language/Language/#_1","text":"\u5f53\u8c08\u5230**\u8bed\u8a00**\u540e\uff0c\u90a3\u4e48\u5f97\u8bf4\u8bf4\u201c\u63cf\u8ff0\u201d\u8fd9\u4e2a\u8bcd\u4e86\uff0c\u611f\u89c9\u8fd9\u4e2a\u8bcd\u662f\u4e00\u4e2a\u975e\u5e38\u5bbd\u6cdb\u3001\u975e\u5e38\u56ca\u62ec\u7684\u8bcd\uff0c\u6bd4\u5982\uff1a \u5728 Language of mathematics \u7684 The meanings of mathematics \u4e2d\u5c31\u4f7f\u7528\u4e86\u201cdescribes \u201d\u8fd9\u4e2a\u8bcd\uff08\u8fd9\u6bb5\u8bdd\u603b\u7ed3\u7684\u592a\u597d\u4ee5\u81f3\u4e8e\u6211\u5fcd\u4e0d\u4f4f\u5730\u628a\u5b83\u6458\u5f55\u8fc7\u6765\u4e86\uff09\uff1a Mathematics describes the real world : many areas of mathematics originated with attempts to describe and solve real world phenomena - from measuring farms ( geometry ) to falling apples ( calculus ) to gambling ( probability ). Mathematics is widely used in modern physics and engineering , and has been hugely successful in helping us to understand more about the universe around us from its largest scales ( physical cosmology ) to its smallest ( quantum mechanics ). Indeed, the very success of mathematics in this respect has been a source of puzzlement for some philosophers (see The Unreasonable Effectiveness of Mathematics in the Natural Sciences by Eugene Wigner ). Mathematics describes abstract structures : on the other hand, there are areas of pure mathematics which deal with abstract structures , which have no known physical counterparts at all. However, it is difficult to give any categorical examples here, as even the most abstract structures can be co-opted as models in some branch of physics (see Calabi-Yau spaces and string theory ). Mathematics describes mathematics : mathematics can be used reflexively to describe itself\u2014this is an area of mathematics called metamathematics . \u90a3\u4e0d\u7981\u60f3\u95ee\uff1a\u6570\u5b66\u662f\u4e00\u95e8\u8bed\u8a00\u5417\uff1f\u5982\u679c\u4ece\u201c\u63cf\u8ff0\u201d\u7684\u89d2\u5ea6\u6765\u770b\u8bdd\uff0c\u6211\u89c9\u5f97\u53ef\u4ee5\u56de\u7b54\u201c\u662f\u201d\uff0c\u4e0b\u9762\u662f\u539f\u6587\u4e2d\u7d27\u8ddf\u7740\u7684\u5bf9\u8fd9\u4e2a\u95ee\u9898\u7684\u8bba\u8ff0\uff1a Mathematics can communicate a range of meanings that is as wide as (although different from) that of a natural language . As English mathematician R.L.E. Schwarzenberger says: My own attitude, which I share with many of my colleagues, is simply that **mathematics is a language* . Like English, or Latin, or Chinese, there are certain concepts for which mathematics is particularly well suited: it would be as foolish to attempt to write a love poem in the language of mathematics as to prove the Fundamental Theorem of Algebra using the English language.* \u6839\u636e\u4e0a\u9762\u7684\u8bba\u8ff0\u6765\u770b\uff0c English mathematician R.L.E. Schwarzenberger \u8ba4\u4e3a \u6570\u5b66\u662f\u4e00\u95e8\u8bed\u8a00\u3002 \u8ba9\u6211\u4eec\u6cbf\u7740\u8fd9\u4e2a\u601d\u8def\u8fdb\u4e00\u6b65\u8fdb\u884c\u63a8\u5e7f\u5c31\u5f97\u5230\u672c\u5c0f\u8282\u7684\u6807\u9898\u6240\u63cf\u8ff0\u7684\u95ee\u9898\uff1a\u201c\u4e00\u5207\u201c\u63cf\u8ff0\u201d\u90fd\u662f\u8bed\u8a00\uff1f\u201d\uff0c\u8fd9\u4e2a\u95ee\u9898\u6211\u65e0\u6cd5\u7ed9\u51fa\u7b54\u6848\uff0c\u4ee5\u6211\u76ee\u524d\u7684\u8ba4\u77e5\u6c34\u5e73\uff0c\u6211\u89c9\u5f97\u662f\u7684\u3002 \u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u6211\u7684\u5de5\u7a0b Language \u7684\u4e2d\u5bf9\u6b64\u4e5f\u8fdb\u884c\u4e86\u8ba8\u8bba\u3002","title":"\u4e00\u5207\u201c\u63cf\u8ff0\u201d\u90fd\u662f\u8bed\u8a00\uff1f"},{"location":"Post/Language/Language/#_2","text":"NLP compiler-principle automata-and-formal-language programming language","title":"\u6211\u5bf9\u201c\u8bed\u8a00\u201d\u7684\u63a2\u7d22"},{"location":"Post/Law/","text":"\u5173\u4e8e\u672c\u7ae0 \u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u4e00\u4e9b\u5b9a\u5f8b\uff0c\u8fd9\u4e9b\u5b9a\u5f8b\u662f\u8d2f\u7a7f\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u3002","title":"Introduction"},{"location":"Post/Law/#_1","text":"\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u4e00\u4e9b\u5b9a\u5f8b\uff0c\u8fd9\u4e9b\u5b9a\u5f8b\u662f\u8d2f\u7a7f\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u3002","title":"\u5173\u4e8e\u672c\u7ae0"},{"location":"Post/Law/Level-in-computer-science/","text":"Level Level in computer science \u4e0b\u9762\u603b\u7ed3\u4e86\u4e00\u4e9bcomputer science \u4e2d\u7684level\u3002 Levels of exception safety exception safety\u7684\u7b49\u7ea7\uff1a No-throw guarantee Strong exception safety Basic exception safety No exception safety Levels of database normalization UNF (1970) 1NF (1970) 2NF (1971) 3NF (1971) EKNF (1982) BCNF (1974) 4NF (1977) ETNF (2012) 5NF (1979) DKNF (1981) 6NF (2003) | Level of Consistency model Strict consistency Sequential consistency Causal consistency ...... Level of database transaction isolation \u53c2\u89c1 \u6570\u636e\u5e93\u4e8b\u52a1\u7684\u56db\u5927\u7279\u6027\u4ee5\u53ca\u4e8b\u52a1\u7684\u9694\u79bb\u7ea7\u522b \u3002 Tradeoff 1\u3001\u5728\u73b0\u5b9e\u4e2d\uff0c\u6211\u4eec\u5f80\u5f80\u9700\u8981\u5728\u8bf8\u591a\u56e0\u7d20\u4e2d\u8fdb\u884ctradeoff\uff0c\u53ef\u80fd\u56e0\u4e3a\u5176\u5b83\u76ee\u7684\u800c\u653e\u5f03\u66f4\u9ad8level\uff0c\u800c\u9009\u62e9\u8f83\u4f4elevel\uff0c\u5178\u578b\u7684\u4f8b\u5b50\u6709: a\u3001performance and exception safety tradeoff\uff0c\u53c2\u89c1\u5de5\u7a0bprogramming-language\u7684 Exception\\Exception-Safety\\Level-of-exception-safety \u7ae0\u8282","title":"Introduction"},{"location":"Post/Law/Level-in-computer-science/#level","text":"","title":"Level"},{"location":"Post/Law/Level-in-computer-science/#level#in#computer#science","text":"\u4e0b\u9762\u603b\u7ed3\u4e86\u4e00\u4e9bcomputer science \u4e2d\u7684level\u3002","title":"Level in computer science"},{"location":"Post/Law/Level-in-computer-science/#levels#of#exception#safety","text":"exception safety\u7684\u7b49\u7ea7\uff1a No-throw guarantee Strong exception safety Basic exception safety No exception safety","title":"Levels of exception safety"},{"location":"Post/Law/Level-in-computer-science/#levels#of#database#normalization","text":"UNF (1970) 1NF (1970) 2NF (1971) 3NF (1971) EKNF (1982) BCNF (1974) 4NF (1977) ETNF (2012) 5NF (1979) DKNF (1981) 6NF (2003) |","title":"Levels of database normalization"},{"location":"Post/Law/Level-in-computer-science/#level#of#consistency#model","text":"Strict consistency Sequential consistency Causal consistency ......","title":"Level of Consistency model"},{"location":"Post/Law/Level-in-computer-science/#level#of#database#transaction#isolation","text":"\u53c2\u89c1 \u6570\u636e\u5e93\u4e8b\u52a1\u7684\u56db\u5927\u7279\u6027\u4ee5\u53ca\u4e8b\u52a1\u7684\u9694\u79bb\u7ea7\u522b \u3002","title":"Level of database transaction isolation"},{"location":"Post/Law/Level-in-computer-science/#tradeoff","text":"1\u3001\u5728\u73b0\u5b9e\u4e2d\uff0c\u6211\u4eec\u5f80\u5f80\u9700\u8981\u5728\u8bf8\u591a\u56e0\u7d20\u4e2d\u8fdb\u884ctradeoff\uff0c\u53ef\u80fd\u56e0\u4e3a\u5176\u5b83\u76ee\u7684\u800c\u653e\u5f03\u66f4\u9ad8level\uff0c\u800c\u9009\u62e9\u8f83\u4f4elevel\uff0c\u5178\u578b\u7684\u4f8b\u5b50\u6709: a\u3001performance and exception safety tradeoff\uff0c\u53c2\u89c1\u5de5\u7a0bprogramming-language\u7684 Exception\\Exception-Safety\\Level-of-exception-safety \u7ae0\u8282","title":"Tradeoff"},{"location":"Post/Law/Meta/","text":"Meta \u4e0b\u9762\u662f\u4f7f\u7528\"meta\"\u7684\u4e00\u4e9b\u4f8b\u5b50: 1\u3001 metamathematics 2\u3001 Metaprogramming 3\u3001 Metaclass 4\u3001 Metaobject meta\u662f\u4e00\u79cd\u62bd\u8c61\u5730\u63cf\u8ff0\u3002 Meta learning","title":"Introduction"},{"location":"Post/Law/Meta/#meta","text":"\u4e0b\u9762\u662f\u4f7f\u7528\"meta\"\u7684\u4e00\u4e9b\u4f8b\u5b50: 1\u3001 metamathematics 2\u3001 Metaprogramming 3\u3001 Metaclass 4\u3001 Metaobject meta\u662f\u4e00\u79cd\u62bd\u8c61\u5730\u63cf\u8ff0\u3002 Meta learning","title":"Meta"},{"location":"Post/Law/Nature/","text":"Nature/abstraction \u89c2\u70b9 \u672c\u6587\u6807\u9898\"nature\"\u7684\u542b\u4e49\u662f\"\u672c\u8d28\"\u3002\u672c\u6587\u7684\u89c2\u70b9\u662f: \u63a2\u5bfb\u95ee\u9898\u7684\u672c\u8d28\uff0c\u5bf9\u4e8e\u672c\u8d28\u4e0a\u76f8\u540c\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u6280\u672f\u6765\u8fdb\u884c\u5b9e\u73b0\uff0c\u4f7f\u7528\u76f8\u540c\u7684model\u6765\u8fdb\u884c\u63cf\u8ff0\u3002 draft \u5728\u672c\u8d28\u4e0a\u76f8\u540c\u7684\u95ee\u9898\u3001\u8ffd\u5bfb\u76f8\u540c\u7684\u76ee\u6807\u3001\u5177\u5907\u76f8\u540c\u7684\u7ed3\u6784\uff0c\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u6280\u672f\u3001\u76f8\u540c\u7684\u601d\u60f3\u3001\u76f8\u540c\u7684\u6982\u5ff5\u3001\u76f8\u540c\u7684algorithm\uff1b\u8fd9\u5c31\u51fa\u73b0\u4e86\u540c\u4e00\u4e2a\u6982\u5ff5\u5728\u4e0d\u540c\u5c42\u6b21\u3001\u9886\u57df\u7684\u76f8\u4e92\u501f\u7528\uff1b\u540c\u4e00\u6280\u672f\u5728\u4e0d\u540c\u5c42\u6b21\u3001\u9886\u57df\u7684\u76f8\u4e92\u501f\u7528\uff1b\u540c\u4e00model\u53ef\u4ee5\u4f7f\u7528\u4e8e\u4e0d\u540c\u5c42\u6b21\u3001\u9886\u57df\uff1b NOTE: model draft \u540c\u4e00\u601d\u60f3/\u6280\u672f\u5728computer science\u5404\u4e2a\u9886\u57df\u4e2d\u7684\u8fd0\u7528\uff0c\u4e0e\u6b64\u76f8\u5173\u7684\u662f: \u4e00\u4e9bmodel\u53ef\u4ee5\u7528\u4e8ecomputer science\u7684\u5404\u4e2a\u9886\u57df\uff0c\u6bd4\u8f83\u5178\u578b\u7684\u662fconsistency model\uff1b\u540c\u4e00\u4e2a\u6982\u5ff5\u5728computer science\u7684\u5404\u4e2a\u9886\u57df\u4e2d\u88ab\u7528\u4e0d\u540c\u7684language\u6765\u8fdb\u884c\u63cf\u8ff0\uff1b \u6211\u662f\u5728\u9605\u8bfb https://en.wikipedia.org/wiki/Speculative_execution \u65f6\uff0c\u5176\u4e2d\u7684\u4e00\u6bb5\u8bdd \"This approach is employed in a variety of areas \"\u7ed9\u51fa\u7684\u63d0\u793a draft \u5728\u4e0d\u540c\u7684\u5c42\u7ea7\u3001\u8303\u56f4\u90fd\u8981\u8003\u8651\u770b\u4f3c\u76f8\u540c\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u5728distributed computing\u3001DBMS\u4e2d\uff0c\u90fd\u9700\u8981\u8003\u8651\u539f\u5b50\u6027\uff0c\u8fd9\u5c31\u8981\u6c42\u5efa\u7acb\u6a21\u578b\uff0c\u5b83\u4eec\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\u53ef\u4ee5\u76f8\u4e92\u501f\u9274\u7684\u3002 Example \u4e0b\u9762\u662f\u4e00\u4e9bexample\u3002 \u4f7f\u7528asynchronous programming\u6765optimization \u8fd9\u662f\u4e3a\u4e86**\u8ffd\u5bfb\u76f8\u540c\u7684\u76ee\u6807**(optimization)\uff0c\u800c\u4f7f\u7528\u7c7b\u4f3c\u7684\u6280\u672f(asynchronous programming)\u7684\u4f8b\u5b50\u3002 asynchronous/non-blocking operation: \u542f\u52a8\uff0c\u4e0d\u963b\u585e\u4e3b\u8c03\u7ebf\u7a0b/main loop\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u4f8b\u5b50: 1) Redis\u4e2d\uff0cfork\u4e00\u4e2aprocess\u6765\u5904\u7406copy entire data to file\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cmain loop\u5e76\u672a\u88ab\u963b\u585e\u800c\u662f\u4e0d\u65ad\u5730\u8fd0\u884c\uff0c\u5904\u7406\u5176\u4ed6\u7684request 2) CPU asynchronous operation: CPU\u5bf9\u4e8e\u8017\u65f6\u7684instruction\uff0c\u5e76\u4e0d\u963b\u585e\u4e3b\u6d41\u7a0b 3) Atomicity/atomic\u6982\u5ff5 \u5728 ./Atomic \u8fdb\u884c\u4e86\u4ecb\u7ecd\u3002 Synchronization \u5c42\u6b21 distributed system standalone instruction distributed lock lock lock instruction barrier barrier memory barrier message communication IPC\u3001inter-thread communication \u5171\u8bc6","title":"Introduction"},{"location":"Post/Law/Nature/#natureabstraction","text":"","title":"Nature/abstraction"},{"location":"Post/Law/Nature/#_1","text":"\u672c\u6587\u6807\u9898\"nature\"\u7684\u542b\u4e49\u662f\"\u672c\u8d28\"\u3002\u672c\u6587\u7684\u89c2\u70b9\u662f: \u63a2\u5bfb\u95ee\u9898\u7684\u672c\u8d28\uff0c\u5bf9\u4e8e\u672c\u8d28\u4e0a\u76f8\u540c\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u6280\u672f\u6765\u8fdb\u884c\u5b9e\u73b0\uff0c\u4f7f\u7528\u76f8\u540c\u7684model\u6765\u8fdb\u884c\u63cf\u8ff0\u3002","title":"\u89c2\u70b9"},{"location":"Post/Law/Nature/#draft","text":"\u5728\u672c\u8d28\u4e0a\u76f8\u540c\u7684\u95ee\u9898\u3001\u8ffd\u5bfb\u76f8\u540c\u7684\u76ee\u6807\u3001\u5177\u5907\u76f8\u540c\u7684\u7ed3\u6784\uff0c\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u6280\u672f\u3001\u76f8\u540c\u7684\u601d\u60f3\u3001\u76f8\u540c\u7684\u6982\u5ff5\u3001\u76f8\u540c\u7684algorithm\uff1b\u8fd9\u5c31\u51fa\u73b0\u4e86\u540c\u4e00\u4e2a\u6982\u5ff5\u5728\u4e0d\u540c\u5c42\u6b21\u3001\u9886\u57df\u7684\u76f8\u4e92\u501f\u7528\uff1b\u540c\u4e00\u6280\u672f\u5728\u4e0d\u540c\u5c42\u6b21\u3001\u9886\u57df\u7684\u76f8\u4e92\u501f\u7528\uff1b\u540c\u4e00model\u53ef\u4ee5\u4f7f\u7528\u4e8e\u4e0d\u540c\u5c42\u6b21\u3001\u9886\u57df\uff1b NOTE: model","title":"draft"},{"location":"Post/Law/Nature/#draft_1","text":"\u540c\u4e00\u601d\u60f3/\u6280\u672f\u5728computer science\u5404\u4e2a\u9886\u57df\u4e2d\u7684\u8fd0\u7528\uff0c\u4e0e\u6b64\u76f8\u5173\u7684\u662f: \u4e00\u4e9bmodel\u53ef\u4ee5\u7528\u4e8ecomputer science\u7684\u5404\u4e2a\u9886\u57df\uff0c\u6bd4\u8f83\u5178\u578b\u7684\u662fconsistency model\uff1b\u540c\u4e00\u4e2a\u6982\u5ff5\u5728computer science\u7684\u5404\u4e2a\u9886\u57df\u4e2d\u88ab\u7528\u4e0d\u540c\u7684language\u6765\u8fdb\u884c\u63cf\u8ff0\uff1b \u6211\u662f\u5728\u9605\u8bfb https://en.wikipedia.org/wiki/Speculative_execution \u65f6\uff0c\u5176\u4e2d\u7684\u4e00\u6bb5\u8bdd \"This approach is employed in a variety of areas \"\u7ed9\u51fa\u7684\u63d0\u793a","title":"draft"},{"location":"Post/Law/Nature/#draft_2","text":"\u5728\u4e0d\u540c\u7684\u5c42\u7ea7\u3001\u8303\u56f4\u90fd\u8981\u8003\u8651\u770b\u4f3c\u76f8\u540c\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u5728distributed computing\u3001DBMS\u4e2d\uff0c\u90fd\u9700\u8981\u8003\u8651\u539f\u5b50\u6027\uff0c\u8fd9\u5c31\u8981\u6c42\u5efa\u7acb\u6a21\u578b\uff0c\u5b83\u4eec\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\u53ef\u4ee5\u76f8\u4e92\u501f\u9274\u7684\u3002","title":"draft"},{"location":"Post/Law/Nature/#example","text":"\u4e0b\u9762\u662f\u4e00\u4e9bexample\u3002","title":"Example"},{"location":"Post/Law/Nature/#asynchronous#programmingoptimization","text":"\u8fd9\u662f\u4e3a\u4e86**\u8ffd\u5bfb\u76f8\u540c\u7684\u76ee\u6807**(optimization)\uff0c\u800c\u4f7f\u7528\u7c7b\u4f3c\u7684\u6280\u672f(asynchronous programming)\u7684\u4f8b\u5b50\u3002 asynchronous/non-blocking operation: \u542f\u52a8\uff0c\u4e0d\u963b\u585e\u4e3b\u8c03\u7ebf\u7a0b/main loop\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u4f8b\u5b50: 1) Redis\u4e2d\uff0cfork\u4e00\u4e2aprocess\u6765\u5904\u7406copy entire data to file\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cmain loop\u5e76\u672a\u88ab\u963b\u585e\u800c\u662f\u4e0d\u65ad\u5730\u8fd0\u884c\uff0c\u5904\u7406\u5176\u4ed6\u7684request 2) CPU asynchronous operation: CPU\u5bf9\u4e8e\u8017\u65f6\u7684instruction\uff0c\u5e76\u4e0d\u963b\u585e\u4e3b\u6d41\u7a0b 3)","title":"\u4f7f\u7528asynchronous programming\u6765optimization"},{"location":"Post/Law/Nature/#atomicityatomic","text":"\u5728 ./Atomic \u8fdb\u884c\u4e86\u4ecb\u7ecd\u3002","title":"Atomicity/atomic\u6982\u5ff5"},{"location":"Post/Law/Nature/#synchronization","text":"\u5c42\u6b21 distributed system standalone instruction distributed lock lock lock instruction barrier barrier memory barrier message communication IPC\u3001inter-thread communication \u5171\u8bc6","title":"Synchronization"},{"location":"Post/Law/Nature/Atomic/","text":"Atomic What is atomic/atomicity? \u76f4\u89c2\u7406\u89e3 \"atomic/atomicity\"\uff0c\"atomicity\"\u5373\"\u539f\u5b50\u6027\"\uff0c\u5b83\u501f\u7528\u4e86\u7269\u7406\u5b66\u4e2d\" atom(\u539f\u5b50) \"\u7684\u6982\u5ff5: An atom is the smallest unit of ordinary matter that forms a chemical element . \u610f\u5473\u7740\u6700\u5c0funit\uff0c\u662f\u4e0d\u53ef\u5206\u5272\u7684\u3002 \u5728\u4e0d\u540c\u7684\u5c42\u7ea7\u90fd\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u6982\u5ff5\uff0c\u63d0\u4f9batomic primitive/interface\uff0c\u6bd4\u5982: 1\u3001instruction level: X86 cmpxchg 2\u3001OS level: Linux openat Formal definition \u5173\u4e8eatomic\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff0c\u53c2\u89c1\u5de5\u7a0bparallel-computing\u7684\u76f8\u5173\u7ae0\u8282\u3002 Atomic primitive/interface 1\u3001Instruction \u5c42\uff1a instruction\u5c31\u662fatomic\u7684 2\u3001OS level: Linux openat 3\u3001Application\u5c42\uff0c\u4e5f\u6709atomic\u7684\u6982\u5ff5\uff0c\u4e5f\u53ef\u4ee5\u5b9e\u73b0atomic cppreference Atomic operations library Atomic and unit \u4e00\u822c\u6700\u5c0funit\u662fAtomic \uff0c\u5173\u4e8eunit\uff0c\u53c2\u89c1\u6587\u7ae0\u300aUnit\u300b\u3002 \u5b9e\u73b0\u601d\u8def Bottom-up analysis \u4ece\u6700\u6700\u5e95\u5c42(nstruction \u5c42)\u5f00\u59cb\uff0c\u81ea\u5e95\u5411\u4e0a\u8fdb\u884c\u5206\u6790\uff0c\u663e\u7136\u5982\u679c\u5e95\u5c42\u80fd\u591f\u4fdd\u8bc1atomic\uff0c\u90a3\u4e48\u80fd\u591f\u4e3a\u9ad8\u5c42\u5b9e\u73b0atomic\u63d0\u4f9b\u8f83\u597d\u7684\u652f\u6301\uff0c\u4e0b\u9762\u662f\u4e00\u4e9blevel: 1\u3001Instruction level 2\u3001OS level 3\u3001Application level Assemble as atomic primitive \u5728\u7cfb\u7edf\u5c42\u8fdb\u884c\u96c6\u6210: \u5c06\u591a\u4e2a\u64cd\u4f5c\u5728\u7cfb\u7edf\u5c42/\u5b9e\u73b0\u5c42\u8fdb\u884c\u96c6\u6210\uff0c\u63d0\u4f9b\u539f\u5b50\u7279\u6027\u7684\u63a5\u53e3\uff0c\u4ece\u800c\u8fbe\u5230\u539f\u5b50\u6027\u7684\u76ee\u7684\uff0c\u4e0b\u9762\u662f\u5178\u578b\u7684\u4f8b\u5b50\uff1a 1\u3001instruction level: X86 cmpxchg 2\u3001OS level: Linux openat 3\u3001...... \u6211\u4eec\u5c06\u8fd9\u79cd\u601d\u8def\u79f0\u4e3a: \"assemble as atomic primitive\"\u3002","title":"Introduction"},{"location":"Post/Law/Nature/Atomic/#atomic","text":"","title":"Atomic"},{"location":"Post/Law/Nature/Atomic/#what#is#atomicatomicity","text":"","title":"What is atomic/atomicity?"},{"location":"Post/Law/Nature/Atomic/#_1","text":"\"atomic/atomicity\"\uff0c\"atomicity\"\u5373\"\u539f\u5b50\u6027\"\uff0c\u5b83\u501f\u7528\u4e86\u7269\u7406\u5b66\u4e2d\" atom(\u539f\u5b50) \"\u7684\u6982\u5ff5: An atom is the smallest unit of ordinary matter that forms a chemical element . \u610f\u5473\u7740\u6700\u5c0funit\uff0c\u662f\u4e0d\u53ef\u5206\u5272\u7684\u3002 \u5728\u4e0d\u540c\u7684\u5c42\u7ea7\u90fd\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u6982\u5ff5\uff0c\u63d0\u4f9batomic primitive/interface\uff0c\u6bd4\u5982: 1\u3001instruction level: X86 cmpxchg 2\u3001OS level: Linux openat","title":"\u76f4\u89c2\u7406\u89e3"},{"location":"Post/Law/Nature/Atomic/#formal#definition","text":"\u5173\u4e8eatomic\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff0c\u53c2\u89c1\u5de5\u7a0bparallel-computing\u7684\u76f8\u5173\u7ae0\u8282\u3002","title":"Formal definition"},{"location":"Post/Law/Nature/Atomic/#atomic#primitiveinterface","text":"1\u3001Instruction \u5c42\uff1a instruction\u5c31\u662fatomic\u7684 2\u3001OS level: Linux openat 3\u3001Application\u5c42\uff0c\u4e5f\u6709atomic\u7684\u6982\u5ff5\uff0c\u4e5f\u53ef\u4ee5\u5b9e\u73b0atomic cppreference Atomic operations library","title":"Atomic primitive/interface"},{"location":"Post/Law/Nature/Atomic/#atomic#and#unit","text":"\u4e00\u822c\u6700\u5c0funit\u662fAtomic \uff0c\u5173\u4e8eunit\uff0c\u53c2\u89c1\u6587\u7ae0\u300aUnit\u300b\u3002","title":"Atomic and unit"},{"location":"Post/Law/Nature/Atomic/#_2","text":"","title":"\u5b9e\u73b0\u601d\u8def"},{"location":"Post/Law/Nature/Atomic/#bottom-up#analysis","text":"\u4ece\u6700\u6700\u5e95\u5c42(nstruction \u5c42)\u5f00\u59cb\uff0c\u81ea\u5e95\u5411\u4e0a\u8fdb\u884c\u5206\u6790\uff0c\u663e\u7136\u5982\u679c\u5e95\u5c42\u80fd\u591f\u4fdd\u8bc1atomic\uff0c\u90a3\u4e48\u80fd\u591f\u4e3a\u9ad8\u5c42\u5b9e\u73b0atomic\u63d0\u4f9b\u8f83\u597d\u7684\u652f\u6301\uff0c\u4e0b\u9762\u662f\u4e00\u4e9blevel: 1\u3001Instruction level 2\u3001OS level 3\u3001Application level","title":"Bottom-up analysis"},{"location":"Post/Law/Nature/Atomic/#assemble#as#atomic#primitive","text":"\u5728\u7cfb\u7edf\u5c42\u8fdb\u884c\u96c6\u6210: \u5c06\u591a\u4e2a\u64cd\u4f5c\u5728\u7cfb\u7edf\u5c42/\u5b9e\u73b0\u5c42\u8fdb\u884c\u96c6\u6210\uff0c\u63d0\u4f9b\u539f\u5b50\u7279\u6027\u7684\u63a5\u53e3\uff0c\u4ece\u800c\u8fbe\u5230\u539f\u5b50\u6027\u7684\u76ee\u7684\uff0c\u4e0b\u9762\u662f\u5178\u578b\u7684\u4f8b\u5b50\uff1a 1\u3001instruction level: X86 cmpxchg 2\u3001OS level: Linux openat 3\u3001...... \u6211\u4eec\u5c06\u8fd9\u79cd\u601d\u8def\u79f0\u4e3a: \"assemble as atomic primitive\"\u3002","title":"Assemble as atomic primitive"},{"location":"Post/Law/Nature/Transaction/","text":"Transaction Transaction\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u62bd\u8c61\u3002 TODO: \u9700\u8981\u6dfb\u52a0data insensitive system book\u4e2d\u7684\u89c2\u70b9 wikipedia Transaction Computing Transaction processing , information processing that is divided into individual, indivisible operations Database transaction , a unit of work performed within a database management system Atomic transaction , a series of database operations such that either all occur, or nothing occurs wikipedia Transaction processing Transaction processing is information processing in computer science that is divided into individual, indivisible operations called transactions . Each transaction must succeed or fail as a complete unit; it can never be only partially complete. NOTE: \u4e0a\u8ff0\u5bf9transaction\u7684\u89e3\u91ca\u662f\u6bd4\u8f83\u597d\u7684\u3002 all-or-nothing Application Transactional memory Transactional file Database transaction \u8fd9\u662f\u6211\u4eec\u6700\u6700\u719f\u6089\u7684\u3002 Draft transaction\uff1a application\u5c42\u7684atomic \u7ef4\u57fa\u767e\u79d1 Transaction \u7ef4\u57fa\u767e\u79d1 Atomicity (database systems) \u7ef4\u57fa\u767e\u79d1 Transaction processing","title":"Introduction"},{"location":"Post/Law/Nature/Transaction/#transaction","text":"Transaction\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u62bd\u8c61\u3002 TODO: \u9700\u8981\u6dfb\u52a0data insensitive system book\u4e2d\u7684\u89c2\u70b9","title":"Transaction"},{"location":"Post/Law/Nature/Transaction/#wikipedia#transaction","text":"Computing Transaction processing , information processing that is divided into individual, indivisible operations Database transaction , a unit of work performed within a database management system Atomic transaction , a series of database operations such that either all occur, or nothing occurs","title":"wikipedia Transaction"},{"location":"Post/Law/Nature/Transaction/#wikipedia#transaction#processing","text":"Transaction processing is information processing in computer science that is divided into individual, indivisible operations called transactions . Each transaction must succeed or fail as a complete unit; it can never be only partially complete. NOTE: \u4e0a\u8ff0\u5bf9transaction\u7684\u89e3\u91ca\u662f\u6bd4\u8f83\u597d\u7684\u3002 all-or-nothing","title":"wikipedia Transaction processing"},{"location":"Post/Law/Nature/Transaction/#application","text":"","title":"Application"},{"location":"Post/Law/Nature/Transaction/#transactional#memory","text":"","title":"Transactional memory"},{"location":"Post/Law/Nature/Transaction/#transactional#file","text":"","title":"Transactional file"},{"location":"Post/Law/Nature/Transaction/#database#transaction","text":"\u8fd9\u662f\u6211\u4eec\u6700\u6700\u719f\u6089\u7684\u3002","title":"Database transaction"},{"location":"Post/Law/Nature/Transaction/#draft","text":"transaction\uff1a application\u5c42\u7684atomic \u7ef4\u57fa\u767e\u79d1 Transaction \u7ef4\u57fa\u767e\u79d1 Atomicity (database systems) \u7ef4\u57fa\u767e\u79d1 Transaction processing","title":"Draft"},{"location":"Post/Law/Opposite/","text":"Opposite \u5728software engineering\u4e2d\uff0c\u5b58\u5728\u5982\u4e0b\u76f8\u53cd\u7684\u4e24\u79cd\u9009\u62e9\u3002 Active and passive \u53c2\u89c1\u5de5\u7a0bparallel-computing\u7684 Active-and-passive Lazy and eager \u53c2\u89c1 Lazy-and-eager \u7ae0\u8282 Explicit and implicit \u6682\u65f6\u6ca1\u6709\u603b\u7ed3\u3002","title":"Introduction"},{"location":"Post/Law/Opposite/#opposite","text":"\u5728software engineering\u4e2d\uff0c\u5b58\u5728\u5982\u4e0b\u76f8\u53cd\u7684\u4e24\u79cd\u9009\u62e9\u3002","title":"Opposite"},{"location":"Post/Law/Opposite/#active#and#passive","text":"\u53c2\u89c1\u5de5\u7a0bparallel-computing\u7684 Active-and-passive","title":"Active and passive"},{"location":"Post/Law/Opposite/#lazy#and#eager","text":"\u53c2\u89c1 Lazy-and-eager \u7ae0\u8282","title":"Lazy and eager"},{"location":"Post/Law/Opposite/#explicit#and#implicit","text":"\u6682\u65f6\u6ca1\u6709\u603b\u7ed3\u3002","title":"Explicit and implicit"},{"location":"Post/Law/Opposite/Lazy-and-eager/","text":"Lazy and eager \u5728software engineering\u4e2d\uff0c\u8fd9\u662f\u975e\u5e38\u5e38\u89c1\u7684\uff0c\u6bd4\u5982: 1\u3001Evaluation strategies: Eager evaluation Lazy evaluation 2\u3001 design pattern eager loading Lazy loading 3\u3001initialization Lazy initialization Lazy Lazy load \u6709\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e00\u6b21\u6027\u7684\u5c06\u6240\u6709\u8d44\u6e90\u5bfc\u5165\u5185\u5b58\uff0c\u5982\u679c\u8d44\u6e90\u8f83\u591a\uff0c\u5219\u53ef\u80fd\u5bfc\u81f4\u6574\u4e2a\u8fc7\u7a0b\u8017\u65f6\u8f83\u957f\uff0c\u8fd9\u6837\u505a\u6709\u5982\u4e0b\u5f0a\u7aef\uff1a \u9020\u6210\u7528\u6237\u9700\u8981\u8f83\u957f\u7684\u7b49\u5f85\u65f6\u95f4 \u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u6709\u7684\u65f6\u5019\u53ea\u9700\u8981\u6d4b\u8bd5\u4e00\u4e2a\u5c0f\u7684\u6a21\u5757\uff0c\u538b\u6839\u5c31\u65e0\u9700\u52a0\u8f7d\u6574\u4e2a\u8d44\u6e90\uff0c\u8fd9\u5c31\u9020\u6210\u4e86\u65f6\u95f4\u7684\u6d6a\u8d39 \u5982\u679c\u80fd\u591fload-on-need\uff0c\u5373\u53ea\u5728\u9700\u8981\u7684\u65f6\u5019\u624d\u8fdb\u884c\u52a0\u8f7d\uff0c\u5219\u5c06\u4e00\u6b21\u6027\u8f83\u957f\u65f6\u95f4\u7684\u52a0\u8f7d\u5206\u644a\u5230\u4e86\u591a\u6b21\u4e2d\uff0c\u5219\u6574\u4f53\u7684\u4f53\u9a8c\u4f1a\u66f4\u597d\u4e00\u4e9b\uff0c\u4e5f\u66f4\u52a0\u8282\u7701\u65f6\u95f4\u4e00\u4e9b\u3002 Example 1\u3001Python lazy load module 2\u3001 Lazy evaluation 3\u3001Python generator python generator\u662f\u5178\u578b\u7684lazy evaluation\u3002 4\u3001Copy-on-write \u53c2\u89c1\u7ef4\u57fa\u767e\u79d1 Copy-on-write \u3002 Eager Example 1\u3001Tensorflow eager","title":"Introduction"},{"location":"Post/Law/Opposite/Lazy-and-eager/#lazy#and#eager","text":"\u5728software engineering\u4e2d\uff0c\u8fd9\u662f\u975e\u5e38\u5e38\u89c1\u7684\uff0c\u6bd4\u5982: 1\u3001Evaluation strategies: Eager evaluation Lazy evaluation 2\u3001 design pattern eager loading Lazy loading 3\u3001initialization Lazy initialization","title":"Lazy and eager"},{"location":"Post/Law/Opposite/Lazy-and-eager/#lazy","text":"","title":"Lazy"},{"location":"Post/Law/Opposite/Lazy-and-eager/#lazy#load","text":"\u6709\u7684\u65f6\u5019\uff0c\u5982\u679c\u4e00\u6b21\u6027\u7684\u5c06\u6240\u6709\u8d44\u6e90\u5bfc\u5165\u5185\u5b58\uff0c\u5982\u679c\u8d44\u6e90\u8f83\u591a\uff0c\u5219\u53ef\u80fd\u5bfc\u81f4\u6574\u4e2a\u8fc7\u7a0b\u8017\u65f6\u8f83\u957f\uff0c\u8fd9\u6837\u505a\u6709\u5982\u4e0b\u5f0a\u7aef\uff1a \u9020\u6210\u7528\u6237\u9700\u8981\u8f83\u957f\u7684\u7b49\u5f85\u65f6\u95f4 \u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u6709\u7684\u65f6\u5019\u53ea\u9700\u8981\u6d4b\u8bd5\u4e00\u4e2a\u5c0f\u7684\u6a21\u5757\uff0c\u538b\u6839\u5c31\u65e0\u9700\u52a0\u8f7d\u6574\u4e2a\u8d44\u6e90\uff0c\u8fd9\u5c31\u9020\u6210\u4e86\u65f6\u95f4\u7684\u6d6a\u8d39 \u5982\u679c\u80fd\u591fload-on-need\uff0c\u5373\u53ea\u5728\u9700\u8981\u7684\u65f6\u5019\u624d\u8fdb\u884c\u52a0\u8f7d\uff0c\u5219\u5c06\u4e00\u6b21\u6027\u8f83\u957f\u65f6\u95f4\u7684\u52a0\u8f7d\u5206\u644a\u5230\u4e86\u591a\u6b21\u4e2d\uff0c\u5219\u6574\u4f53\u7684\u4f53\u9a8c\u4f1a\u66f4\u597d\u4e00\u4e9b\uff0c\u4e5f\u66f4\u52a0\u8282\u7701\u65f6\u95f4\u4e00\u4e9b\u3002","title":"Lazy load"},{"location":"Post/Law/Opposite/Lazy-and-eager/#example","text":"1\u3001Python lazy load module 2\u3001 Lazy evaluation 3\u3001Python generator python generator\u662f\u5178\u578b\u7684lazy evaluation\u3002 4\u3001Copy-on-write \u53c2\u89c1\u7ef4\u57fa\u767e\u79d1 Copy-on-write \u3002","title":"Example"},{"location":"Post/Law/Opposite/Lazy-and-eager/#eager","text":"","title":"Eager"},{"location":"Post/Law/Opposite/Lazy-and-eager/#example_1","text":"1\u3001Tensorflow eager","title":"Example"},{"location":"Post/Law/Optimization-principle/","text":"Optimization principle \u6700\u4f18\u5316\u539f\u5219\u3002 \u8fd9\u662fcomputer science\u5404\u4e2a\u9886\u57df\u4e2d\u90fd\u9075\u5faa\u7684\u4e00\u4e2aprinciple\u3002","title":"Introduction"},{"location":"Post/Law/Optimization-principle/#optimization#principle","text":"\u6700\u4f18\u5316\u539f\u5219\u3002 \u8fd9\u662fcomputer science\u5404\u4e2a\u9886\u57df\u4e2d\u90fd\u9075\u5faa\u7684\u4e00\u4e2aprinciple\u3002","title":"Optimization principle"},{"location":"Post/Law/Software-and-hardware/","text":"Software and hardware \u5c06\u5b83\u7684tag\u5b9a\u4e49\u4e3a: tag-hardware and software-Andy and Bill's law \u8c01\u4fc3\u8fdb\u8c01\uff1f Q: \u662fhardware\u4fc3\u8fdbsoftware\u7684\u53d1\u5c55\u8fd8\u662fsoftware\u4fc3\u8fdbhardware\u7684\u53d1\u5c55\uff1f\u5e94\u8be5\u662fsoftware\u4fc3\u8fdbhardware\u7684\u53d1\u5c55? A: \u5e94\u8be5\u4e3b\u8981\u662fsoftware\u4fc3\u8fdbhardware\u7684\u53d1\u5c55\uff0cexample: 1 \u4ee5Linux OS book\u4e2d\u7684\u89c2\u70b9\u4e3a\u4f8b\u6765\u8fdb\u884c\u8bf4\u660e\uff0cOS\u662fCPU\u7684\u5ba2\u6237 Andy-bill's law software\u9700\u8981\u5145\u5206\u8fd0\u7528hardware\u7684\u7279\u6027\u4ee5\u63d0\u9ad8\u81ea\u8eab\u7684\u6027\u80fd\uff1bsoftware\u523a\u6fc0\u7740hardware\u7684\u4e0d\u65ad\u63d0\u9ad8\uff0c\u5176\u5b9e\u8fd9\u662f\u5c31\u662fAndy-bill's law\uff0cAndy\u4ee3\u8868\u7740hardware\uff0cbill\u4ee3\u8868\u7740software example 1 likely and unlikely Bottom-up analysis(\u81ea\u5e95\u5411\u4e0a\u5206\u6790): from hardware to software \u5bf9\u4e8e\u5728software development\u4e2d\u9047\u5230\u7684\u5f88\u591a\u95ee\u9898\uff0c\u4ee5\u81ea\u5e95\u5411\u4e0a\uff0c\u4ecehardware\u5230software\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u5206\u6790\uff0c\u80fd\u591f\u8ba9\u6211\u4eec\u4ece\u6839\u672c\u4e0a\u627e\u51fa\u95ee\u9898\u7684\u539f\u56e0\u548c\u89e3\u51b3\u65b9\u6cd5\uff1b \u8fd9\u8ba9\u6211\u60f3\u5230\u4e86 \u6d6a\u6f6e\u4e4b\u5dc5 \u4e2d\u7684 \u5b89\u8fea-\u6bd4\u5c14\u5b9a\u5f8b https://site.douban.com/189688/widget/notes/11229948/note/251703757/ \uff0c\u663e\u7136 \u5b89\u8fea-\u6bd4\u5c14\u5b9a\u5f8b \u7684\u63cf\u8ff0\u662f\u66f4\u52a0\u7cbe\u51c6 \u3002 Level Instruction level OS level Application level NOTE: \u9700\u8981\u5c06 Software-design\\Design-pattern\\Architecture-pattern\\Multilayered-architecture \u4e2d\u7684\u5185\u5bb9\u7ed3\u5408\u8d77\u6765 Example Atomic \u53c2\u89c1\u6587\u7ae0\u300aAtomic\u300b Atomic and thread safe \u4eceinstruction \u5c42\u6765\u5206\u6790thread safe Parallel computing and concurrent computing Multicore->parallel computing\u3001concurrent computing parallel computing\u3001concurrent computing\u7684\u5174\u8d77\u7684\u80cc\u540e\u63a8\u529b: 1\u3001CPU\u8d85Multicore\u65b9\u5411\u53d1\u5c55 2\u3001network\u8d8a\u6765\u8d8a\u5f3a\u5927 likely/unlikely \u8ba9\u6211\u60f3\u5230\u8fd9\u4e2a\u7684\u662f: likely/unlikely->branch prediction->CPU Speculative execution","title":"Introduction"},{"location":"Post/Law/Software-and-hardware/#software#and#hardware","text":"\u5c06\u5b83\u7684tag\u5b9a\u4e49\u4e3a: tag-hardware and software-Andy and Bill's law","title":"Software and hardware"},{"location":"Post/Law/Software-and-hardware/#_1","text":"Q: \u662fhardware\u4fc3\u8fdbsoftware\u7684\u53d1\u5c55\u8fd8\u662fsoftware\u4fc3\u8fdbhardware\u7684\u53d1\u5c55\uff1f\u5e94\u8be5\u662fsoftware\u4fc3\u8fdbhardware\u7684\u53d1\u5c55? A: \u5e94\u8be5\u4e3b\u8981\u662fsoftware\u4fc3\u8fdbhardware\u7684\u53d1\u5c55\uff0cexample: 1 \u4ee5Linux OS book\u4e2d\u7684\u89c2\u70b9\u4e3a\u4f8b\u6765\u8fdb\u884c\u8bf4\u660e\uff0cOS\u662fCPU\u7684\u5ba2\u6237","title":"\u8c01\u4fc3\u8fdb\u8c01\uff1f"},{"location":"Post/Law/Software-and-hardware/#andy-bills#law","text":"software\u9700\u8981\u5145\u5206\u8fd0\u7528hardware\u7684\u7279\u6027\u4ee5\u63d0\u9ad8\u81ea\u8eab\u7684\u6027\u80fd\uff1bsoftware\u523a\u6fc0\u7740hardware\u7684\u4e0d\u65ad\u63d0\u9ad8\uff0c\u5176\u5b9e\u8fd9\u662f\u5c31\u662fAndy-bill's law\uff0cAndy\u4ee3\u8868\u7740hardware\uff0cbill\u4ee3\u8868\u7740software","title":"Andy-bill's law"},{"location":"Post/Law/Software-and-hardware/#example","text":"1 likely and unlikely","title":"example"},{"location":"Post/Law/Software-and-hardware/#bottom-up#analysis#from#hardware#to#software","text":"\u5bf9\u4e8e\u5728software development\u4e2d\u9047\u5230\u7684\u5f88\u591a\u95ee\u9898\uff0c\u4ee5\u81ea\u5e95\u5411\u4e0a\uff0c\u4ecehardware\u5230software\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u5206\u6790\uff0c\u80fd\u591f\u8ba9\u6211\u4eec\u4ece\u6839\u672c\u4e0a\u627e\u51fa\u95ee\u9898\u7684\u539f\u56e0\u548c\u89e3\u51b3\u65b9\u6cd5\uff1b \u8fd9\u8ba9\u6211\u60f3\u5230\u4e86 \u6d6a\u6f6e\u4e4b\u5dc5 \u4e2d\u7684 \u5b89\u8fea-\u6bd4\u5c14\u5b9a\u5f8b https://site.douban.com/189688/widget/notes/11229948/note/251703757/ \uff0c\u663e\u7136 \u5b89\u8fea-\u6bd4\u5c14\u5b9a\u5f8b \u7684\u63cf\u8ff0\u662f\u66f4\u52a0\u7cbe\u51c6 \u3002","title":"Bottom-up analysis(\u81ea\u5e95\u5411\u4e0a\u5206\u6790): from hardware to software"},{"location":"Post/Law/Software-and-hardware/#level","text":"Instruction level OS level Application level NOTE: \u9700\u8981\u5c06 Software-design\\Design-pattern\\Architecture-pattern\\Multilayered-architecture \u4e2d\u7684\u5185\u5bb9\u7ed3\u5408\u8d77\u6765","title":"Level"},{"location":"Post/Law/Software-and-hardware/#example_1","text":"","title":"Example"},{"location":"Post/Law/Software-and-hardware/#atomic","text":"\u53c2\u89c1\u6587\u7ae0\u300aAtomic\u300b","title":"Atomic"},{"location":"Post/Law/Software-and-hardware/#atomic#and#thread#safe","text":"\u4eceinstruction \u5c42\u6765\u5206\u6790thread safe","title":"Atomic and thread safe"},{"location":"Post/Law/Software-and-hardware/#parallel#computing#and#concurrent#computing","text":"Multicore->parallel computing\u3001concurrent computing parallel computing\u3001concurrent computing\u7684\u5174\u8d77\u7684\u80cc\u540e\u63a8\u529b: 1\u3001CPU\u8d85Multicore\u65b9\u5411\u53d1\u5c55 2\u3001network\u8d8a\u6765\u8d8a\u5f3a\u5927","title":"Parallel computing and concurrent computing"},{"location":"Post/Law/Software-and-hardware/#likelyunlikely","text":"\u8ba9\u6211\u60f3\u5230\u8fd9\u4e2a\u7684\u662f: likely/unlikely->branch prediction->CPU Speculative execution","title":"likely/unlikely"},{"location":"Post/Law/Software-and-hardware/Andy-and-Bill%27s-law/","text":"Andy and Bill's law \u662f\u5728\u9605\u8bfb\u5434\u519b\u535a\u58eb\u7684\u300a\u6d6a\u6f6e\u4e4b\u5dc5\u300b\u65f6\uff0c\u53d1\u73b0\u5176\u4e2d\u63d0\u51fa\u7684\uff0c\u6211\u89c9\u5f97\u5b83\u975e\u5e38\u597d\u7684\u603b\u7ed3\u4e86software\u548chardware\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 wikipedia Andy and Bill's law douban \u300a\u6d6a\u6f6e\u4e4b\u5dc5\u300b\u5404\u79cd\u5b9a\u5f8b","title":"Andy-and-Bill's-law"},{"location":"Post/Law/Software-and-hardware/Andy-and-Bill%27s-law/#andy#and#bills#law","text":"\u662f\u5728\u9605\u8bfb\u5434\u519b\u535a\u58eb\u7684\u300a\u6d6a\u6f6e\u4e4b\u5dc5\u300b\u65f6\uff0c\u53d1\u73b0\u5176\u4e2d\u63d0\u51fa\u7684\uff0c\u6211\u89c9\u5f97\u5b83\u975e\u5e38\u597d\u7684\u603b\u7ed3\u4e86software\u548chardware\u4e4b\u95f4\u7684\u5173\u7cfb\u3002","title":"Andy and Bill's law"},{"location":"Post/Law/Software-and-hardware/Andy-and-Bill%27s-law/#wikipedia#andy#and#bills#law","text":"","title":"wikipedia Andy and Bill's law"},{"location":"Post/Law/Software-and-hardware/Andy-and-Bill%27s-law/#douban","text":"","title":"douban \u300a\u6d6a\u6f6e\u4e4b\u5dc5\u300b\u5404\u79cd\u5b9a\u5f8b"},{"location":"Post/Law/Standard-and-implementation/","text":"Standard and implementation Thread (computing) \u548c Process (computing) \u662fsoftware engineer\u975e\u5e38\u719f\u7cfb\u7684\u6982\u5ff5\uff0c\u5b83\u4eec\u662f\u6807\u51c6\u6240\u5b9a\u4e49\u7684\u4e24\u4e2a\u6982\u5ff5\uff0c\u6709\u7740\u51c6\u786e\u7684\u542b\u4e49\uff0c\u4e24\u8005\u4e4b\u95f4\u7684\u5173\u7cfb\u4e5f\u662f\u975e\u5e38\u6e05\u695a\u7684\u3002\u6309\u7167\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u53d1\u5c55\u6d41\u7a0b\u6765\u770b\uff0c\u5e94\u8be5\u662f\u9996\u5148\u6709\u8ba1\u7b97\u673a\u7406\u8bba\u5b66\u5bb6\u63d0\u51fa\u4e86\u8fd9\u4e9b\u6982\u5ff5/\u6807\u51c6\uff0c\u7136\u540e\u64cd\u4f5c\u7cfb\u7edf\u5382\u5546\u518d\u5b9e\u73b0\u8fd9\u4e9b\u6982\u5ff5/\u6807\u51c6\u3002\u6240\u4ee5\u4ece\u6807\u51c6\u7684\u51fa\u73b0\u5230\u64cd\u4f5c\u7cfb\u7edf\u5382\u5546\u5b9e\u73b0\u8fd9\u4e9b\u6807\u51c6\uff0c\u4e24\u8005\u4e4b\u95f4\u662f\u6709\u4e00\u4e2a\u65f6\u95f4\u95f4\u9694\u7684\u3002\u4e0d\u540c\u5382\u5546\u7684\u5bf9\u540c\u4e00\u6982\u5ff5/\u6807\u51c6\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e5f\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e5f\u4f1a\u4e0d\u65ad\u5730\u6f14\u8fdb\u3002\u6240\u4ee5\u5728\u5f00\u59cb\u8fdb\u5165\u5230\u672c\u4e66\u7684\u5185\u5bb9\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u9996\u5148\u5efa\u7acb\u5982\u4e0b\u89c2\u5ff5\uff1a \u6807\u51c6\u4e0e\u5b9e\u73b0\u4e4b\u95f4\u7684\u5173\u7cfb \u4ee5\u53d1\u5c55\u7684\u773c\u5149\u6765\u770b\u5f85\u8f6f\u4ef6\u7684\u6f14\u8fdb \u4e0b\u9762\u4ee5operating system\u5982\u4f55\u6765\u5b9e\u73b0 Thread (computing) \u4e3a\u4f8b\u6765\u8fdb\u884c\u8bf4\u660e\uff0c\u76ee\u524d\u5b58\u5728\u7740\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1a user level thread\uff0c\u5e38\u79f0\u4e3auser thread kernel level thread \u4e24\u8005\u4e4b\u95f4\u7684\u5dee\u5f02\u53ef\u4ee5\u53c2\u89c1\u5982\u4e0b\u6587\u7ae0\uff1a https://www.geeksforgeeks.org/difference-between-user-level-thread-and-kernel-level-thread/ What is a user thread and a kernel thread? \u663e\u7136\uff0c\u5bf9\u4e8e\u6807\u51c6\u6240\u63d0\u51fa\u7684 Thread (computing) \uff0c\u53ef\u4ee5\u6709\u591a\u79cd\u5b9e\u73b0\u65b9\u5f0f\u3002\u5173\u4e8e\u6b64\uff0c\u7ef4\u57fa\u767e\u79d1\u7684 Thread (computing) \u6709\u7740\u975e\u5e38\u597d\u7684\u603b\u7ed3\u3002","title":"Introduction"},{"location":"Post/Law/Standard-and-implementation/#standard#and#implementation","text":"Thread (computing) \u548c Process (computing) \u662fsoftware engineer\u975e\u5e38\u719f\u7cfb\u7684\u6982\u5ff5\uff0c\u5b83\u4eec\u662f\u6807\u51c6\u6240\u5b9a\u4e49\u7684\u4e24\u4e2a\u6982\u5ff5\uff0c\u6709\u7740\u51c6\u786e\u7684\u542b\u4e49\uff0c\u4e24\u8005\u4e4b\u95f4\u7684\u5173\u7cfb\u4e5f\u662f\u975e\u5e38\u6e05\u695a\u7684\u3002\u6309\u7167\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u53d1\u5c55\u6d41\u7a0b\u6765\u770b\uff0c\u5e94\u8be5\u662f\u9996\u5148\u6709\u8ba1\u7b97\u673a\u7406\u8bba\u5b66\u5bb6\u63d0\u51fa\u4e86\u8fd9\u4e9b\u6982\u5ff5/\u6807\u51c6\uff0c\u7136\u540e\u64cd\u4f5c\u7cfb\u7edf\u5382\u5546\u518d\u5b9e\u73b0\u8fd9\u4e9b\u6982\u5ff5/\u6807\u51c6\u3002\u6240\u4ee5\u4ece\u6807\u51c6\u7684\u51fa\u73b0\u5230\u64cd\u4f5c\u7cfb\u7edf\u5382\u5546\u5b9e\u73b0\u8fd9\u4e9b\u6807\u51c6\uff0c\u4e24\u8005\u4e4b\u95f4\u662f\u6709\u4e00\u4e2a\u65f6\u95f4\u95f4\u9694\u7684\u3002\u4e0d\u540c\u5382\u5546\u7684\u5bf9\u540c\u4e00\u6982\u5ff5/\u6807\u51c6\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e5f\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e5f\u4f1a\u4e0d\u65ad\u5730\u6f14\u8fdb\u3002\u6240\u4ee5\u5728\u5f00\u59cb\u8fdb\u5165\u5230\u672c\u4e66\u7684\u5185\u5bb9\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u9996\u5148\u5efa\u7acb\u5982\u4e0b\u89c2\u5ff5\uff1a \u6807\u51c6\u4e0e\u5b9e\u73b0\u4e4b\u95f4\u7684\u5173\u7cfb \u4ee5\u53d1\u5c55\u7684\u773c\u5149\u6765\u770b\u5f85\u8f6f\u4ef6\u7684\u6f14\u8fdb \u4e0b\u9762\u4ee5operating system\u5982\u4f55\u6765\u5b9e\u73b0 Thread (computing) \u4e3a\u4f8b\u6765\u8fdb\u884c\u8bf4\u660e\uff0c\u76ee\u524d\u5b58\u5728\u7740\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1a user level thread\uff0c\u5e38\u79f0\u4e3auser thread kernel level thread \u4e24\u8005\u4e4b\u95f4\u7684\u5dee\u5f02\u53ef\u4ee5\u53c2\u89c1\u5982\u4e0b\u6587\u7ae0\uff1a https://www.geeksforgeeks.org/difference-between-user-level-thread-and-kernel-level-thread/ What is a user thread and a kernel thread? \u663e\u7136\uff0c\u5bf9\u4e8e\u6807\u51c6\u6240\u63d0\u51fa\u7684 Thread (computing) \uff0c\u53ef\u4ee5\u6709\u591a\u79cd\u5b9e\u73b0\u65b9\u5f0f\u3002\u5173\u4e8e\u6b64\uff0c\u7ef4\u57fa\u767e\u79d1\u7684 Thread (computing) \u6709\u7740\u975e\u5e38\u597d\u7684\u603b\u7ed3\u3002","title":"Standard and implementation"},{"location":"Post/Law/Time-and-space/","text":"time and space time and space\uff0c \u65f6\u4e0e\u7a7a\u3002 \u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u65f6\u7a7a \u7b97\u6cd5\u7684\u65f6\u7a7a\u5206\u6790 CPU\u7684\u65f6\u949f OS\u7684\u65f6\u949f \u7cfb\u7edf\u7684\u65f6\u949f\u5c31\u76f8\u5f53\u4e8e\u7cfb\u7edf\u7684heartbeat\u3002 version control\uff1a\u8bb0\u5f55\u5386\u53f2 \u4eceCPU\u7684\u63a7\u5236\u5668\u5230OS\u7684TimerEvent\u6765\u8c03\u5ea6Task\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2dTimer\u7684\u91cd\u8981\u4ef7\u503c\u3002 \u7cfb\u7edf\u7684\u5fc3\u8df3\u3002 \u8fdb\u7a0b\u6240\u5360\u7528\u7684\u8d44\u6e90\u53ef\u4ee5\u770b\u505a\u662f\u5360\u7528\u4e00\u5b9a\u7684\u7a7a\u95f4 system call with timeout linux OS\u7684\u975e\u5e38\u591a\u7684system call\u90fd\u652f\u6301\u7531\u7528\u6237\u8bbe\u7f6etime\u3002","title":"Introduction"},{"location":"Post/Law/Time-and-space/#time#and#space","text":"time and space\uff0c \u65f6\u4e0e\u7a7a\u3002","title":"time and space"},{"location":"Post/Law/Time-and-space/#_1","text":"\u7b97\u6cd5\u7684\u65f6\u7a7a\u5206\u6790 CPU\u7684\u65f6\u949f OS\u7684\u65f6\u949f \u7cfb\u7edf\u7684\u65f6\u949f\u5c31\u76f8\u5f53\u4e8e\u7cfb\u7edf\u7684heartbeat\u3002 version control\uff1a\u8bb0\u5f55\u5386\u53f2 \u4eceCPU\u7684\u63a7\u5236\u5668\u5230OS\u7684TimerEvent\u6765\u8c03\u5ea6Task\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e2dTimer\u7684\u91cd\u8981\u4ef7\u503c\u3002 \u7cfb\u7edf\u7684\u5fc3\u8df3\u3002","title":"\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u65f6\u7a7a"},{"location":"Post/Law/Time-and-space/#_2","text":"","title":"\u8fdb\u7a0b\u6240\u5360\u7528\u7684\u8d44\u6e90\u53ef\u4ee5\u770b\u505a\u662f\u5360\u7528\u4e00\u5b9a\u7684\u7a7a\u95f4"},{"location":"Post/Law/Time-and-space/#system#call#with#timeout","text":"linux OS\u7684\u975e\u5e38\u591a\u7684system call\u90fd\u652f\u6301\u7531\u7528\u6237\u8bbe\u7f6etime\u3002","title":"system call with timeout"},{"location":"Post/Law/Tradeoff/","text":"Tradeoff \u7d20\u6750: 1\u3001 Level-in-computer-science 2\u3001artima On the Tension Between Object-Oriented and Generic Programming in C++ Good engineering involves compromise at every turn. A good, working, finished product is never pure by the standards of any one idiom or methodology. The art of good engineering is not the art of discovering and applying the one right idiom over all others. The art of good engineering is to know what your options are, and then to choose your trade-offs wisely rather than letting others choose them for you. \u975e\u5e38\u7cbe\u5f69\u7684\u8bba\u8ff0\u3002 NOTE: \u7ffb\u8bd1\u5982\u4e0b: \"\u597d\u7684\u5de5\u7a0b\u8bbe\u8ba1\u9700\u8981\u5728\u6bcf\u4e00\u4e2a\u73af\u8282\u90fd\u505a\u51fa\u59a5\u534f\u3002 \u4e00\u4e2a\u597d\u7684\u3001\u53ef\u5de5\u4f5c\u7684\u3001\u6700\u7ec8\u7684\u4ea7\u54c1\uff0c\u4ece\u4efb\u4f55\u4e00\u4e2a\u4e60\u8bed\u6216\u65b9\u6cd5\u7684\u6807\u51c6\u6765\u770b\uff0c\u90fd\u4e0d\u662f\u7eaf\u7cb9\u7684\u3002 \u4f18\u79c0\u5de5\u7a0b\u7684\u827a\u672f\u5e76\u4e0d\u662f\u53d1\u73b0\u548c\u5e94\u7528\u4e00\u79cd\u6b63\u786e\u7684\u6210\u8bed\u80dc\u8fc7\u5176\u4ed6\u6240\u6709\u6210\u8bed\u7684\u827a\u672f\u3002 \u597d\u7684\u5de5\u7a0b\u7684\u827a\u672f\u662f\u77e5\u9053\u4f60\u6709\u54ea\u4e9b\u9009\u62e9\uff0c\u7136\u540e\u660e\u667a\u5730\u505a\u51fa\u6743\u8861\uff0c\u800c\u4e0d\u662f\u8ba9\u522b\u4eba\u66ff\u4f60\u9009\u62e9\u3002\"","title":"Introduction"},{"location":"Post/Law/Tradeoff/#tradeoff","text":"\u7d20\u6750: 1\u3001 Level-in-computer-science 2\u3001artima On the Tension Between Object-Oriented and Generic Programming in C++ Good engineering involves compromise at every turn. A good, working, finished product is never pure by the standards of any one idiom or methodology. The art of good engineering is not the art of discovering and applying the one right idiom over all others. The art of good engineering is to know what your options are, and then to choose your trade-offs wisely rather than letting others choose them for you. \u975e\u5e38\u7cbe\u5f69\u7684\u8bba\u8ff0\u3002 NOTE: \u7ffb\u8bd1\u5982\u4e0b: \"\u597d\u7684\u5de5\u7a0b\u8bbe\u8ba1\u9700\u8981\u5728\u6bcf\u4e00\u4e2a\u73af\u8282\u90fd\u505a\u51fa\u59a5\u534f\u3002 \u4e00\u4e2a\u597d\u7684\u3001\u53ef\u5de5\u4f5c\u7684\u3001\u6700\u7ec8\u7684\u4ea7\u54c1\uff0c\u4ece\u4efb\u4f55\u4e00\u4e2a\u4e60\u8bed\u6216\u65b9\u6cd5\u7684\u6807\u51c6\u6765\u770b\uff0c\u90fd\u4e0d\u662f\u7eaf\u7cb9\u7684\u3002 \u4f18\u79c0\u5de5\u7a0b\u7684\u827a\u672f\u5e76\u4e0d\u662f\u53d1\u73b0\u548c\u5e94\u7528\u4e00\u79cd\u6b63\u786e\u7684\u6210\u8bed\u80dc\u8fc7\u5176\u4ed6\u6240\u6709\u6210\u8bed\u7684\u827a\u672f\u3002 \u597d\u7684\u5de5\u7a0b\u7684\u827a\u672f\u662f\u77e5\u9053\u4f60\u6709\u54ea\u4e9b\u9009\u62e9\uff0c\u7136\u540e\u660e\u667a\u5730\u505a\u51fa\u6743\u8861\uff0c\u800c\u4e0d\u662f\u8ba9\u522b\u4eba\u66ff\u4f60\u9009\u62e9\u3002\"","title":"Tradeoff"},{"location":"Post/Law/Unit/","text":"Unit \"unit\"\u7684\u610f\u601d\u662f\u201c\u5355\u4f4d\u201d\uff0c\u672c\u6587\u5bf9\u5404\u79cdunit\u8fdb\u884c\u603b\u7ed3\u3002 Unit and atomic \u4e00\u822c\uff0c\u6700\u5c0f\u7684unit\u662fatomic\u7684\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u7684unit\u662f\u4e0d\u53ef\u5206\u7684\uff0c\u6ca1\u6709\u534a\u4e2a\u7684\u6982\u5ff5\u3002\u5173\u4e8eatomic\uff0c\u53c2\u89c1\u6587\u7ae0\u300aAtomic\u300b\u3002 \u5b83\u7684tag\u4e3atag-unit-and-atomic\uff1b Unit of user-defined action \u672c\u8282\u6807\u9898\u4e2d\u7684\u201cunit of user-defined action\u201d\u662f\u6211\u5728\u9605\u8bfb\u9f99\u4e66 Chapter 7.2 Stack Allocation of Space \u65f6\u9047\u5230\u7684\uff0c\u539f\u6587\u5982\u4e0b\uff1a Almost all compilers for languages that use procedures, functions, or methods as units of user-defined actions manage at least part of their run-time memory as a stack. \u201caction\u201d\u7684\u610f\u601d\u662f\u201c\u52a8\u4f5c\u201d\u3001\u201c\u8fd0\u884c\u201d\u3001\u201c\u6267\u884c\u201d\uff0c\u201cunit of user-defined action\u201d\u6240\u5f3a\u8c03\u7684\u662f\u8fd0\u884c\u3002\u53d7 \u5206\u5c42\u601d\u60f3 \u7684\u5f71\u54cd\uff0c\u6211\u5f00\u59cb\u4ece\u4e0d\u540c\u7684\u5c42\u6b21\u6765\u5bf9\u6bd4\u5206\u6790\uff0c\u4e0b\u9762\u603b\u7ed3\u4e86\u5404\u4e2a\u5c42\u6b21\u7684user-defined action\u3002 CPU\u7684unit of user-defined action CPU\u7684unit of user-defined action\u662f instruction \uff0c\u4e5f\u53ef\u4ee5\u8bf4CPU\u7684\u6267\u884c\u5355\u4f4d\u662f instruction \u3002\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u4e00\u822c\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528 instruction \uff0c\u5f80\u5f80\u662f\u7531compiler\u5c06\u9ad8\u7ea7\u8bed\u8a00\u7f16\u5199\u7684program\u7ffb\u8bd1\u4e3a\u5bf9\u5e94\u7684machine language\u7684program\u3002 Programming language\u7684unit of user-defined action Programming language\uff08\u90e8\u5206\uff09\u7684unit of user-defined action\u662fstatement\u3002 \u7ef4\u57fa\u767e\u79d1 Statement \uff1a In computer programming , a statement is a syntactic unit of an imperative programming language that expresses some action to be carried out. A program written in such a language is formed by a sequence of one or more statements. A statement may have internal components (e.g., expressions ). \u6211\u4eec\u5728\u8fdb\u884c\u7f16\u7a0b\u7684\u65f6\u5019\uff0c\u4f7f\u7528statement\u6765\u63cf\u8ff0\u7a0b\u5e8f\u7684\u8fd0\u884c\u903b\u8f91\uff0c\u663e\u7136programming language\u7684unit of user-defined action\u5c31\u662fstatement\u3002 \u7531\u7f16\u8bd1\u5668\u5c06statement\u7ffb\u8bd1\u4e3ainstruction\uff0c\u4e00\u4e2astatement\u53ef\u80fd\u5bf9\u5e94\u591a\u6761instruction\u3002 Process/thread\u7684unit of user-defined action \u73b0\u4ee3OS\u4e2d\uff0cthread\u662f\u8c03\u5ea6\u5355\u4f4d\uff0c\u5982\u679c\u4e0d\u8fdb\u884cmulti-thread programming\u7684\u8bdd\uff0c\u5219process\u53ea\u6709\u4e00\u4e2athread\uff0c\u6240\u4ee5\u6807\u9898\u4e2d\u4e5f\u5305\u542b\u4e86process\u548cthread\uff08\u5173\u4e8e\u6b64\uff0c\u53c2\u89c1\u5de5\u7a0b Linux-OS \u7684\u6587\u7ae0 Process model \uff09\u3002 Thread\u7684unit of user-defined **action**\u662f\u4ec0\u4e48\uff1f\u8bfb\u8005\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u6211\u4eec\u8be2\u95ee\u8fd9\u4e2a\u95ee\u9898\u7684\u65f6\u5019\uff0c\u6211\u4eec\u662f\u7ad9\u5728Process\u5c42\uff0c\u800c\u4e0d\u662f\u7ad9\u5728CPU\u5c42\uff0c\u6240\u4ee5\u7b54\u6848\u80af\u5b9a\u662f\u6bd4instruction\u66f4\u52a0\u5927\uff08\u6216\u8005\u8bf4\u662f\u201c\u9ad8\u7ea7\u201d\uff09\u7684\u4e00\u4e2aunit\uff08\u5355\u4f4d\uff09\u3002\u5176\u5b9e\u8bfb\u8005\u5373\u4f7f\u56de\u5230\u7684\u662finstruction\uff0c\u4e5f\u4e0d\u80fd\u5224\u5b9a\u4f60\u662f\u9519\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u7a0b\u5e8f\u6700\u7ec8\u80af\u5b9a\u662f\u9700\u8981\u88ab\u7f16\u7a0b\u6210machine language program\u624d\u80fd\u591f\u7531CPU\u6765\u6267\u884c\uff0c\u4f46\u662f\u663e\u7136\u8fd9\u4e2a\u7b54\u6848\u4e0d\u662f\u6700\u51c6\u786e\u7684\u3002 \u7b54\u6848\u662f\uff1a \u51fd\u6570 \u3002 \u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u5176\u5b9e\u5728\u672c\u8282\u6807\u9898\u4e2d\u5df2\u7ecf\u7ed9\u51fa\u4e86\u3002 \u5bf9\u4e8e\u8fd9\u4e2a\u7b54\u6848\u662f\u4e0d\u9700\u8981\u8fdb\u884c\u4e13\u4e1a\u3001\u6df1\u5165\u7684\u89e3\u91ca\uff0c\u56e0\u4e3a\u8fd9\u662f\u89c4\u5b9a\uff0c\u8fd9\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u53d1\u5c55\u591a\u5e74\u5f62\u6210\u7684\u4e8b\u5b9e\uff0c\u5f53\u7136\u8fd9\u6837\u505a\u7684\u80cc\u540e\u80af\u5b9a\u6709\u7740\u975e\u5e38\u591a\u7684\u539f\u56e0\uff0c\u5728\u6b64\u6211\u4eec\u4e0d\u53bb\u8ffd\u7a76\uff0c\u5982\u679c\u8bfb\u8005\u611f\u5174\u8da3\uff0c\u53c2\u89c1 Subroutine \u3002\u4e0b\u9762\u5bf9\u8fd9\u4e2a\u7b54\u6848\u8fdb\u884c\u4e00\u4e9b\u975e\u4e13\u4e1a\u7684\u89e3\u91ca\uff1a \u9700\u8981\u6ce8\u610f\u7684\u662f\u6240\u95ee\u7684\u662f\u201c action \u201d\uff0c\u5373**\u8fd0\u884c**\uff0c\u5728\u5404\u79cd\u9ad8\u7ea7\u8bed\u8a00\u7684\u7a0b\u5e8f\uff0c\u6211\u4eec\u662f\u901a\u8fc7**\u8c03\u7528\u51fd\u6570**\u6765\u8fdb\u884c**\u8fd0\u884c**\u7684\uff0c\u4e00\u4e2a\u51fd\u6570\u53ea\u6709\u88ab\u8c03\u7528\uff0c\u5b83\u7684\u51fd\u6570\u4f53\u4e2d\u7684statement\u624d\u80fd\u591f\u88ab\u6267\u884c\uff0c\u9ad8\u7ea7\u8bed\u8a00\u7a0b\u5e8f\u4e2d\uff0c\u662f\u65e0\u6cd5\u5355\u72ec\u6267\u884c\u4e00\u4e2astatement\u7684\uff0c\u4e00\u4e2astatement\u53ea\u6709\u7f6e\u5165\u4e00\u4e2afunction\u4e2d\uff0c\u624d\u53ef\u80fd\u88ab\u6267\u884c\u5230\uff0c\u6240\u4ee5thread\u7684unit of user-defined action\u662f\u51fd\u6570\u3002 Process\u7684\u5165\u53e3\u662f main function \uff0c\u7136\u540e\u8be5\u51fd\u6570\u4e2d\u7684\u8bed\u53e5\u88ab\u4f9d\u6b21\u6267\u884c\uff0c\u8fd9\u8bf4\u660ethread\u7684unit of user-defined action\u662f\u51fd\u6570\u3002 \u51fd\u6570\u7684\u53e6\u5916\u4e00\u4e2a\u540d\u79f0\u662f\u201c callable unit \u201d\uff0c\u201ccallable unit\u201d\uff0c\u5176\u5b9e\u8fd9\u4e5f\u8bf4\u660e\u4e86\u5b83\u662fthread\u7684unit of user-defined action\u3002 pthread_create \u7684\u5165\u53c2 start_routine \u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff08\u7ebf\u7a0b\u6267\u884c\u51fd\u6570\uff09\uff0c\u8fd9\u8bf4\u660ethread\u7684unit of user-defined action\u662f\u51fd\u6570\u3002 Linux OS\u7684 clone \u7684\u5165\u53c2 fn \u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u8fd9\u8bf4\u660ethread\u7684unit of user-defined action\u662f\u51fd\u6570\u3002 exec \u7cfb\u5217\u51fd\u6570\u7684\u53c2\u6570 pathname \u6307\u5b9a\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8fd9\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5165\u53e3\u662fmain\u51fd\u6570\uff0c\u5176\u5b9e\u8fd9\u76f8\u5f53\u4e8e\u4e0a\u9762\u7684 pthread_create \u548c clone \u7684\u5165\u53c2\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u3002 \u603b\u7ed3 \u4e00\u4e2a\u51fd\u6570\u662f\u7531\u591a\u4e2astatement\u7ec4\u6210\uff0c\u4e00\u4e2astatement\u6709\u591a\u4e2ainstruction\u7ec4\u6210\u3002thread\u7684\u8fd0\u884c\u5355\u4f4dfunction\u663e\u7136\u5bf9\u5e94\u4e86\u591a\u4e2ainstruction\u3002 Linux OS kernel\u7684unit of user-defined action Linux OS kernel\u7684unit of user-defined action\u662f\u51fd\u6570\u3002 \u5728\u5de5\u7a0b Linux-OS \u7684 Linux OS kernel is event-driven \u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5206\u6790\u4e86\uff1a \u57fa\u672c\u4e0a\u6240\u6709\u7684hardware\u90fd\u662f\u901a\u8fc7 interrupt \u6765\u901a\u77e5OS kernel\u7684\uff0c\u7136\u540e\u5176\u5bf9\u5e94\u7684 Interrupt handler \u4f1a\u88ab\u89e6\u53d1\u6267\u884c\uff0c\u4e5f\u5c31\u662fOS kernel\u662f interrupt-driven \u7684 Interrupt handler \u672c\u8d28\u4e0a\u662f\u51fd\u6570\u3002 \u5173\u4e8e\u6b64\u7684\u53e6\u5916\u4e00\u4e2a\u4f8b\u8bc1\u662fsignal handler\uff0csignal handler\u672c\u8d28\u4e0a\u4e5f\u662f\u51fd\u6570\uff0c\u53c2\u89c1 SIGNAL(7) \u3002 \u53c2\u89c1 Linux-OS \u5de5\u7a0b\u7684\u6587\u7ae0Conventions\u3002 CPU access memory\u7684\u5355\u4f4d\u662f word \u53c2\u89c1\u5de5\u7a0b Hardware \u7684 Memory-alignment \u7ae0\u8282\u3002 Thread\u662fOS kernel\u8c03\u5ea6\u7684\u5355\u4f4d \u7ef4\u57fa\u767e\u79d1 Thread (computing) \uff1a In computer science , a thread of execution is the smallest sequence of programmed instructions that can be managed independently by a scheduler , which is typically a part of the operating system . \u5de5\u7a0b Process-model \u7684 Process model OS\u662f\u57fa\u4e8eprocess\u7684resource\u5206\u914d\uff0c\u57fa\u4e8e thread \u7684\u8c03\u5ea6\u3002 Object-oriented programming \u4e2dobject\u662f\u4ea4\u4e92\u5355\u4f4d Protocol data unit Database transaction","title":"Introduction"},{"location":"Post/Law/Unit/#unit","text":"\"unit\"\u7684\u610f\u601d\u662f\u201c\u5355\u4f4d\u201d\uff0c\u672c\u6587\u5bf9\u5404\u79cdunit\u8fdb\u884c\u603b\u7ed3\u3002","title":"Unit"},{"location":"Post/Law/Unit/#unit#and#atomic","text":"\u4e00\u822c\uff0c\u6700\u5c0f\u7684unit\u662fatomic\u7684\uff0c\u4e5f\u5c31\u662f\u6700\u5c0f\u7684unit\u662f\u4e0d\u53ef\u5206\u7684\uff0c\u6ca1\u6709\u534a\u4e2a\u7684\u6982\u5ff5\u3002\u5173\u4e8eatomic\uff0c\u53c2\u89c1\u6587\u7ae0\u300aAtomic\u300b\u3002 \u5b83\u7684tag\u4e3atag-unit-and-atomic\uff1b","title":"Unit and atomic"},{"location":"Post/Law/Unit/#unit#of#user-defined#action","text":"\u672c\u8282\u6807\u9898\u4e2d\u7684\u201cunit of user-defined action\u201d\u662f\u6211\u5728\u9605\u8bfb\u9f99\u4e66 Chapter 7.2 Stack Allocation of Space \u65f6\u9047\u5230\u7684\uff0c\u539f\u6587\u5982\u4e0b\uff1a Almost all compilers for languages that use procedures, functions, or methods as units of user-defined actions manage at least part of their run-time memory as a stack. \u201caction\u201d\u7684\u610f\u601d\u662f\u201c\u52a8\u4f5c\u201d\u3001\u201c\u8fd0\u884c\u201d\u3001\u201c\u6267\u884c\u201d\uff0c\u201cunit of user-defined action\u201d\u6240\u5f3a\u8c03\u7684\u662f\u8fd0\u884c\u3002\u53d7 \u5206\u5c42\u601d\u60f3 \u7684\u5f71\u54cd\uff0c\u6211\u5f00\u59cb\u4ece\u4e0d\u540c\u7684\u5c42\u6b21\u6765\u5bf9\u6bd4\u5206\u6790\uff0c\u4e0b\u9762\u603b\u7ed3\u4e86\u5404\u4e2a\u5c42\u6b21\u7684user-defined action\u3002","title":"Unit of user-defined action"},{"location":"Post/Law/Unit/#cpuunit#of#user-defined#action","text":"CPU\u7684unit of user-defined action\u662f instruction \uff0c\u4e5f\u53ef\u4ee5\u8bf4CPU\u7684\u6267\u884c\u5355\u4f4d\u662f instruction \u3002\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u4e00\u822c\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528 instruction \uff0c\u5f80\u5f80\u662f\u7531compiler\u5c06\u9ad8\u7ea7\u8bed\u8a00\u7f16\u5199\u7684program\u7ffb\u8bd1\u4e3a\u5bf9\u5e94\u7684machine language\u7684program\u3002","title":"CPU\u7684unit of user-defined action"},{"location":"Post/Law/Unit/#programming#languageunit#of#user-defined#action","text":"Programming language\uff08\u90e8\u5206\uff09\u7684unit of user-defined action\u662fstatement\u3002 \u7ef4\u57fa\u767e\u79d1 Statement \uff1a In computer programming , a statement is a syntactic unit of an imperative programming language that expresses some action to be carried out. A program written in such a language is formed by a sequence of one or more statements. A statement may have internal components (e.g., expressions ). \u6211\u4eec\u5728\u8fdb\u884c\u7f16\u7a0b\u7684\u65f6\u5019\uff0c\u4f7f\u7528statement\u6765\u63cf\u8ff0\u7a0b\u5e8f\u7684\u8fd0\u884c\u903b\u8f91\uff0c\u663e\u7136programming language\u7684unit of user-defined action\u5c31\u662fstatement\u3002 \u7531\u7f16\u8bd1\u5668\u5c06statement\u7ffb\u8bd1\u4e3ainstruction\uff0c\u4e00\u4e2astatement\u53ef\u80fd\u5bf9\u5e94\u591a\u6761instruction\u3002","title":"Programming language\u7684unit of user-defined action"},{"location":"Post/Law/Unit/#processthreadunit#of#user-defined#action","text":"\u73b0\u4ee3OS\u4e2d\uff0cthread\u662f\u8c03\u5ea6\u5355\u4f4d\uff0c\u5982\u679c\u4e0d\u8fdb\u884cmulti-thread programming\u7684\u8bdd\uff0c\u5219process\u53ea\u6709\u4e00\u4e2athread\uff0c\u6240\u4ee5\u6807\u9898\u4e2d\u4e5f\u5305\u542b\u4e86process\u548cthread\uff08\u5173\u4e8e\u6b64\uff0c\u53c2\u89c1\u5de5\u7a0b Linux-OS \u7684\u6587\u7ae0 Process model \uff09\u3002 Thread\u7684unit of user-defined **action**\u662f\u4ec0\u4e48\uff1f\u8bfb\u8005\u53ef\u4ee5\u601d\u8003\u4e00\u4e0b\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5f53\u6211\u4eec\u8be2\u95ee\u8fd9\u4e2a\u95ee\u9898\u7684\u65f6\u5019\uff0c\u6211\u4eec\u662f\u7ad9\u5728Process\u5c42\uff0c\u800c\u4e0d\u662f\u7ad9\u5728CPU\u5c42\uff0c\u6240\u4ee5\u7b54\u6848\u80af\u5b9a\u662f\u6bd4instruction\u66f4\u52a0\u5927\uff08\u6216\u8005\u8bf4\u662f\u201c\u9ad8\u7ea7\u201d\uff09\u7684\u4e00\u4e2aunit\uff08\u5355\u4f4d\uff09\u3002\u5176\u5b9e\u8bfb\u8005\u5373\u4f7f\u56de\u5230\u7684\u662finstruction\uff0c\u4e5f\u4e0d\u80fd\u5224\u5b9a\u4f60\u662f\u9519\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u7a0b\u5e8f\u6700\u7ec8\u80af\u5b9a\u662f\u9700\u8981\u88ab\u7f16\u7a0b\u6210machine language program\u624d\u80fd\u591f\u7531CPU\u6765\u6267\u884c\uff0c\u4f46\u662f\u663e\u7136\u8fd9\u4e2a\u7b54\u6848\u4e0d\u662f\u6700\u51c6\u786e\u7684\u3002 \u7b54\u6848\u662f\uff1a \u51fd\u6570 \u3002 \u8fd9\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u5176\u5b9e\u5728\u672c\u8282\u6807\u9898\u4e2d\u5df2\u7ecf\u7ed9\u51fa\u4e86\u3002 \u5bf9\u4e8e\u8fd9\u4e2a\u7b54\u6848\u662f\u4e0d\u9700\u8981\u8fdb\u884c\u4e13\u4e1a\u3001\u6df1\u5165\u7684\u89e3\u91ca\uff0c\u56e0\u4e3a\u8fd9\u662f\u89c4\u5b9a\uff0c\u8fd9\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u53d1\u5c55\u591a\u5e74\u5f62\u6210\u7684\u4e8b\u5b9e\uff0c\u5f53\u7136\u8fd9\u6837\u505a\u7684\u80cc\u540e\u80af\u5b9a\u6709\u7740\u975e\u5e38\u591a\u7684\u539f\u56e0\uff0c\u5728\u6b64\u6211\u4eec\u4e0d\u53bb\u8ffd\u7a76\uff0c\u5982\u679c\u8bfb\u8005\u611f\u5174\u8da3\uff0c\u53c2\u89c1 Subroutine \u3002\u4e0b\u9762\u5bf9\u8fd9\u4e2a\u7b54\u6848\u8fdb\u884c\u4e00\u4e9b\u975e\u4e13\u4e1a\u7684\u89e3\u91ca\uff1a \u9700\u8981\u6ce8\u610f\u7684\u662f\u6240\u95ee\u7684\u662f\u201c action \u201d\uff0c\u5373**\u8fd0\u884c**\uff0c\u5728\u5404\u79cd\u9ad8\u7ea7\u8bed\u8a00\u7684\u7a0b\u5e8f\uff0c\u6211\u4eec\u662f\u901a\u8fc7**\u8c03\u7528\u51fd\u6570**\u6765\u8fdb\u884c**\u8fd0\u884c**\u7684\uff0c\u4e00\u4e2a\u51fd\u6570\u53ea\u6709\u88ab\u8c03\u7528\uff0c\u5b83\u7684\u51fd\u6570\u4f53\u4e2d\u7684statement\u624d\u80fd\u591f\u88ab\u6267\u884c\uff0c\u9ad8\u7ea7\u8bed\u8a00\u7a0b\u5e8f\u4e2d\uff0c\u662f\u65e0\u6cd5\u5355\u72ec\u6267\u884c\u4e00\u4e2astatement\u7684\uff0c\u4e00\u4e2astatement\u53ea\u6709\u7f6e\u5165\u4e00\u4e2afunction\u4e2d\uff0c\u624d\u53ef\u80fd\u88ab\u6267\u884c\u5230\uff0c\u6240\u4ee5thread\u7684unit of user-defined action\u662f\u51fd\u6570\u3002 Process\u7684\u5165\u53e3\u662f main function \uff0c\u7136\u540e\u8be5\u51fd\u6570\u4e2d\u7684\u8bed\u53e5\u88ab\u4f9d\u6b21\u6267\u884c\uff0c\u8fd9\u8bf4\u660ethread\u7684unit of user-defined action\u662f\u51fd\u6570\u3002 \u51fd\u6570\u7684\u53e6\u5916\u4e00\u4e2a\u540d\u79f0\u662f\u201c callable unit \u201d\uff0c\u201ccallable unit\u201d\uff0c\u5176\u5b9e\u8fd9\u4e5f\u8bf4\u660e\u4e86\u5b83\u662fthread\u7684unit of user-defined action\u3002 pthread_create \u7684\u5165\u53c2 start_routine \u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff08\u7ebf\u7a0b\u6267\u884c\u51fd\u6570\uff09\uff0c\u8fd9\u8bf4\u660ethread\u7684unit of user-defined action\u662f\u51fd\u6570\u3002 Linux OS\u7684 clone \u7684\u5165\u53c2 fn \u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u8fd9\u8bf4\u660ethread\u7684unit of user-defined action\u662f\u51fd\u6570\u3002 exec \u7cfb\u5217\u51fd\u6570\u7684\u53c2\u6570 pathname \u6307\u5b9a\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8fd9\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5165\u53e3\u662fmain\u51fd\u6570\uff0c\u5176\u5b9e\u8fd9\u76f8\u5f53\u4e8e\u4e0a\u9762\u7684 pthread_create \u548c clone \u7684\u5165\u53c2\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u3002","title":"Process/thread\u7684unit of user-defined action"},{"location":"Post/Law/Unit/#_1","text":"\u4e00\u4e2a\u51fd\u6570\u662f\u7531\u591a\u4e2astatement\u7ec4\u6210\uff0c\u4e00\u4e2astatement\u6709\u591a\u4e2ainstruction\u7ec4\u6210\u3002thread\u7684\u8fd0\u884c\u5355\u4f4dfunction\u663e\u7136\u5bf9\u5e94\u4e86\u591a\u4e2ainstruction\u3002","title":"\u603b\u7ed3"},{"location":"Post/Law/Unit/#linux#os#kernelunit#of#user-defined#action","text":"Linux OS kernel\u7684unit of user-defined action\u662f\u51fd\u6570\u3002 \u5728\u5de5\u7a0b Linux-OS \u7684 Linux OS kernel is event-driven \u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u5206\u6790\u4e86\uff1a \u57fa\u672c\u4e0a\u6240\u6709\u7684hardware\u90fd\u662f\u901a\u8fc7 interrupt \u6765\u901a\u77e5OS kernel\u7684\uff0c\u7136\u540e\u5176\u5bf9\u5e94\u7684 Interrupt handler \u4f1a\u88ab\u89e6\u53d1\u6267\u884c\uff0c\u4e5f\u5c31\u662fOS kernel\u662f interrupt-driven \u7684 Interrupt handler \u672c\u8d28\u4e0a\u662f\u51fd\u6570\u3002 \u5173\u4e8e\u6b64\u7684\u53e6\u5916\u4e00\u4e2a\u4f8b\u8bc1\u662fsignal handler\uff0csignal handler\u672c\u8d28\u4e0a\u4e5f\u662f\u51fd\u6570\uff0c\u53c2\u89c1 SIGNAL(7) \u3002 \u53c2\u89c1 Linux-OS \u5de5\u7a0b\u7684\u6587\u7ae0Conventions\u3002","title":"Linux OS kernel\u7684unit of user-defined action"},{"location":"Post/Law/Unit/#cpu#access#memoryword","text":"\u53c2\u89c1\u5de5\u7a0b Hardware \u7684 Memory-alignment \u7ae0\u8282\u3002","title":"CPU access memory\u7684\u5355\u4f4d\u662fword"},{"location":"Post/Law/Unit/#threados#kernel","text":"\u7ef4\u57fa\u767e\u79d1 Thread (computing) \uff1a In computer science , a thread of execution is the smallest sequence of programmed instructions that can be managed independently by a scheduler , which is typically a part of the operating system . \u5de5\u7a0b Process-model \u7684 Process model OS\u662f\u57fa\u4e8eprocess\u7684resource\u5206\u914d\uff0c\u57fa\u4e8e thread \u7684\u8c03\u5ea6\u3002","title":"Thread\u662fOS kernel\u8c03\u5ea6\u7684\u5355\u4f4d"},{"location":"Post/Law/Unit/#object-oriented#programmingobject","text":"","title":"Object-oriented programming\u4e2dobject\u662f\u4ea4\u4e92\u5355\u4f4d"},{"location":"Post/Law/Unit/#protocol#data#unit","text":"","title":"Protocol data unit"},{"location":"Post/Law/Unit/#database#transaction","text":"","title":"Database transaction"},{"location":"Post/TODO-Turing/","text":"\u5173\u4e8e\u672c\u7ae0 \u672c\u7ae0\u68b3\u7406\u8ba1\u7b97\u673a\u79d1\u5b66\u4e4b\u7236 Alan Turing \u7684\u4e00\u4e9b\u6210\u679c\u3002","title":"Introduction"},{"location":"Post/TODO-Turing/#_1","text":"\u672c\u7ae0\u68b3\u7406\u8ba1\u7b97\u673a\u79d1\u5b66\u4e4b\u7236 Alan Turing \u7684\u4e00\u4e9b\u6210\u679c\u3002","title":"\u5173\u4e8e\u672c\u7ae0"},{"location":"Post/TODO-Turing/Turing-completeness/","text":"Turing completeness \u5728\u9605\u8bfb\u7ef4\u57fa\u767e\u79d1 Recursion (computer science) \u7684\u65f6\u5019\uff0c\u78b0\u5230\u4e86\u8fd9\u4e2a\u6982\u5ff5\u3002 \u7ef4\u57fa\u767e\u79d1 Turing completeness","title":"Turing-completeness"},{"location":"Post/TODO-Turing/Turing-completeness/#turing#completeness","text":"\u5728\u9605\u8bfb\u7ef4\u57fa\u767e\u79d1 Recursion (computer science) \u7684\u65f6\u5019\uff0c\u78b0\u5230\u4e86\u8fd9\u4e2a\u6982\u5ff5\u3002","title":"Turing completeness"},{"location":"Post/TODO-Turing/Turing-completeness/#turing#completeness_1","text":"","title":"\u7ef4\u57fa\u767e\u79d1Turing completeness"},{"location":"Post/Thoughts/","text":"\u4e00\u4e9b\u60f3\u6cd5 \u672c\u6587\u603b\u7ed3\u6211\u5199\u4f5c\u7684\u601d\u8def\u3001\u601d\u60f3\uff0c\u5b83\u8d2f\u7a7f\u4e86\u6211\u7684\u6240\u6709\u5de5\u7a0b\u3002 \u77e5\u8bc6\u5982\u6b64\u7e41\u6742\uff0c\u6240\u4ee5\u5bf9\u5b83\u4eec\u7684\u7ec4\u7ec7\uff0c\u68b3\u7406\u975e\u5e38\u91cd\u8981 \u6211\u7684\u5199\u4f5c\u539f\u5219\u3002 1\u3001\u68b3\u7406 \u5e94\u8be5\u575a\u6301\u5982\u4e0a\u539f\u5219\u6765\u8fdb\u884c\u7f16\u5199\uff0c\u7ed9\u51fa\u6240\u5f15\u7528\u7684\u8d44\u6e90\u7684\u94fe\u63a5\u3002 2\u3001\u6784\u5efabig picture \u6784\u5efa\u7406\u8bba\u6846\u67b6\uff0c\u4ece\u66f4\u9ad8\u7684\u89d2\u5ea6\u6765\u601d\u8003\u95ee\u9898\u3002 \u4ece\u66f4\u9ad8\u7684\u89d2\u5ea6\u6765\u601d\u8003\u95ee\u9898 \u4ece\u5177\u4f53\u95ee\u9898\u4e2d\u8df3\u8131\u51fa\u6765\uff0c\u4ece\u7406\u8bba\u7684\u9ad8\u5ea6\u6765\u5206\u6790\u5b83\uff0c\u5982\u4ececompiler principle\u6269\u5c55\u5230 automata-and-formal-language \uff0c\u7136\u540e\u6269\u5f20\u5230 Theory of computation \u3002 \u4e00\u4e9b\u5e38\u7528\u7684\u89d2\u5ea6\uff1a 1) \u4ece\u65f6\u7a7a\u7684\u89d2\u5ea6 Application 1: \"\u4ee5\u53d1\u5c55\u7684\u773c\u5149\u6765\u770b\u5f85\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6f14\u8fdb\" \u4e0b\u9762\u63cf\u8ff0\u7684\"\u4ee5\u53d1\u5c55\u7684\u773c\u5149\u6765\u770b\u5f85\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6f14\u8fdb\"\u5c31\u662f\u5178\u578b\u7684\u4f8b\u5b50\u3002 Application 2: lifetime \u4f7f\u7528lifetime\u80fd\u591f\u8ba9\u4ee5\u5168\u9762\u3001\u9e1f\u77b0\u7684\u89d2\u5ea6\u6765\u5206\u6790\u7814\u7a76\u5bf9\u8c61\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u4f8b\u5b50: \u7ae0\u8282 lifetime of object \u5de5\u7a0bprogramming-language\u7684 C++\\Language-reference\\Basic-concept\\Object\\Lifetime-and-storage-duration\\Lifetime.md lifetime of process \u5de5\u7a0bLinux-OS\u7684 Kernel\\Guide\\Multitasking\\Process-model \u7ae0\u8282 2) \u4ece\u54f2\u5b66\u7684\u89d2\u5ea6 \u5728\u4e0b\u9762\u7684\"\u7406\u8bba \u4e0e \u5b9e\u8df5\"\u7ae0\u8282\u4e2d\uff0c\u63d0\u51fa\u4e86philosophy and design\uff0c\u5b83\u662f\u6211\u4eec\u5206\u6790\u95ee\u9898\u7684\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u89c6\u89d2\uff0c\u6bd4\u5982 Formalism (philosophy of mathematics) \u3002 3) \u4ece\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u6765\u601d\u8003 \u4e0b\u9762\u7684\"\u4ece\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u6765\u601d\u8003\"\u4f1a\u5bf9\u5b83\u8fdb\u884c\u5c55\u5f00\u8bf4\u660e\u3002 \u4ee5\u53d1\u5c55\u7684\u773c\u5149\u6765\u770b\u5f85\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6f14\u8fdb NOTE: tag-development-tendency \u8ba1\u7b97\u673a\u79d1\u5b66\u662f\u5728\u4e0d\u65ad\u5730\u6f14\u8fdb\u3001\u4e0d\u65ad\u5f3a\u5927\u7684\uff0c\u4eca\u5929\u6211\u4eec\u6240\u7ecf\u5386\u7684\u8fd9\u4e9b\u53d8\u9769\uff08\u5982AI\u3001blockchain\u7b49\uff09\u5c06\u79f0\u4e3a\u540e\u4e16\u4eba\u4eec\u773c\u4e2d\u7684\u5386\u53f2\uff0c\u6211\u4eec\u9700\u8981\u4e0d\u65ad\u5730\u8ddf\u8fdb\u65b0\u7684\u6280\u672f\uff0c\u800c\u4e14\u5728\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u68b3\u7406\u6280\u672f\u7684\u53d1\u5c55\u8109\u7edc\uff0c\u8fd9\u6837\u6211\u4eec\u80fd\u591f\u66f4\u597d\u5730\u638c\u63e1\u65b0\u6280\u672f\u6240\u6539\u53d8\u7684\u662f\u4ec0\u4e48\u3001\u53d1\u660e\u5bb6\u3001\u7814\u7a76\u5458\u4eec\u4e3a\u4ec0\u4e48\u53d1\u660e\u521b\u9020\u5b83\u3002 \u6bd4\u5982\uff1a 1\u3001programming language\u7684\u4e0d\u65ad\u5f15\u5165\u65b0\u7684\u7279\u6027 2\u3001\u4eceApache \u5230 Nginx 3\u3001\u4ecegcc \u5230 llvm 4\u3001\u4ece Monolithic kernel \u5230 Microkernel \u4ece\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u6765\u601d\u8003 tag-think-as-a-designer \u6b63\u5982\u5728\u524d\u9762\u7684\u201c\u4ee5\u53d1\u5c55\u7684\u773c\u5149\u6765\u770b\u5f85\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6f14\u8fdb\u201d\u4e2d\u6240\u63cf\u8ff0\u7684\uff0c\u4f5c\u4e3asoftware engineer\uff0c\u6211\u4eec\u9700\u8981\u4e0d\u65ad\u5730\u5b66\u4e60\u3001\u4e0d\u65ad\u5730\u8ddf\u8fdb\u3002\u5982\u679c\u4ece\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u6765\u601d\u8003\u6765\u8fdb\u884c\u601d\u8003\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u638c\u63e1\u5b83\u8fd9\u6837\u8bbe\u8ba1\u7684\u610f\u56fe\uff0c\u5f88\u591a\u95ee\u9898\u90fd\u53d8\u5f97\u5bb9\u6613\u7406\u89e3\u3002 \u4eceOS\u7684\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u51fa\u53d1\u6765\u8fdb\u884c\u601d\u8003\uff08\u53c2\u89c1\u5de5\u7a0b Linux-OS \uff09\u3001\u4eceprogramming language\u7684\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u51fa\u53d1\u6765\u8fdb\u884c\u601d\u8003\uff08\u53c2\u89c1\u5de5\u7a0b programming-language \uff09\uff0c\u4ecedata-system\u7684\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u51fa\u53d1\u6765\u8fdb\u884c\u601d\u8003\uff08\u53c2\u89c1\u5de5\u7a0bparallel-computing\uff09\u3002 \u4e0b\u9762\u662f\u5bf9\u201c\u4ece\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u6765\u601d\u8003\u201d\u7684\u8fdb\u4e00\u6b65\u63cf\u8ff0\uff1a \u610f\u56fe\u51b3\u5b9a\u6700\u7ec8\u7684\u7ed3\u679c \u5728\u9605\u8bfb clang \u7684 Clang vs Other Open Source Compilers \u65f6\uff0c\u5176\u4e2d\u7684\u4e00\u6bb5\u8bdd\u8ba9\u6211\u5370\u8c61\u6df1\u523b\uff1a The goal of this list is to describe how differences in goals lead to different strengths and weaknesses, not to make some compiler look bad. \u5728 Clang vs Other Open Source Compilers \u4e2d\uff0c\u4f5c\u8005\u5bf9\u6bd4\u4e86Clang\u548c\u5176\u5b83\u51e0\u6b3ecompiler\u7684strength\u548cweakness\uff0c\u4ece\u4e2d\u6211\u6240\u9886\u609f\u5230\u7684\u662f\uff1a\u610f\u56fe\u51b3\u5b9a\u6700\u7ec8\u7ed3\u679c\uff0c\u5373\u8f6f\u4ef6\u7684\u8bbe\u8ba1\u8005\u5728\u5f00\u53d1\u8f6f\u4ef6\u4e4b\u524d\u7684\u7684\u76ee\u6807\u6700\u7ec8\u51b3\u5b9a\u4e86\u4ed6\u6240\u5f00\u53d1\u51fa\u8fd9\u8f6f\u4ef6\u7684strength\u548cweakness\uff0c\u6240\u4ee5\uff0c\u9ad8\u660e\u7684\u8bbe\u8ba1\u8005\u5bf9\u4e8e\u8f6f\u4ef6\u7684\u91cd\u8981\u6027\u3002 \u4e0e\u6b64\u7c7b\u4f3c\u7684\u6848\u4f8b\u8fd8\u6709\uff1a git \u4ece\u7279\u6027\u5165\u624b\u6765\u8fdb\u884c\u5206\u6790 \u7279\u6027\u5176\u5b9e\u5c31\u662f\u524d\u9762\u5c0f\u8282\u63cf\u8ff0\u7684\u201c\u610f\u56fe\u201d\uff0c\u5bf9\u4e8e\u7cfb\u7edf\u5ba3\u79f0\u7684\u7279\u6027\uff0c\u601d\u8003\u5b83\u662f\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e2a\u7279\u6027\u7684\u3001\u5b83\u7684\u4ef7\u503c\u3001\u4ee5\u5b83\u4f5c\u4e3a\u5206\u7c7b\u6807\u51c6\u3002 \u6bd4\u5982\u5728programming language\u4e2d: C++\u5ba3\u79f0\u5b83\u662fmultiple-paradigm language\uff0c\u5728idiom\u4e2d\uff0c\u6211\u4eec\u4ee5C++paradigm\u4e3a\u5206\u7c7b\u6807\u51c6\u5bf9\u5b83\u7684\u5404\u79cdparadigm\u8fdb\u884c\u8bf4\u660e\uff1b \u6bd4\u5982\u5728Linux-OS\u4e2d\uff0c\u6211\u4eec\u5bf9Linux OS\u7684multitasking\u7279\u6027\u8fdb\u884c\u4e86\u6df1\u5165\u7684\u5206\u6790\uff1b Internal \u5728\u9605\u8bfbgit\u7684 1.3 Getting Started - What is Git? \u8282\u65f6\u5019\uff0c\u5176\u4e2d\u7684\u8fd9\u6bb5\u8bdd\u4ee4\u6211\u5370\u8c61\u6df1\u523b\uff1a if you understand what Git is and the fundamentals of how it works, then using Git effectively will probably be much easier for you. \u663e\u7136\uff0c\u5b83\u80cc\u540e\u8574\u542b\u7684\u9053\u7406\u80af\u5b9a\u4e0d\u4ec5\u4ec5\u5c40\u9650\u4e8egit\u3002\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8fc7\u4e86 Reinventing the wheel \u7684\u5e74\u4ee3\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u6709\u5927\u91cf\u7684\u3001\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7684\u8f6f\u4ef6\uff0c\u6bd4\u5982operating system\uff0cversion control system\uff0c\u4e00\u4e2a\u4e0d\u4e89\u7684\u4e8b\u5b9e\u662f\uff1a\u5982\u679c\u4e86\u89e3\u8f6f\u4ef6\u7684\u5b9e\u73b0\u539f\u7406\u3001\u5185\u90e8\u7ec6\u8282\uff0c\u90a3\u4e48\u5c31\u80fd\u591f\u9ad8\u6548\u5730\u4f7f\u7528\u5b83\u3002 \u7406\u8bba \u4e0e \u5b9e\u8df5 \u4f5c\u4e3a\u5de5\u7a0b\u5e08\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u9700\u8981\u5b66\u4e60\u7684\u77e5\u8bc6\u5206\u4e3a\u5982\u4e0b\u4e24\u4e2a\u7c7b\u6bd4: \u5206\u7c7b philosophy and design \u9053 \u7406\u8bba tips and tricks \u672f \u65b9\u6cd5\u3001\u5b9e\u8df5 \u8fd9\u5176\u5b9e\u5bf9\u5e94\u7684\u662f\u672c\u8282\u6807\u9898 \u7406\u8bba \u4e0e \u5b9e\u8df5\u3002 \u8fd9\u662f\u6211\u5728\u9605\u8bfb https://www.linuxjournal.com/article/10688 \u65f6\uff0c\u5176\u4e2d\u63d0\u53ca\u7684: Because my column is generally aimed more at tips and tricks and less on philosophy and design, I'm not going to talk much about overall approaches to problem solving. \u9053 \u4e0e \u672f\u3002","title":"Introduction"},{"location":"Post/Thoughts/#_1","text":"\u672c\u6587\u603b\u7ed3\u6211\u5199\u4f5c\u7684\u601d\u8def\u3001\u601d\u60f3\uff0c\u5b83\u8d2f\u7a7f\u4e86\u6211\u7684\u6240\u6709\u5de5\u7a0b\u3002","title":"\u4e00\u4e9b\u60f3\u6cd5"},{"location":"Post/Thoughts/#_2","text":"\u6211\u7684\u5199\u4f5c\u539f\u5219\u3002 1\u3001\u68b3\u7406 \u5e94\u8be5\u575a\u6301\u5982\u4e0a\u539f\u5219\u6765\u8fdb\u884c\u7f16\u5199\uff0c\u7ed9\u51fa\u6240\u5f15\u7528\u7684\u8d44\u6e90\u7684\u94fe\u63a5\u3002 2\u3001\u6784\u5efabig picture \u6784\u5efa\u7406\u8bba\u6846\u67b6\uff0c\u4ece\u66f4\u9ad8\u7684\u89d2\u5ea6\u6765\u601d\u8003\u95ee\u9898\u3002","title":"\u77e5\u8bc6\u5982\u6b64\u7e41\u6742\uff0c\u6240\u4ee5\u5bf9\u5b83\u4eec\u7684\u7ec4\u7ec7\uff0c\u68b3\u7406\u975e\u5e38\u91cd\u8981"},{"location":"Post/Thoughts/#_3","text":"\u4ece\u5177\u4f53\u95ee\u9898\u4e2d\u8df3\u8131\u51fa\u6765\uff0c\u4ece\u7406\u8bba\u7684\u9ad8\u5ea6\u6765\u5206\u6790\u5b83\uff0c\u5982\u4ececompiler principle\u6269\u5c55\u5230 automata-and-formal-language \uff0c\u7136\u540e\u6269\u5f20\u5230 Theory of computation \u3002 \u4e00\u4e9b\u5e38\u7528\u7684\u89d2\u5ea6\uff1a 1) \u4ece\u65f6\u7a7a\u7684\u89d2\u5ea6 Application 1: \"\u4ee5\u53d1\u5c55\u7684\u773c\u5149\u6765\u770b\u5f85\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6f14\u8fdb\" \u4e0b\u9762\u63cf\u8ff0\u7684\"\u4ee5\u53d1\u5c55\u7684\u773c\u5149\u6765\u770b\u5f85\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6f14\u8fdb\"\u5c31\u662f\u5178\u578b\u7684\u4f8b\u5b50\u3002 Application 2: lifetime \u4f7f\u7528lifetime\u80fd\u591f\u8ba9\u4ee5\u5168\u9762\u3001\u9e1f\u77b0\u7684\u89d2\u5ea6\u6765\u5206\u6790\u7814\u7a76\u5bf9\u8c61\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u4f8b\u5b50: \u7ae0\u8282 lifetime of object \u5de5\u7a0bprogramming-language\u7684 C++\\Language-reference\\Basic-concept\\Object\\Lifetime-and-storage-duration\\Lifetime.md lifetime of process \u5de5\u7a0bLinux-OS\u7684 Kernel\\Guide\\Multitasking\\Process-model \u7ae0\u8282 2) \u4ece\u54f2\u5b66\u7684\u89d2\u5ea6 \u5728\u4e0b\u9762\u7684\"\u7406\u8bba \u4e0e \u5b9e\u8df5\"\u7ae0\u8282\u4e2d\uff0c\u63d0\u51fa\u4e86philosophy and design\uff0c\u5b83\u662f\u6211\u4eec\u5206\u6790\u95ee\u9898\u7684\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u89c6\u89d2\uff0c\u6bd4\u5982 Formalism (philosophy of mathematics) \u3002 3) \u4ece\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u6765\u601d\u8003 \u4e0b\u9762\u7684\"\u4ece\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u6765\u601d\u8003\"\u4f1a\u5bf9\u5b83\u8fdb\u884c\u5c55\u5f00\u8bf4\u660e\u3002","title":"\u4ece\u66f4\u9ad8\u7684\u89d2\u5ea6\u6765\u601d\u8003\u95ee\u9898"},{"location":"Post/Thoughts/#_4","text":"NOTE: tag-development-tendency \u8ba1\u7b97\u673a\u79d1\u5b66\u662f\u5728\u4e0d\u65ad\u5730\u6f14\u8fdb\u3001\u4e0d\u65ad\u5f3a\u5927\u7684\uff0c\u4eca\u5929\u6211\u4eec\u6240\u7ecf\u5386\u7684\u8fd9\u4e9b\u53d8\u9769\uff08\u5982AI\u3001blockchain\u7b49\uff09\u5c06\u79f0\u4e3a\u540e\u4e16\u4eba\u4eec\u773c\u4e2d\u7684\u5386\u53f2\uff0c\u6211\u4eec\u9700\u8981\u4e0d\u65ad\u5730\u8ddf\u8fdb\u65b0\u7684\u6280\u672f\uff0c\u800c\u4e14\u5728\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u68b3\u7406\u6280\u672f\u7684\u53d1\u5c55\u8109\u7edc\uff0c\u8fd9\u6837\u6211\u4eec\u80fd\u591f\u66f4\u597d\u5730\u638c\u63e1\u65b0\u6280\u672f\u6240\u6539\u53d8\u7684\u662f\u4ec0\u4e48\u3001\u53d1\u660e\u5bb6\u3001\u7814\u7a76\u5458\u4eec\u4e3a\u4ec0\u4e48\u53d1\u660e\u521b\u9020\u5b83\u3002 \u6bd4\u5982\uff1a 1\u3001programming language\u7684\u4e0d\u65ad\u5f15\u5165\u65b0\u7684\u7279\u6027 2\u3001\u4eceApache \u5230 Nginx 3\u3001\u4ecegcc \u5230 llvm 4\u3001\u4ece Monolithic kernel \u5230 Microkernel","title":"\u4ee5\u53d1\u5c55\u7684\u773c\u5149\u6765\u770b\u5f85\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6f14\u8fdb"},{"location":"Post/Thoughts/#_5","text":"tag-think-as-a-designer \u6b63\u5982\u5728\u524d\u9762\u7684\u201c\u4ee5\u53d1\u5c55\u7684\u773c\u5149\u6765\u770b\u5f85\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u6f14\u8fdb\u201d\u4e2d\u6240\u63cf\u8ff0\u7684\uff0c\u4f5c\u4e3asoftware engineer\uff0c\u6211\u4eec\u9700\u8981\u4e0d\u65ad\u5730\u5b66\u4e60\u3001\u4e0d\u65ad\u5730\u8ddf\u8fdb\u3002\u5982\u679c\u4ece\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u6765\u601d\u8003\u6765\u8fdb\u884c\u601d\u8003\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u638c\u63e1\u5b83\u8fd9\u6837\u8bbe\u8ba1\u7684\u610f\u56fe\uff0c\u5f88\u591a\u95ee\u9898\u90fd\u53d8\u5f97\u5bb9\u6613\u7406\u89e3\u3002 \u4eceOS\u7684\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u51fa\u53d1\u6765\u8fdb\u884c\u601d\u8003\uff08\u53c2\u89c1\u5de5\u7a0b Linux-OS \uff09\u3001\u4eceprogramming language\u7684\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u51fa\u53d1\u6765\u8fdb\u884c\u601d\u8003\uff08\u53c2\u89c1\u5de5\u7a0b programming-language \uff09\uff0c\u4ecedata-system\u7684\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u51fa\u53d1\u6765\u8fdb\u884c\u601d\u8003\uff08\u53c2\u89c1\u5de5\u7a0bparallel-computing\uff09\u3002 \u4e0b\u9762\u662f\u5bf9\u201c\u4ece\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u6765\u601d\u8003\u201d\u7684\u8fdb\u4e00\u6b65\u63cf\u8ff0\uff1a","title":"\u4ece\u8bbe\u8ba1\u8005\u7684\u89d2\u5ea6\u6765\u601d\u8003"},{"location":"Post/Thoughts/#_6","text":"\u5728\u9605\u8bfb clang \u7684 Clang vs Other Open Source Compilers \u65f6\uff0c\u5176\u4e2d\u7684\u4e00\u6bb5\u8bdd\u8ba9\u6211\u5370\u8c61\u6df1\u523b\uff1a The goal of this list is to describe how differences in goals lead to different strengths and weaknesses, not to make some compiler look bad. \u5728 Clang vs Other Open Source Compilers \u4e2d\uff0c\u4f5c\u8005\u5bf9\u6bd4\u4e86Clang\u548c\u5176\u5b83\u51e0\u6b3ecompiler\u7684strength\u548cweakness\uff0c\u4ece\u4e2d\u6211\u6240\u9886\u609f\u5230\u7684\u662f\uff1a\u610f\u56fe\u51b3\u5b9a\u6700\u7ec8\u7ed3\u679c\uff0c\u5373\u8f6f\u4ef6\u7684\u8bbe\u8ba1\u8005\u5728\u5f00\u53d1\u8f6f\u4ef6\u4e4b\u524d\u7684\u7684\u76ee\u6807\u6700\u7ec8\u51b3\u5b9a\u4e86\u4ed6\u6240\u5f00\u53d1\u51fa\u8fd9\u8f6f\u4ef6\u7684strength\u548cweakness\uff0c\u6240\u4ee5\uff0c\u9ad8\u660e\u7684\u8bbe\u8ba1\u8005\u5bf9\u4e8e\u8f6f\u4ef6\u7684\u91cd\u8981\u6027\u3002 \u4e0e\u6b64\u7c7b\u4f3c\u7684\u6848\u4f8b\u8fd8\u6709\uff1a git","title":"\u610f\u56fe\u51b3\u5b9a\u6700\u7ec8\u7684\u7ed3\u679c"},{"location":"Post/Thoughts/#_7","text":"\u7279\u6027\u5176\u5b9e\u5c31\u662f\u524d\u9762\u5c0f\u8282\u63cf\u8ff0\u7684\u201c\u610f\u56fe\u201d\uff0c\u5bf9\u4e8e\u7cfb\u7edf\u5ba3\u79f0\u7684\u7279\u6027\uff0c\u601d\u8003\u5b83\u662f\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e2a\u7279\u6027\u7684\u3001\u5b83\u7684\u4ef7\u503c\u3001\u4ee5\u5b83\u4f5c\u4e3a\u5206\u7c7b\u6807\u51c6\u3002 \u6bd4\u5982\u5728programming language\u4e2d: C++\u5ba3\u79f0\u5b83\u662fmultiple-paradigm language\uff0c\u5728idiom\u4e2d\uff0c\u6211\u4eec\u4ee5C++paradigm\u4e3a\u5206\u7c7b\u6807\u51c6\u5bf9\u5b83\u7684\u5404\u79cdparadigm\u8fdb\u884c\u8bf4\u660e\uff1b \u6bd4\u5982\u5728Linux-OS\u4e2d\uff0c\u6211\u4eec\u5bf9Linux OS\u7684multitasking\u7279\u6027\u8fdb\u884c\u4e86\u6df1\u5165\u7684\u5206\u6790\uff1b","title":"\u4ece\u7279\u6027\u5165\u624b\u6765\u8fdb\u884c\u5206\u6790"},{"location":"Post/Thoughts/#internal","text":"\u5728\u9605\u8bfbgit\u7684 1.3 Getting Started - What is Git? \u8282\u65f6\u5019\uff0c\u5176\u4e2d\u7684\u8fd9\u6bb5\u8bdd\u4ee4\u6211\u5370\u8c61\u6df1\u523b\uff1a if you understand what Git is and the fundamentals of how it works, then using Git effectively will probably be much easier for you. \u663e\u7136\uff0c\u5b83\u80cc\u540e\u8574\u542b\u7684\u9053\u7406\u80af\u5b9a\u4e0d\u4ec5\u4ec5\u5c40\u9650\u4e8egit\u3002\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u8fc7\u4e86 Reinventing the wheel \u7684\u5e74\u4ee3\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u6709\u5927\u91cf\u7684\u3001\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u7684\u8f6f\u4ef6\uff0c\u6bd4\u5982operating system\uff0cversion control system\uff0c\u4e00\u4e2a\u4e0d\u4e89\u7684\u4e8b\u5b9e\u662f\uff1a\u5982\u679c\u4e86\u89e3\u8f6f\u4ef6\u7684\u5b9e\u73b0\u539f\u7406\u3001\u5185\u90e8\u7ec6\u8282\uff0c\u90a3\u4e48\u5c31\u80fd\u591f\u9ad8\u6548\u5730\u4f7f\u7528\u5b83\u3002","title":"Internal"},{"location":"Post/Thoughts/#_8","text":"\u4f5c\u4e3a\u5de5\u7a0b\u5e08\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u9700\u8981\u5b66\u4e60\u7684\u77e5\u8bc6\u5206\u4e3a\u5982\u4e0b\u4e24\u4e2a\u7c7b\u6bd4: \u5206\u7c7b philosophy and design \u9053 \u7406\u8bba tips and tricks \u672f \u65b9\u6cd5\u3001\u5b9e\u8df5 \u8fd9\u5176\u5b9e\u5bf9\u5e94\u7684\u662f\u672c\u8282\u6807\u9898 \u7406\u8bba \u4e0e \u5b9e\u8df5\u3002 \u8fd9\u662f\u6211\u5728\u9605\u8bfb https://www.linuxjournal.com/article/10688 \u65f6\uff0c\u5176\u4e2d\u63d0\u53ca\u7684: Because my column is generally aimed more at tips and tricks and less on philosophy and design, I'm not going to talk much about overall approaches to problem solving. \u9053 \u4e0e \u672f\u3002","title":"\u7406\u8bba \u4e0e \u5b9e\u8df5"},{"location":"Post/draft/Binary-in-computer-sicence/","text":"Binary in computer science Binary tree Binary Search Algorithm Quicksort","title":"Binary in computer science"},{"location":"Post/draft/Binary-in-computer-sicence/#binary#in#computer#science","text":"","title":"Binary in computer science"},{"location":"Post/draft/Binary-in-computer-sicence/#binary#tree","text":"","title":"Binary tree"},{"location":"Post/draft/Binary-in-computer-sicence/#binary#search#algorithm","text":"","title":"Binary Search Algorithm"},{"location":"Post/draft/Binary-in-computer-sicence/#quicksort","text":"","title":"Quicksort"},{"location":"Post/draft/One-to-multiple/","text":"One to multiple \u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u5f88\u591a\u4e8b\u7269\u7684\u53d1\u62db\u8c8c\u4f3c\u90fd\u662f\u6cbf\u7740\u4eceone\u5230multiple\uff0c\u800c\u9010\u6b65\u5f3a\u5927\u7684\u3002 \u6bd4\u5982single process\u5230multiple process\uff0c\u4ecesingle thread\u5230multiple thread\uff0c\u5173\u4e8e\u6b64\u53c2\u89c1\u5de5\u7a0bparallel-computing\u3002 \u8fdb\u5316\uff1a\u4ecelist\u5230tree\uff0c\u4ecetree\u5230graph\uff1b \u9000\u5316\uff1agraph\u9000\u5316\u4e3atree\uff0ctree\u9000\u5316\u4e3alist\uff1b \u4ece\u5355\u9012\u5f52\u5230\u591a\u9012\u5f52\u3002 \u4eceone\u5230multiple\uff0c\u7cfb\u7edf\u7684\u80fd\u529b\u662f\u8d8a\u6765\u8d8a\u5f3a\u5927\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4e5f\u4f34\u968f\u7740\u5b9e\u73b0\u7684\u590d\u6742\u5ea6\u7684\u63d0\u5347\u3002","title":"One to multiple"},{"location":"Post/draft/One-to-multiple/#one#to#multiple","text":"\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u5f88\u591a\u4e8b\u7269\u7684\u53d1\u62db\u8c8c\u4f3c\u90fd\u662f\u6cbf\u7740\u4eceone\u5230multiple\uff0c\u800c\u9010\u6b65\u5f3a\u5927\u7684\u3002 \u6bd4\u5982single process\u5230multiple process\uff0c\u4ecesingle thread\u5230multiple thread\uff0c\u5173\u4e8e\u6b64\u53c2\u89c1\u5de5\u7a0bparallel-computing\u3002 \u8fdb\u5316\uff1a\u4ecelist\u5230tree\uff0c\u4ecetree\u5230graph\uff1b \u9000\u5316\uff1agraph\u9000\u5316\u4e3atree\uff0ctree\u9000\u5316\u4e3alist\uff1b \u4ece\u5355\u9012\u5f52\u5230\u591a\u9012\u5f52\u3002 \u4eceone\u5230multiple\uff0c\u7cfb\u7edf\u7684\u80fd\u529b\u662f\u8d8a\u6765\u8d8a\u5f3a\u5927\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4e5f\u4f34\u968f\u7740\u5b9e\u73b0\u7684\u590d\u6742\u5ea6\u7684\u63d0\u5347\u3002","title":"One to multiple"},{"location":"Post/draft/Separation-and-independent/","text":"\u672c\u6587\u76ee\u524d\u662f\u8349\u7a3f\u72b6\u6001\u3002 Separation Separation of protection and security Separation of concerns Separation of mechanism and policy Separation of protection and security \u5982\u4f55\u5b9e\u73b0\u9694\u79bb\uff1f \u53ef\u4ee5\u4f7f\u7528 namespace \u9694\u79bb\u4e0e\u72ec\u7acb \u4e3a\u4e86\u80fd\u591f\u72ec\u7acb\uff0c\u5c31\u9700\u8981\u4e00\u5b9a\u7684\u9694\u79bb\uff0c\u5c31\u9700\u8981\u6709\u81ea\u5df1\u7684\u4e00\u5957\u57fa\u7840\u8bbe\u65bd\u3002 The hidden implementation thinking in java\u7684\u300aThe hidden implementation\u300b\u7ae0\u8282\u3002","title":"Separation and independent"},{"location":"Post/draft/Separation-and-independent/#separation","text":"","title":"Separation"},{"location":"Post/draft/Separation-and-independent/#separation#of#protection#and#security","text":"","title":"Separation of protection and security"},{"location":"Post/draft/Separation-and-independent/#separation#of#concerns","text":"","title":"Separation of concerns"},{"location":"Post/draft/Separation-and-independent/#separation#of#mechanism#and#policy","text":"","title":"Separation of mechanism and policy"},{"location":"Post/draft/Separation-and-independent/#separation#of#protection#and#security_1","text":"","title":"Separation of protection and security"},{"location":"Post/draft/Separation-and-independent/#_1","text":"\u53ef\u4ee5\u4f7f\u7528 namespace","title":"\u5982\u4f55\u5b9e\u73b0\u9694\u79bb\uff1f"},{"location":"Post/draft/Separation-and-independent/#_2","text":"\u4e3a\u4e86\u80fd\u591f\u72ec\u7acb\uff0c\u5c31\u9700\u8981\u4e00\u5b9a\u7684\u9694\u79bb\uff0c\u5c31\u9700\u8981\u6709\u81ea\u5df1\u7684\u4e00\u5957\u57fa\u7840\u8bbe\u65bd\u3002","title":"\u9694\u79bb\u4e0e\u72ec\u7acb"},{"location":"Post/draft/Separation-and-independent/#the#hidden#implementation","text":"thinking in java\u7684\u300aThe hidden implementation\u300b\u7ae0\u8282\u3002","title":"The hidden implementation"},{"location":"Post/draft/Context/","text":"Context \u201ccontext\u201d\u662f\u4e00\u4e2a\u6211\u4eec\u7ecf\u5e38\u78b0\u5230\u7684\u8bcd\uff0c\u5b83\u7684\u542b\u4e49\u662f\u201c\u4e0a\u4e0b\u6587\u201d\uff0c\u6240\u8c13\u201c\u4e0a\u4e0b\u6587\u201d\uff0c\u8574\u542b\u4e2d\u201c\u5916\u90e8\u73af\u5883\u201d\u3001\u201c\u5468\u56f4\u73af\u5883\u201d\u7684\u610f\u601d\u3002 \u548ccontext\u5bc6\u5207\u76f8\u5173\u7684\u4e00\u4e2a\u8bcd\u8bed\u662f State (computer science) Context manager python\u4e2d\u7684with\uff0cc++\u4e2d\u7684RAII\u3002 Context switch context\u7684\u8868\u540d\u610f\u601d\u662f\u201c\u4e0a\u4e0b\u6587\u201d\uff0c\u5b83\u6240\u6307\u7684\u662fthread\u8fd0\u884c\u7684\u73af\u5883\uff08hardware \u73af\u5883\uff0c\u5982CPU\u7b49\uff09\uff0c\u5b83\u662f\u5916\u90e8\u7684\uff0c\u662f\u516c\u5171\u7684\uff08\u591a\u4e2athread\u662f\u5171\u7528\u540c\u4e00\u4e2aCPU\u7684\uff09\uff0c\u800c call stack\u5219\u662f\u79c1\u6709\u7684\u3002\u6240\u4ee5context switch\u7684\u65f6\u5019\uff0c\u653e\u5230\u81ea\u5df1\u79c1\u6709\u7684stack\u3002\u53ef\u4ee5\u53c2\u89c1OS book 3.3.1. Hardware Context\u3002 \u4e0e\u6b64\u76f8\u5173\u7684\u4e00\u4e2a\u6982\u5ff5\u662f Reentrancy (computing) \u3002 context-free language \u6211\u89c9\u5f97\u8fd9\u5176\u4e2d\u7684context\u7684\u542b\u4e49\u662f\u201c\u5468\u56f4\u73af\u5883\u201d\u3002 Attention\u673a\u5236\u8be6\u89e3\uff08\u4e00\uff09\u2014\u2014Seq2Seq\u4e2d\u7684Attention \u4e2d\u63d0\u53ca\u4e86context vector\u7684\u6982\u5ff5 Scope (computer science) \u4e00\u4e2aidentifier\u6240\u5904\u7684scope\uff0c\u53ef\u4ee5\u770b\u505a\u662f\u5b83\u6240\u5904\u7684\u73af\u5883\uff0c\u5373context\u3002","title":"Context"},{"location":"Post/draft/Context/#context","text":"\u201ccontext\u201d\u662f\u4e00\u4e2a\u6211\u4eec\u7ecf\u5e38\u78b0\u5230\u7684\u8bcd\uff0c\u5b83\u7684\u542b\u4e49\u662f\u201c\u4e0a\u4e0b\u6587\u201d\uff0c\u6240\u8c13\u201c\u4e0a\u4e0b\u6587\u201d\uff0c\u8574\u542b\u4e2d\u201c\u5916\u90e8\u73af\u5883\u201d\u3001\u201c\u5468\u56f4\u73af\u5883\u201d\u7684\u610f\u601d\u3002 \u548ccontext\u5bc6\u5207\u76f8\u5173\u7684\u4e00\u4e2a\u8bcd\u8bed\u662f State (computer science)","title":"Context"},{"location":"Post/draft/Context/#context#manager","text":"python\u4e2d\u7684with\uff0cc++\u4e2d\u7684RAII\u3002","title":"Context manager"},{"location":"Post/draft/Context/#context#switch","text":"context\u7684\u8868\u540d\u610f\u601d\u662f\u201c\u4e0a\u4e0b\u6587\u201d\uff0c\u5b83\u6240\u6307\u7684\u662fthread\u8fd0\u884c\u7684\u73af\u5883\uff08hardware \u73af\u5883\uff0c\u5982CPU\u7b49\uff09\uff0c\u5b83\u662f\u5916\u90e8\u7684\uff0c\u662f\u516c\u5171\u7684\uff08\u591a\u4e2athread\u662f\u5171\u7528\u540c\u4e00\u4e2aCPU\u7684\uff09\uff0c\u800c call stack\u5219\u662f\u79c1\u6709\u7684\u3002\u6240\u4ee5context switch\u7684\u65f6\u5019\uff0c\u653e\u5230\u81ea\u5df1\u79c1\u6709\u7684stack\u3002\u53ef\u4ee5\u53c2\u89c1OS book 3.3.1. Hardware Context\u3002 \u4e0e\u6b64\u76f8\u5173\u7684\u4e00\u4e2a\u6982\u5ff5\u662f Reentrancy (computing) \u3002","title":"Context switch"},{"location":"Post/draft/Context/#context-free#language","text":"\u6211\u89c9\u5f97\u8fd9\u5176\u4e2d\u7684context\u7684\u542b\u4e49\u662f\u201c\u5468\u56f4\u73af\u5883\u201d\u3002","title":"context-free language"},{"location":"Post/draft/Context/#attentionseq2seqattention","text":"\u4e2d\u63d0\u53ca\u4e86context vector\u7684\u6982\u5ff5","title":"Attention\u673a\u5236\u8be6\u89e3\uff08\u4e00\uff09\u2014\u2014Seq2Seq\u4e2d\u7684Attention"},{"location":"Post/draft/Context/#scope#computer#science","text":"\u4e00\u4e2aidentifier\u6240\u5904\u7684scope\uff0c\u53ef\u4ee5\u770b\u505a\u662f\u5b83\u6240\u5904\u7684\u73af\u5883\uff0c\u5373context\u3002","title":"Scope (computer science)"},{"location":"Post/draft/Formal/Formal/","text":"Formal \u672c\u6587\u76ee\u524d\u5904\u4e8e\u8349\u7a3f\u72b6\u6001\u3002 \u5173\u4e8eFormal\u7684\u4e00\u4e9b\u7d20\u6750\uff1a Formal science automata-and-formal-language Formal proof \uff08\u975e\u5e38\u91cd\u8981\uff09 \u76ee\u524d\u6211\u5bf9formal\u6240\u63a5\u89e6\u6700\u591a\u7684\u662f\u5728 automata-and-formal-language \u4e2d\u6240\u63cf\u8ff0\u7684formal language\uff0c\u6211\u89c9\u5f97formal\u548clogic\u6709\u7740\u975e\u5e38\u5bc6\u5207\u7684\u5173\u8054\u3002 Formal system\uff1a Lambda calculus \u6839\u636e\u4e0d\u540c\u8bed\u5883\uff0cformal\u7684\u542b\u4e49\u53ef\u80fd\u662f\u201c\u5f62\u5f0f\u5316\u201d\uff0c\u4e5f\u53ef\u80fd\u662f\u201c\u6b63\u5f0f\u201d\u3002 Scientific formalism What does \u201cformal\u201d mean?","title":"Formal"},{"location":"Post/draft/Formal/Formal/#formal","text":"\u672c\u6587\u76ee\u524d\u5904\u4e8e\u8349\u7a3f\u72b6\u6001\u3002 \u5173\u4e8eFormal\u7684\u4e00\u4e9b\u7d20\u6750\uff1a Formal science automata-and-formal-language Formal proof \uff08\u975e\u5e38\u91cd\u8981\uff09 \u76ee\u524d\u6211\u5bf9formal\u6240\u63a5\u89e6\u6700\u591a\u7684\u662f\u5728 automata-and-formal-language \u4e2d\u6240\u63cf\u8ff0\u7684formal language\uff0c\u6211\u89c9\u5f97formal\u548clogic\u6709\u7740\u975e\u5e38\u5bc6\u5207\u7684\u5173\u8054\u3002 Formal system\uff1a Lambda calculus \u6839\u636e\u4e0d\u540c\u8bed\u5883\uff0cformal\u7684\u542b\u4e49\u53ef\u80fd\u662f\u201c\u5f62\u5f0f\u5316\u201d\uff0c\u4e5f\u53ef\u80fd\u662f\u201c\u6b63\u5f0f\u201d\u3002 Scientific formalism","title":"Formal"},{"location":"Post/draft/Formal/Formal/#what#does#formal#mean","text":"","title":"What does \u201cformal\u201d mean?"}]}